/opt/conda/envs/python35-paddle120-env/lib/python3.7/site-packages/matplotlib/__init__.py:107: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
  from collections import MutableMapping
/opt/conda/envs/python35-paddle120-env/lib/python3.7/site-packages/matplotlib/rcsetup.py:20: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
  from collections import Iterable, Mapping
/opt/conda/envs/python35-paddle120-env/lib/python3.7/site-packages/matplotlib/colors.py:53: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
  from collections import Sized
/opt/conda/envs/python35-paddle120-env/lib/python3.7/site-packages/scipy/linalg/__init__.py:212: DeprecationWarning: The module numpy.dual is deprecated.  Instead of using dual, use the functions directly from numpy or scipy.
  from numpy.dual import register_func
/opt/conda/envs/python35-paddle120-env/lib/python3.7/site-packages/scipy/special/orthogonal.py:81: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  from numpy import (exp, inf, pi, sqrt, floor, sin, cos, around, int,
Preparing seperated binary files
/home/aistudio/work/RCAN-paddle/RCAN_TrainCode/code/data/srdata.py:35: DeprecationWarning:     `imread` is deprecated!
    `imread` is deprecated in SciPy 1.0.0, and will be removed in 1.2.0.
    Use ``imageio.imread`` instead.
  hr = misc.imread(v)
/opt/conda/envs/python35-paddle120-env/lib/python3.7/site-packages/scipy/misc/pilutil.py:165: DeprecationWarning:     `fromimage` is deprecated!
    `fromimage` is deprecated in SciPy 1.0.0. and will be removed in 1.2.0.
    Use ``np.asarray(im)`` instead.
  return fromimage(im, flatten=flatten, mode=mode)
/home/aistudio/work/RCAN-paddle/RCAN_TrainCode/code/data/srdata.py:40: DeprecationWarning:     `imread` is deprecated!
    `imread` is deprecated in SciPy 1.0.0, and will be removed in 1.2.0.
    Use ``imageio.imread`` instead.
  lr = misc.imread(v)
Preparing seperated binary files
Making model...
W1126 01:10:16.633155  5051 device_context.cc:404] Please NOTE: device: 0, GPU Compute Capability: 7.0, Driver API Version: 11.0, Runtime API Version: 10.1
W1126 01:10:16.637434  5051 device_context.cc:422] device: 0, cuDNN Version: 7.6.
/opt/conda/envs/python35-paddle120-env/lib/python3.7/site-packages/paddle/tensor/creation.py:125: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  if data.dtype == np.object:
Loading model from ./model_280.pdparams
RCAN(
  (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
  (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
  (head): Sequential(
    (0): Conv2D(3, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
  )
  (body): Sequential(
    (0): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (1): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (2): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (3): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (4): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (5): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (6): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (7): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (8): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (9): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (4): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (5): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (6): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (7): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (8): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (9): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (10): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (11): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (12): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (13): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (14): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (15): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (16): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (17): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (18): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (19): RCAB(
          (body): Sequential(
            (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (1): ReLU()
            (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2D(output_size=1)
              (conv_du): Sequential(
                (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                (1): ReLU()
                (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                (3): Sigmoid()
              )
            )
          )
        )
        (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (10): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
      (1): PixelShuffle(upscale_factor=2)
      (2): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
      (3): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2D(64, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
  )
)
Preparing loss function:
1.000 * L1
[Epoch 281]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9083]	78.5+0.6s
[3200/16000]	[L1: 5.8356]	78.1+0.0s
[4800/16000]	[L1: 5.8659]	76.5+0.0s
[6400/16000]	[L1: 5.8016]	80.7+0.0s
[8000/16000]	[L1: 5.8632]	77.8+0.0s
[9600/16000]	[L1: 5.8793]	77.8+0.0s
[11200/16000]	[L1: 5.9085]	83.8+0.0s
[12800/16000]	[L1: 5.9013]	79.6+0.0s
[14400/16000]	[L1: 5.8979]	76.6+0.0s
[16000/16000]	[L1: 5.8902]	76.8+0.0s
[Epoch 282]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0469]	80.4+0.5s
[3200/16000]	[L1: 6.0016]	77.9+0.0s
[4800/16000]	[L1: 5.9215]	78.1+0.0s
[6400/16000]	[L1: 5.9000]	76.4+0.0s
[8000/16000]	[L1: 5.8797]	81.1+0.0s
[9600/16000]	[L1: 5.9198]	81.4+0.0s
[11200/16000]	[L1: 5.9261]	82.5+0.0s
[12800/16000]	[L1: 5.9384]	87.0+0.0s
[14400/16000]	[L1: 5.9449]	86.3+0.0s
[16000/16000]	[L1: 5.9433]	78.5+0.0s
[Epoch 283]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9574]	80.5+0.6s
[3200/16000]	[L1: 6.0275]	80.1+0.0s
[4800/16000]	[L1: 5.9380]	80.1+0.0s
[6400/16000]	[L1: 5.9291]	79.6+0.0s
[8000/16000]	[L1: 5.9498]	82.6+0.0s
[9600/16000]	[L1: 5.9390]	84.3+0.0s
[11200/16000]	[L1: 5.9427]	82.4+0.0s
[12800/16000]	[L1: 5.9459]	76.5+0.0s
[14400/16000]	[L1: 5.9335]	76.4+0.0s
[16000/16000]	[L1: 5.9460]	77.5+0.0s
[Epoch 284]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9469]	85.3+0.6s
[3200/16000]	[L1: 5.9185]	79.0+0.0s
[4800/16000]	[L1: 5.8593]	80.1+0.0s
[6400/16000]	[L1: 5.8838]	82.9+0.0s
[8000/16000]	[L1: 5.9050]	81.4+0.0s
[9600/16000]	[L1: 5.8854]	77.8+0.0s
[11200/16000]	[L1: 5.8916]	78.0+0.0s
[12800/16000]	[L1: 5.8941]	78.6+0.0s
[14400/16000]	[L1: 5.9033]	78.0+0.0s
[16000/16000]	[L1: 5.9194]	82.9+0.0s
[Epoch 285]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8977]	77.1+0.5s
[3200/16000]	[L1: 5.9653]	83.1+0.0s
[4800/16000]	[L1: 5.9198]	81.3+0.0s
[6400/16000]	[L1: 5.8820]	79.6+0.0s
[8000/16000]	[L1: 5.8707]	78.8+0.0s
[9600/16000]	[L1: 5.8804]	80.0+0.0s
[11200/16000]	[L1: 5.8964]	77.0+0.0s
[12800/16000]	[L1: 5.9135]	80.0+0.0s
[14400/16000]	[L1: 5.9122]	80.5+0.0s
[16000/16000]	[L1: 5.8976]	78.8+0.0s
[Epoch 286]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7965]	77.3+0.5s
[3200/16000]	[L1: 5.7697]	79.6+0.0s
[4800/16000]	[L1: 5.8072]	82.9+0.0s
[6400/16000]	[L1: 5.7605]	88.7+0.0s
[8000/16000]	[L1: 5.8014]	76.8+0.0s
[9600/16000]	[L1: 5.8580]	77.4+0.0s
[11200/16000]	[L1: 5.8764]	84.3+0.0s
[12800/16000]	[L1: 5.8711]	79.5+0.0s
[14400/16000]	[L1: 5.8714]	79.3+0.0s
[16000/16000]	[L1: 5.9010]	78.6+0.0s
[Epoch 287]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9023]	81.8+0.5s
[3200/16000]	[L1: 5.8517]	79.8+0.0s
[4800/16000]	[L1: 5.8778]	79.0+0.0s
[6400/16000]	[L1: 5.8418]	77.4+0.0s
[8000/16000]	[L1: 5.8420]	82.1+0.0s
[9600/16000]	[L1: 5.8528]	75.9+0.0s
[11200/16000]	[L1: 5.8591]	76.9+0.0s
[12800/16000]	[L1: 5.8562]	83.6+0.0s
[14400/16000]	[L1: 5.8601]	83.1+0.0s
[16000/16000]	[L1: 5.8460]	77.6+0.0s
[Epoch 288]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0426]	77.6+0.5s
[3200/16000]	[L1: 5.9703]	76.8+0.0s
[4800/16000]	[L1: 5.9219]	79.0+0.0s
[6400/16000]	[L1: 5.9480]	81.2+0.0s
[8000/16000]	[L1: 5.9406]	76.3+0.0s
[9600/16000]	[L1: 5.9245]	77.1+0.0s
[11200/16000]	[L1: 5.9174]	76.4+0.0s
[12800/16000]	[L1: 5.9308]	77.4+0.0s
[14400/16000]	[L1: 5.9150]	79.1+0.0s
[16000/16000]	[L1: 5.8970]	79.7+0.0s
[Epoch 289]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7356]	77.5+0.5s
[3200/16000]	[L1: 5.7476]	77.0+0.0s
[4800/16000]	[L1: 5.8337]	77.0+0.0s
[6400/16000]	[L1: 5.8894]	77.8+0.1s
[8000/16000]	[L1: 5.8721]	87.8+0.0s
[9600/16000]	[L1: 5.8919]	81.3+0.0s
[11200/16000]	[L1: 5.9334]	80.2+0.0s
[12800/16000]	[L1: 5.9448]	80.5+0.0s
[14400/16000]	[L1: 5.9384]	79.0+0.0s
[16000/16000]	[L1: 5.9389]	77.9+0.0s
[Epoch 290]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9260]	80.3+0.5s
[3200/16000]	[L1: 5.9172]	84.1+0.0s
[4800/16000]	[L1: 5.8843]	85.5+0.0s
[6400/16000]	[L1: 5.8367]	75.8+0.0s
[8000/16000]	[L1: 5.8765]	76.1+0.0s
[9600/16000]	[L1: 5.8878]	82.9+0.0s
[11200/16000]	[L1: 5.8696]	78.9+0.0s
[12800/16000]	[L1: 5.8902]	76.1+0.0s
[14400/16000]	[L1: 5.8692]	80.1+0.0s
[16000/16000]	[L1: 5.8610]	77.5+0.0s
[Epoch 291]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9402]	76.7+0.5s
[3200/16000]	[L1: 5.8918]	79.6+0.0s
[4800/16000]	[L1: 5.8717]	75.5+0.1s
[6400/16000]	[L1: 5.8756]	82.0+0.1s
[8000/16000]	[L1: 5.9106]	80.2+0.0s
[9600/16000]	[L1: 5.9253]	88.0+0.0s
[11200/16000]	[L1: 5.9311]	75.5+0.0s
[12800/16000]	[L1: 5.9179]	75.4+0.0s
[14400/16000]	[L1: 5.9296]	82.3+0.0s
[16000/16000]	[L1: 5.9275]	75.9+0.0s
[Epoch 292]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8712]	86.5+0.5s
[3200/16000]	[L1: 5.9492]	76.9+0.0s
[4800/16000]	[L1: 5.8956]	80.5+0.0s
[6400/16000]	[L1: 5.9063]	81.3+0.0s
[8000/16000]	[L1: 5.9261]	76.2+0.0s
[9600/16000]	[L1: 5.9377]	81.5+0.0s
[11200/16000]	[L1: 5.9270]	80.2+0.0s
[12800/16000]	[L1: 5.9041]	82.7+0.0s
[14400/16000]	[L1: 5.8950]	80.3+0.0s
[16000/16000]	[L1: 5.8758]	80.1+0.0s
[Epoch 293]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9432]	85.1+0.5s
[3200/16000]	[L1: 5.8187]	77.1+0.0s
[4800/16000]	[L1: 5.8779]	80.2+0.0s
[6400/16000]	[L1: 5.9023]	76.1+0.0s
[8000/16000]	[L1: 5.9169]	78.4+0.0s
[9600/16000]	[L1: 5.9029]	81.0+0.1s
[11200/16000]	[L1: 5.9218]	80.8+0.0s
[12800/16000]	[L1: 5.8773]	85.4+0.0s
[14400/16000]	[L1: 5.8580]	85.3+0.0s
[16000/16000]	[L1: 5.8565]	88.3+0.0s
[Epoch 294]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0446]	78.4+0.5s
[3200/16000]	[L1: 5.9670]	80.2+0.0s
[4800/16000]	[L1: 5.9817]	79.0+0.1s
[6400/16000]	[L1: 5.9625]	79.1+0.0s
[8000/16000]	[L1: 5.9327]	76.7+0.0s
[9600/16000]	[L1: 5.9172]	82.3+0.0s
[11200/16000]	[L1: 5.9173]	76.1+0.0s
[12800/16000]	[L1: 5.9098]	77.0+0.0s
[14400/16000]	[L1: 5.8971]	77.9+0.0s
[16000/16000]	[L1: 5.9036]	76.3+0.0s
[Epoch 295]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9226]	87.8+0.5s
[3200/16000]	[L1: 5.9705]	81.1+0.0s
[4800/16000]	[L1: 6.0200]	82.8+0.0s
[6400/16000]	[L1: 5.9297]	81.9+0.0s
[8000/16000]	[L1: 5.9267]	76.6+0.0s
[9600/16000]	[L1: 5.9196]	85.0+0.0s
[11200/16000]	[L1: 5.9299]	82.2+0.0s
[12800/16000]	[L1: 5.9006]	79.1+0.0s
[14400/16000]	[L1: 5.9011]	78.6+0.0s
[16000/16000]	[L1: 5.8878]	75.4+0.0s
[Epoch 296]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8196]	76.1+0.5s
[3200/16000]	[L1: 5.9037]	77.4+0.0s
[4800/16000]	[L1: 5.9307]	77.4+0.0s
[6400/16000]	[L1: 5.8971]	77.3+0.0s
[8000/16000]	[L1: 5.8678]	76.6+0.0s
[9600/16000]	[L1: 5.8694]	76.3+0.0s
[11200/16000]	[L1: 5.8750]	79.7+0.0s
[12800/16000]	[L1: 5.8784]	77.8+0.1s
[14400/16000]	[L1: 5.9156]	82.2+0.0s
[16000/16000]	[L1: 5.9253]	77.8+0.0s
[Epoch 297]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0590]	78.5+0.7s
[3200/16000]	[L1: 5.9357]	77.7+0.0s
[4800/16000]	[L1: 5.8768]	76.0+0.0s
[6400/16000]	[L1: 5.8954]	87.0+0.0s
[8000/16000]	[L1: 5.8474]	76.2+0.1s
[9600/16000]	[L1: 5.8435]	77.8+0.0s
[11200/16000]	[L1: 5.8841]	77.4+0.0s
[12800/16000]	[L1: 5.8813]	79.5+0.0s
[14400/16000]	[L1: 5.8745]	82.7+0.0s
[16000/16000]	[L1: 5.8778]	79.6+0.0s
[Epoch 298]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7972]	78.8+0.5s
[3200/16000]	[L1: 5.8294]	79.7+0.0s
[4800/16000]	[L1: 5.8292]	77.9+0.0s
[6400/16000]	[L1: 5.8715]	76.6+0.0s
[8000/16000]	[L1: 5.8752]	75.8+0.0s
[9600/16000]	[L1: 5.8728]	81.8+0.0s
[11200/16000]	[L1: 5.9149]	83.6+0.0s
[12800/16000]	[L1: 5.9166]	78.2+0.0s
[14400/16000]	[L1: 5.8935]	77.5+0.0s
[16000/16000]	[L1: 5.8918]	79.8+0.0s
[Epoch 299]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9209]	81.2+0.5s
[3200/16000]	[L1: 5.9077]	79.0+0.0s
[4800/16000]	[L1: 5.9208]	83.9+0.0s
[6400/16000]	[L1: 5.9019]	80.9+0.0s
[8000/16000]	[L1: 5.9254]	82.7+0.0s
[9600/16000]	[L1: 5.8968]	79.5+0.0s
[11200/16000]	[L1: 5.8668]	80.4+0.0s
[12800/16000]	[L1: 5.8932]	77.8+0.0s
[14400/16000]	[L1: 5.8976]	79.2+0.0s
[16000/16000]	[L1: 5.9025]	78.5+0.0s
[Epoch 300]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9139]	95.9+0.5s
[3200/16000]	[L1: 5.9069]	83.8+0.1s
[4800/16000]	[L1: 5.9043]	84.6+0.0s
[6400/16000]	[L1: 5.9163]	78.2+0.0s
[8000/16000]	[L1: 5.8776]	82.4+0.0s
[9600/16000]	[L1: 5.8749]	77.3+0.0s
[11200/16000]	[L1: 5.8556]	80.3+0.0s
[12800/16000]	[L1: 5.8570]	79.1+0.0s
[14400/16000]	[L1: 5.8618]	87.5+0.0s
[16000/16000]	[L1: 5.8588]	77.6+0.0s
[Epoch 301]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9695]	78.4+0.5s
[3200/16000]	[L1: 5.9084]	79.6+0.0s
[4800/16000]	[L1: 5.9163]	79.2+0.0s
[6400/16000]	[L1: 5.9420]	77.1+0.0s
[8000/16000]	[L1: 5.9283]	78.0+0.0s
[9600/16000]	[L1: 5.9297]	74.5+0.0s
[11200/16000]	[L1: 5.9305]	76.2+0.0s
[12800/16000]	[L1: 5.9263]	76.2+0.0s
[14400/16000]	[L1: 5.9131]	76.9+0.0s
[16000/16000]	[L1: 5.9184]	79.0+0.0s
[Epoch 302]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7704]	76.5+0.5s
[3200/16000]	[L1: 5.8122]	76.7+0.0s
[4800/16000]	[L1: 5.8335]	76.4+0.0s
[6400/16000]	[L1: 5.7948]	76.3+0.0s
[8000/16000]	[L1: 5.8032]	76.2+0.0s
[9600/16000]	[L1: 5.8648]	85.2+0.0s
[11200/16000]	[L1: 5.8754]	84.2+0.0s
[12800/16000]	[L1: 5.8726]	83.7+0.1s
[14400/16000]	[L1: 5.8767]	84.4+0.0s
[16000/16000]	[L1: 5.8988]	76.2+0.0s
[Epoch 303]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8805]	78.0+0.5s
[3200/16000]	[L1: 5.8163]	82.2+0.0s
[4800/16000]	[L1: 5.8646]	86.4+0.0s
[6400/16000]	[L1: 5.8891]	83.3+0.0s
[8000/16000]	[L1: 5.8694]	81.4+0.0s
[9600/16000]	[L1: 5.8734]	79.1+0.0s
[11200/16000]	[L1: 5.8912]	83.8+0.0s
[12800/16000]	[L1: 5.8882]	94.6+0.0s
[14400/16000]	[L1: 5.8766]	84.5+0.0s
[16000/16000]	[L1: 5.8682]	76.5+0.0s
[Epoch 304]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9469]	77.5+0.5s
[3200/16000]	[L1: 5.7967]	80.1+0.0s
[4800/16000]	[L1: 5.8494]	78.7+0.0s
[6400/16000]	[L1: 5.8589]	81.6+0.0s
[8000/16000]	[L1: 5.8407]	81.1+0.0s
[9600/16000]	[L1: 5.8434]	77.0+0.0s
[11200/16000]	[L1: 5.8857]	82.2+0.0s
[12800/16000]	[L1: 5.9079]	76.9+0.0s
[14400/16000]	[L1: 5.9045]	80.8+0.0s
[16000/16000]	[L1: 5.8986]	78.8+0.1s
[Epoch 305]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9682]	77.8+0.5s
[3200/16000]	[L1: 5.8442]	79.9+0.0s
[4800/16000]	[L1: 5.8252]	78.5+0.0s
[6400/16000]	[L1: 5.9013]	83.1+0.0s
[8000/16000]	[L1: 5.9473]	91.7+0.0s
[9600/16000]	[L1: 5.9010]	82.4+0.0s
[11200/16000]	[L1: 5.8835]	82.1+0.1s
[12800/16000]	[L1: 5.8934]	83.1+0.0s
[14400/16000]	[L1: 5.9020]	78.6+0.0s
[16000/16000]	[L1: 5.8908]	82.0+0.0s
[Epoch 306]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7351]	80.7+0.5s
[3200/16000]	[L1: 5.9200]	77.6+0.0s
[4800/16000]	[L1: 5.8909]	79.7+0.0s
[6400/16000]	[L1: 5.8578]	81.7+0.1s
[8000/16000]	[L1: 5.9273]	84.5+0.0s
[9600/16000]	[L1: 5.9044]	77.8+0.0s
[11200/16000]	[L1: 5.8775]	80.8+0.0s
[12800/16000]	[L1: 5.8793]	77.9+0.0s
[14400/16000]	[L1: 5.8740]	80.2+0.0s
[16000/16000]	[L1: 5.8938]	77.0+0.0s
[Epoch 307]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8260]	90.9+0.5s
[3200/16000]	[L1: 5.8824]	78.9+0.0s
[4800/16000]	[L1: 5.8588]	77.6+0.0s
[6400/16000]	[L1: 5.8834]	80.8+0.0s
[8000/16000]	[L1: 5.8656]	81.9+0.0s
[9600/16000]	[L1: 5.8674]	78.3+0.0s
[11200/16000]	[L1: 5.8767]	78.6+0.0s
[12800/16000]	[L1: 5.8897]	85.0+0.1s
[14400/16000]	[L1: 5.8663]	76.8+0.0s
[16000/16000]	[L1: 5.8903]	80.6+0.0s
[Epoch 308]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8977]	82.3+0.5s
[3200/16000]	[L1: 5.8554]	79.9+0.0s
[4800/16000]	[L1: 5.9191]	81.1+0.0s
[6400/16000]	[L1: 5.8719]	83.0+0.0s
[8000/16000]	[L1: 5.9015]	77.8+0.0s
[9600/16000]	[L1: 5.8757]	78.3+0.0s
[11200/16000]	[L1: 5.8811]	80.7+0.0s
[12800/16000]	[L1: 5.8995]	82.3+0.0s
[14400/16000]	[L1: 5.8886]	77.9+0.0s
[16000/16000]	[L1: 5.8892]	84.0+0.0s
[Epoch 309]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9346]	76.5+0.5s
[3200/16000]	[L1: 6.0504]	81.4+0.0s
[4800/16000]	[L1: 5.9754]	77.3+0.0s
[6400/16000]	[L1: 5.9245]	80.8+0.0s
[8000/16000]	[L1: 5.9103]	79.4+0.0s
[9600/16000]	[L1: 5.8992]	76.4+0.0s
[11200/16000]	[L1: 5.8997]	82.9+0.0s
[12800/16000]	[L1: 5.8701]	82.7+0.0s
[14400/16000]	[L1: 5.8718]	89.1+0.0s
[16000/16000]	[L1: 5.8629]	80.8+0.0s
[Epoch 310]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8145]	78.6+0.6s
[3200/16000]	[L1: 5.8356]	78.1+0.0s
[4800/16000]	[L1: 5.9001]	76.9+0.0s
[6400/16000]	[L1: 5.9080]	78.9+0.0s
[8000/16000]	[L1: 5.8921]	85.2+0.0s
[9600/16000]	[L1: 5.9047]	84.8+0.0s
[11200/16000]	[L1: 5.9182]	78.3+0.0s
[12800/16000]	[L1: 5.9144]	83.3+0.0s
[14400/16000]	[L1: 5.9126]	83.9+0.0s
[16000/16000]	[L1: 5.9419]	78.7+0.0s
[Epoch 311]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8744]	75.2+0.5s
[3200/16000]	[L1: 5.8576]	96.8+0.1s
[4800/16000]	[L1: 5.7635]	81.0+0.0s
[6400/16000]	[L1: 5.7753]	88.0+0.0s
[8000/16000]	[L1: 5.8265]	80.3+0.0s
[9600/16000]	[L1: 5.8552]	77.6+0.0s
[11200/16000]	[L1: 5.8373]	77.1+0.0s
[12800/16000]	[L1: 5.8713]	94.7+0.0s
[14400/16000]	[L1: 5.8679]	86.3+0.0s
[16000/16000]	[L1: 5.8976]	79.6+0.0s
[Epoch 312]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9509]	87.4+0.5s
[3200/16000]	[L1: 5.9297]	81.3+0.0s
[4800/16000]	[L1: 5.9059]	78.0+0.0s
[6400/16000]	[L1: 5.9143]	81.1+0.0s
[8000/16000]	[L1: 5.8915]	83.9+0.0s
[9600/16000]	[L1: 5.8686]	78.0+0.0s
[11200/16000]	[L1: 5.8768]	77.3+0.0s
[12800/16000]	[L1: 5.8727]	78.3+0.0s
[14400/16000]	[L1: 5.8898]	78.3+0.0s
[16000/16000]	[L1: 5.8895]	79.0+0.0s
[Epoch 313]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6531]	82.4+0.5s
[3200/16000]	[L1: 5.8454]	80.3+0.1s
[4800/16000]	[L1: 5.8384]	84.0+0.0s
[6400/16000]	[L1: 5.8911]	88.2+0.0s
[8000/16000]	[L1: 5.9133]	77.2+0.0s
[9600/16000]	[L1: 5.9055]	81.8+0.0s
[11200/16000]	[L1: 5.9043]	81.7+0.0s
[12800/16000]	[L1: 5.9157]	76.4+0.1s
[14400/16000]	[L1: 5.9080]	84.5+0.0s
[16000/16000]	[L1: 5.8974]	78.1+0.0s
[Epoch 314]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7322]	76.7+0.5s
[3200/16000]	[L1: 5.7656]	82.2+0.0s
[4800/16000]	[L1: 5.7712]	78.3+0.0s
[6400/16000]	[L1: 5.7991]	77.1+0.0s
[8000/16000]	[L1: 5.7918]	82.8+0.0s
[9600/16000]	[L1: 5.8148]	80.6+0.0s
[11200/16000]	[L1: 5.7982]	83.4+0.0s
[12800/16000]	[L1: 5.8289]	89.2+0.0s
[14400/16000]	[L1: 5.8328]	77.5+0.0s
[16000/16000]	[L1: 5.8380]	85.5+0.0s
[Epoch 315]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9752]	80.4+0.5s
[3200/16000]	[L1: 5.9873]	79.3+0.0s
[4800/16000]	[L1: 5.9164]	79.0+0.0s
[6400/16000]	[L1: 5.9085]	82.4+0.0s
[8000/16000]	[L1: 5.9239]	77.5+0.0s
[9600/16000]	[L1: 5.9146]	83.4+0.0s
[11200/16000]	[L1: 5.9088]	79.3+0.0s
[12800/16000]	[L1: 5.8801]	78.3+0.0s
[14400/16000]	[L1: 5.8834]	76.2+0.0s
[16000/16000]	[L1: 5.8795]	78.0+0.0s
[Epoch 316]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8683]	79.9+0.6s
[3200/16000]	[L1: 5.7716]	83.1+0.0s
[4800/16000]	[L1: 5.8532]	87.3+0.1s
[6400/16000]	[L1: 5.8562]	77.7+0.0s
[8000/16000]	[L1: 5.8615]	83.2+0.0s
[9600/16000]	[L1: 5.8836]	80.1+0.0s
[11200/16000]	[L1: 5.8852]	84.1+0.0s
[12800/16000]	[L1: 5.8604]	86.1+0.0s
[14400/16000]	[L1: 5.8703]	82.3+0.0s
[16000/16000]	[L1: 5.8875]	79.3+0.0s
[Epoch 317]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7582]	79.4+0.5s
[3200/16000]	[L1: 5.7170]	80.5+0.0s
[4800/16000]	[L1: 5.7281]	78.4+0.0s
[6400/16000]	[L1: 5.7597]	82.1+0.0s
[8000/16000]	[L1: 5.7816]	84.6+0.0s
[9600/16000]	[L1: 5.7702]	81.1+0.0s
[11200/16000]	[L1: 5.8193]	77.9+0.0s
[12800/16000]	[L1: 5.8136]	80.2+0.0s
[14400/16000]	[L1: 5.8351]	78.1+0.0s
[16000/16000]	[L1: 5.8428]	78.6+0.0s
[Epoch 318]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8392]	82.4+0.5s
[3200/16000]	[L1: 5.7890]	79.0+0.0s
[4800/16000]	[L1: 5.9086]	78.1+0.0s
[6400/16000]	[L1: 5.8568]	88.1+0.0s
[8000/16000]	[L1: 5.8838]	82.7+0.0s
[9600/16000]	[L1: 5.8681]	79.2+0.0s
[11200/16000]	[L1: 5.8652]	79.6+0.0s
[12800/16000]	[L1: 5.8610]	76.9+0.0s
[14400/16000]	[L1: 5.8658]	77.9+0.0s
[16000/16000]	[L1: 5.8711]	85.0+0.0s
[Epoch 319]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0321]	81.4+0.5s
[3200/16000]	[L1: 5.9754]	74.6+0.0s
[4800/16000]	[L1: 5.9811]	74.4+0.0s
[6400/16000]	[L1: 5.9727]	81.4+0.0s
[8000/16000]	[L1: 5.9247]	79.6+0.0s
[9600/16000]	[L1: 5.8737]	79.3+0.0s
[11200/16000]	[L1: 5.8767]	83.8+0.0s
[12800/16000]	[L1: 5.8584]	81.4+0.0s
[14400/16000]	[L1: 5.8467]	82.8+0.0s
[16000/16000]	[L1: 5.8556]	83.5+0.0s
[Epoch 320]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9064]	81.2+0.5s
[3200/16000]	[L1: 5.9518]	75.7+0.1s
[4800/16000]	[L1: 5.8666]	75.1+0.0s
[6400/16000]	[L1: 5.8305]	75.3+0.0s
[8000/16000]	[L1: 5.7978]	81.9+0.0s
[9600/16000]	[L1: 5.8133]	79.0+0.0s
[11200/16000]	[L1: 5.8270]	78.9+0.0s
[12800/16000]	[L1: 5.8166]	82.2+0.0s
[14400/16000]	[L1: 5.8234]	80.5+0.0s
[16000/16000]	[L1: 5.8276]	81.3+0.0s
[Epoch 321]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9313]	77.5+0.5s
[3200/16000]	[L1: 5.9379]	79.8+0.0s
[4800/16000]	[L1: 5.8992]	80.3+0.0s
[6400/16000]	[L1: 5.9185]	82.3+0.0s
[8000/16000]	[L1: 5.8948]	77.5+0.0s
[9600/16000]	[L1: 5.9107]	79.2+0.0s
[11200/16000]	[L1: 5.8896]	77.4+0.0s
[12800/16000]	[L1: 5.9037]	86.2+0.0s
[14400/16000]	[L1: 5.9129]	85.6+0.0s
[16000/16000]	[L1: 5.9122]	79.6+0.0s
[Epoch 322]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9121]	87.0+0.5s
[3200/16000]	[L1: 5.8567]	79.6+0.1s
[4800/16000]	[L1: 5.8629]	79.3+0.0s
[6400/16000]	[L1: 5.8559]	77.8+0.0s
[8000/16000]	[L1: 5.8584]	78.1+0.0s
[9600/16000]	[L1: 5.8772]	79.1+0.0s
[11200/16000]	[L1: 5.9116]	87.3+0.0s
[12800/16000]	[L1: 5.8787]	79.7+0.0s
[14400/16000]	[L1: 5.8870]	83.0+0.0s
[16000/16000]	[L1: 5.8863]	79.7+0.0s
[Epoch 323]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0423]	79.5+0.5s
[3200/16000]	[L1: 5.9761]	83.5+0.0s
[4800/16000]	[L1: 5.9413]	77.2+0.0s
[6400/16000]	[L1: 5.9309]	80.6+0.0s
[8000/16000]	[L1: 5.9119]	80.2+0.0s
[9600/16000]	[L1: 5.9284]	78.3+0.0s
[11200/16000]	[L1: 5.9380]	76.5+0.0s
[12800/16000]	[L1: 5.9274]	79.4+0.0s
[14400/16000]	[L1: 5.9376]	77.8+0.0s
[16000/16000]	[L1: 5.9138]	78.8+0.0s
[Epoch 324]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9503]	81.6+0.5s
[3200/16000]	[L1: 5.7847]	79.2+0.0s
[4800/16000]	[L1: 5.7899]	81.3+0.0s
[6400/16000]	[L1: 5.8011]	78.2+0.0s
[8000/16000]	[L1: 5.8367]	79.2+0.0s
[9600/16000]	[L1: 5.8449]	79.0+0.1s
[11200/16000]	[L1: 5.8289]	80.4+0.0s
[12800/16000]	[L1: 5.8165]	82.5+0.0s
[14400/16000]	[L1: 5.8174]	77.9+0.0s
[16000/16000]	[L1: 5.8295]	81.4+0.0s
[Epoch 325]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9481]	89.7+0.5s
[3200/16000]	[L1: 5.9856]	87.1+0.0s
[4800/16000]	[L1: 5.9380]	78.6+0.0s
[6400/16000]	[L1: 5.9239]	80.5+0.0s
[8000/16000]	[L1: 5.8992]	78.4+0.0s
[9600/16000]	[L1: 5.8787]	77.9+0.0s
[11200/16000]	[L1: 5.8706]	79.2+0.0s
[12800/16000]	[L1: 5.8980]	77.4+0.0s
[14400/16000]	[L1: 5.8746]	86.4+0.0s
[16000/16000]	[L1: 5.8671]	78.6+0.0s
[Epoch 326]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9713]	76.6+0.5s
[3200/16000]	[L1: 5.8559]	77.0+0.0s
[4800/16000]	[L1: 5.9158]	79.6+0.0s
[6400/16000]	[L1: 5.9069]	76.9+0.0s
[8000/16000]	[L1: 5.8804]	79.2+0.0s
[9600/16000]	[L1: 5.8883]	94.4+0.0s
[11200/16000]	[L1: 5.8637]	84.0+0.0s
[12800/16000]	[L1: 5.8680]	84.3+0.0s
[14400/16000]	[L1: 5.8784]	78.0+0.0s
[16000/16000]	[L1: 5.8817]	79.1+0.0s
[Epoch 327]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9322]	82.1+0.5s
[3200/16000]	[L1: 5.8837]	80.4+0.0s
[4800/16000]	[L1: 5.8526]	78.5+0.0s
[6400/16000]	[L1: 5.8863]	79.0+0.0s
[8000/16000]	[L1: 5.8323]	85.6+0.0s
[9600/16000]	[L1: 5.8354]	83.0+0.0s
[11200/16000]	[L1: 5.8303]	91.4+0.0s
[12800/16000]	[L1: 5.8603]	77.4+0.0s
[14400/16000]	[L1: 5.8756]	82.3+0.0s
[16000/16000]	[L1: 5.8881]	81.5+0.0s
[Epoch 328]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8529]	76.9+0.5s
[3200/16000]	[L1: 5.8659]	77.7+0.0s
[4800/16000]	[L1: 5.8221]	77.2+0.0s
[6400/16000]	[L1: 5.8780]	77.1+0.0s
[8000/16000]	[L1: 5.8654]	79.4+0.0s
[9600/16000]	[L1: 5.8805]	78.1+0.0s
[11200/16000]	[L1: 5.8901]	80.8+0.0s
[12800/16000]	[L1: 5.8865]	80.4+0.0s
[14400/16000]	[L1: 5.8669]	79.5+0.0s
[16000/16000]	[L1: 5.8665]	83.9+0.0s
[Epoch 329]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8519]	82.6+0.5s
[3200/16000]	[L1: 5.8684]	81.4+0.0s
[4800/16000]	[L1: 5.8903]	78.1+0.0s
[6400/16000]	[L1: 5.9278]	77.2+0.0s
[8000/16000]	[L1: 5.9225]	77.9+0.1s
[9600/16000]	[L1: 5.9321]	78.3+0.0s
[11200/16000]	[L1: 5.9179]	77.9+0.0s
[12800/16000]	[L1: 5.9048]	76.8+0.0s
[14400/16000]	[L1: 5.9078]	74.6+0.0s
[16000/16000]	[L1: 5.9006]	74.8+0.0s
[Epoch 330]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0016]	75.1+0.5s
[3200/16000]	[L1: 5.9448]	75.2+0.0s
[4800/16000]	[L1: 5.9073]	77.5+0.0s
[6400/16000]	[L1: 5.9066]	82.8+0.0s
[8000/16000]	[L1: 5.8670]	77.9+0.0s
[9600/16000]	[L1: 5.8989]	82.7+0.0s
[11200/16000]	[L1: 5.9106]	77.7+0.0s
[12800/16000]	[L1: 5.9035]	81.4+0.0s
[14400/16000]	[L1: 5.9179]	78.4+0.0s
[16000/16000]	[L1: 5.9112]	84.8+0.0s
[Epoch 331]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8495]	76.9+0.5s
[3200/16000]	[L1: 5.9066]	74.7+0.0s
[4800/16000]	[L1: 5.8912]	76.5+0.0s
[6400/16000]	[L1: 5.8967]	79.1+0.0s
[8000/16000]	[L1: 5.9107]	77.0+0.0s
[9600/16000]	[L1: 5.9261]	80.5+0.0s
[11200/16000]	[L1: 5.9072]	82.4+0.0s
[12800/16000]	[L1: 5.9122]	81.6+0.0s
[14400/16000]	[L1: 5.9203]	84.0+0.0s
[16000/16000]	[L1: 5.9066]	80.9+0.0s
[Epoch 332]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.5488]	78.8+0.5s
[3200/16000]	[L1: 5.6391]	82.3+0.0s
[4800/16000]	[L1: 5.7704]	79.3+0.0s
[6400/16000]	[L1: 5.8437]	88.2+0.0s
[8000/16000]	[L1: 5.8247]	84.5+0.0s
[9600/16000]	[L1: 5.8502]	99.6+0.0s
[11200/16000]	[L1: 5.8545]	77.5+0.0s
[12800/16000]	[L1: 5.8533]	78.1+0.0s
[14400/16000]	[L1: 5.8750]	87.4+0.1s
[16000/16000]	[L1: 5.8630]	81.4+0.0s
[Epoch 333]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9100]	83.1+0.5s
[3200/16000]	[L1: 5.8739]	85.2+0.0s
[4800/16000]	[L1: 5.8618]	82.8+0.0s
[6400/16000]	[L1: 5.8849]	90.1+0.0s
[8000/16000]	[L1: 5.8765]	83.1+0.0s
[9600/16000]	[L1: 5.9021]	85.7+0.0s
[11200/16000]	[L1: 5.8950]	83.5+0.0s
[12800/16000]	[L1: 5.9086]	86.0+0.0s
[14400/16000]	[L1: 5.9058]	77.8+0.0s
[16000/16000]	[L1: 5.9030]	83.3+0.0s
[Epoch 334]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9487]	76.9+0.5s
[3200/16000]	[L1: 5.9575]	78.4+0.0s
[4800/16000]	[L1: 5.9620]	82.2+0.0s
[6400/16000]	[L1: 5.9270]	77.0+0.0s
[8000/16000]	[L1: 5.9436]	74.8+0.0s
[9600/16000]	[L1: 5.9377]	74.9+0.0s
[11200/16000]	[L1: 5.9185]	75.0+0.0s
[12800/16000]	[L1: 5.9159]	79.2+0.0s
[14400/16000]	[L1: 5.9017]	77.6+0.0s
[16000/16000]	[L1: 5.8926]	78.0+0.0s
[Epoch 335]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7279]	80.5+0.5s
[3200/16000]	[L1: 5.8058]	78.1+0.0s
[4800/16000]	[L1: 5.8203]	77.8+0.0s
[6400/16000]	[L1: 5.8093]	87.5+0.0s
[8000/16000]	[L1: 5.8445]	86.7+0.0s
[9600/16000]	[L1: 5.8523]	82.6+0.0s
[11200/16000]	[L1: 5.8500]	77.8+0.0s
[12800/16000]	[L1: 5.8785]	78.6+0.0s
[14400/16000]	[L1: 5.8926]	80.0+0.0s
[16000/16000]	[L1: 5.9004]	77.9+0.0s
[Epoch 336]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0822]	80.1+0.5s
[3200/16000]	[L1: 5.9772]	79.6+0.0s
[4800/16000]	[L1: 5.9167]	79.0+0.0s
[6400/16000]	[L1: 5.9178]	77.2+0.0s
[8000/16000]	[L1: 5.9056]	81.1+0.0s
[9600/16000]	[L1: 5.8949]	78.4+0.0s
[11200/16000]	[L1: 5.8930]	80.0+0.0s
[12800/16000]	[L1: 5.8941]	78.8+0.0s
[14400/16000]	[L1: 5.9121]	79.3+0.0s
[16000/16000]	[L1: 5.9204]	84.1+0.0s
[Epoch 337]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7812]	80.8+0.5s
[3200/16000]	[L1: 5.8458]	79.7+0.0s
[4800/16000]	[L1: 5.8261]	84.9+0.0s
[6400/16000]	[L1: 5.8185]	77.2+0.0s
[8000/16000]	[L1: 5.8618]	79.2+0.0s
[9600/16000]	[L1: 5.8747]	78.5+0.0s
[11200/16000]	[L1: 5.9014]	79.8+0.0s
[12800/16000]	[L1: 5.9007]	86.5+0.0s
[14400/16000]	[L1: 5.9004]	83.4+0.0s
[16000/16000]	[L1: 5.8881]	79.3+0.0s
[Epoch 338]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6797]	78.6+0.5s
[3200/16000]	[L1: 5.6999]	78.6+0.0s
[4800/16000]	[L1: 5.7791]	82.7+0.0s
[6400/16000]	[L1: 5.8395]	77.6+0.0s
[8000/16000]	[L1: 5.8719]	80.4+0.0s
[9600/16000]	[L1: 5.8832]	76.2+0.0s
[11200/16000]	[L1: 5.8962]	77.4+0.0s
[12800/16000]	[L1: 5.9156]	77.6+0.0s
[14400/16000]	[L1: 5.9160]	78.4+0.0s
[16000/16000]	[L1: 5.9211]	83.3+0.0s
[Epoch 339]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7793]	79.4+0.5s
[3200/16000]	[L1: 5.8040]	78.6+0.0s
[4800/16000]	[L1: 5.8184]	84.4+0.0s
[6400/16000]	[L1: 5.8115]	87.0+0.0s
[8000/16000]	[L1: 5.8587]	80.0+0.0s
[9600/16000]	[L1: 5.8671]	86.8+0.0s
[11200/16000]	[L1: 5.8788]	78.9+0.0s
[12800/16000]	[L1: 5.8853]	86.0+0.0s
[14400/16000]	[L1: 5.8738]	84.1+0.0s
[16000/16000]	[L1: 5.8527]	83.8+0.0s
[Epoch 340]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8105]	82.1+0.5s
[3200/16000]	[L1: 5.8307]	78.2+0.1s
[4800/16000]	[L1: 5.8570]	76.6+0.0s
[6400/16000]	[L1: 5.8273]	75.0+0.0s
[8000/16000]	[L1: 5.8418]	75.0+0.0s
[9600/16000]	[L1: 5.8580]	74.8+0.0s
[11200/16000]	[L1: 5.8442]	75.5+0.0s
[12800/16000]	[L1: 5.8556]	74.9+0.0s
[14400/16000]	[L1: 5.8330]	74.8+0.0s
[16000/16000]	[L1: 5.8305]	75.2+0.0s
[Epoch 341]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8880]	84.6+0.5s
[3200/16000]	[L1: 5.9637]	77.4+0.0s
[4800/16000]	[L1: 5.9003]	80.1+0.0s
[6400/16000]	[L1: 5.9267]	78.7+0.0s
[8000/16000]	[L1: 5.8960]	80.7+0.0s
[9600/16000]	[L1: 5.8922]	77.0+0.0s
[11200/16000]	[L1: 5.9007]	80.2+0.0s
[12800/16000]	[L1: 5.8946]	77.1+0.0s
[14400/16000]	[L1: 5.8894]	79.2+0.0s
[16000/16000]	[L1: 5.8908]	76.8+0.0s
[Epoch 342]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9703]	78.7+0.5s
[3200/16000]	[L1: 5.8746]	80.9+0.0s
[4800/16000]	[L1: 5.8999]	82.2+0.0s
[6400/16000]	[L1: 5.8596]	77.5+0.0s
[8000/16000]	[L1: 5.8832]	79.3+0.0s
[9600/16000]	[L1: 5.8745]	77.1+0.0s
[11200/16000]	[L1: 5.8639]	79.1+0.0s
[12800/16000]	[L1: 5.8678]	78.9+0.0s
[14400/16000]	[L1: 5.8625]	77.9+0.0s
[16000/16000]	[L1: 5.8682]	78.5+0.0s
[Epoch 343]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0313]	78.3+0.5s
[3200/16000]	[L1: 5.9218]	81.0+0.0s
[4800/16000]	[L1: 5.8778]	84.5+0.0s
[6400/16000]	[L1: 5.9359]	80.1+0.0s
[8000/16000]	[L1: 5.9415]	79.4+0.0s
[9600/16000]	[L1: 5.9261]	83.5+0.0s
[11200/16000]	[L1: 5.9298]	81.0+0.0s
[12800/16000]	[L1: 5.9330]	78.7+0.0s
[14400/16000]	[L1: 5.9071]	77.7+0.0s
[16000/16000]	[L1: 5.8855]	79.3+0.0s
[Epoch 344]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6298]	79.4+0.5s
[3200/16000]	[L1: 5.7826]	75.0+0.0s
[4800/16000]	[L1: 5.8691]	75.2+0.0s
[6400/16000]	[L1: 5.8877]	81.0+0.0s
[8000/16000]	[L1: 5.8575]	78.8+0.0s
[9600/16000]	[L1: 5.8428]	82.0+0.0s
[11200/16000]	[L1: 5.8413]	78.9+0.0s
[12800/16000]	[L1: 5.8584]	79.1+0.0s
[14400/16000]	[L1: 5.8869]	80.9+0.0s
[16000/16000]	[L1: 5.8723]	83.9+0.0s
[Epoch 345]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7211]	78.4+0.5s
[3200/16000]	[L1: 5.8867]	78.4+0.0s
[4800/16000]	[L1: 5.9332]	80.0+0.0s
[6400/16000]	[L1: 5.9120]	83.1+0.0s
[8000/16000]	[L1: 5.8690]	79.2+0.0s
[9600/16000]	[L1: 5.8988]	84.1+0.0s
[11200/16000]	[L1: 5.8904]	77.6+0.0s
[12800/16000]	[L1: 5.9108]	75.9+0.0s
[14400/16000]	[L1: 5.9317]	80.6+0.0s
[16000/16000]	[L1: 5.9130]	76.7+0.0s
[Epoch 346]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9742]	77.8+0.5s
[3200/16000]	[L1: 5.9061]	79.4+0.0s
[4800/16000]	[L1: 5.9999]	82.3+0.0s
[6400/16000]	[L1: 5.9392]	81.7+0.0s
[8000/16000]	[L1: 5.8964]	77.9+0.0s
[9600/16000]	[L1: 5.9120]	76.8+0.0s
[11200/16000]	[L1: 5.9238]	79.4+0.0s
[12800/16000]	[L1: 5.9012]	79.8+0.0s
[14400/16000]	[L1: 5.9024]	80.5+0.0s
[16000/16000]	[L1: 5.9126]	79.9+0.0s
[Epoch 347]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9154]	85.4+0.5s
[3200/16000]	[L1: 5.7545]	80.8+0.0s
[4800/16000]	[L1: 5.7600]	81.0+0.0s
[6400/16000]	[L1: 5.7993]	83.2+0.0s
[8000/16000]	[L1: 5.8292]	84.7+0.0s
[9600/16000]	[L1: 5.8236]	78.3+0.0s
[11200/16000]	[L1: 5.8255]	80.7+0.0s
[12800/16000]	[L1: 5.8222]	90.4+0.0s
[14400/16000]	[L1: 5.8291]	76.3+0.0s
[16000/16000]	[L1: 5.8579]	77.2+0.0s
[Epoch 348]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9371]	79.8+0.5s
[3200/16000]	[L1: 5.8323]	75.1+0.0s
[4800/16000]	[L1: 5.8824]	83.4+0.0s
[6400/16000]	[L1: 5.8852]	79.9+0.0s
[8000/16000]	[L1: 5.8860]	88.8+0.0s
[9600/16000]	[L1: 5.8960]	93.5+0.0s
[11200/16000]	[L1: 5.8856]	78.9+0.0s
[12800/16000]	[L1: 5.9025]	85.8+0.0s
[14400/16000]	[L1: 5.8932]	82.9+0.0s
[16000/16000]	[L1: 5.8908]	81.9+0.0s
[Epoch 349]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9084]	87.0+0.5s
[3200/16000]	[L1: 5.8954]	85.9+0.0s
[4800/16000]	[L1: 5.8286]	82.4+0.0s
[6400/16000]	[L1: 5.8246]	78.7+0.0s
[8000/16000]	[L1: 5.8196]	77.7+0.0s
[9600/16000]	[L1: 5.8111]	82.2+0.0s
[11200/16000]	[L1: 5.8227]	78.1+0.0s
[12800/16000]	[L1: 5.8440]	75.7+0.0s
[14400/16000]	[L1: 5.8425]	75.9+0.0s
[16000/16000]	[L1: 5.8620]	88.5+0.0s
[Epoch 350]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8342]	84.5+0.5s
[3200/16000]	[L1: 5.8596]	83.9+0.0s
[4800/16000]	[L1: 5.9157]	77.6+0.0s
[6400/16000]	[L1: 5.8962]	82.7+0.0s
[8000/16000]	[L1: 5.8850]	77.7+0.0s
[9600/16000]	[L1: 5.8495]	77.4+0.0s
[11200/16000]	[L1: 5.8321]	79.4+0.0s
[12800/16000]	[L1: 5.8481]	81.2+0.0s
[14400/16000]	[L1: 5.8620]	83.3+0.0s
[16000/16000]	[L1: 5.8519]	81.0+0.0s
[Epoch 351]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8258]	83.1+0.5s
[3200/16000]	[L1: 5.8422]	80.4+0.0s
[4800/16000]	[L1: 5.8692]	78.4+0.0s
[6400/16000]	[L1: 5.8328]	79.5+0.0s
[8000/16000]	[L1: 5.8608]	77.7+0.0s
[9600/16000]	[L1: 5.8602]	77.0+0.0s
[11200/16000]	[L1: 5.8582]	78.2+0.0s
[12800/16000]	[L1: 5.8480]	84.4+0.0s
[14400/16000]	[L1: 5.8541]	77.5+0.0s
[16000/16000]	[L1: 5.8414]	80.5+0.0s
[Epoch 352]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9880]	82.9+0.5s
[3200/16000]	[L1: 5.9539]	81.5+0.0s
[4800/16000]	[L1: 6.0105]	80.1+0.0s
[6400/16000]	[L1: 5.9835]	82.0+0.0s
[8000/16000]	[L1: 5.9703]	89.5+0.0s
[9600/16000]	[L1: 5.9421]	84.1+0.0s
[11200/16000]	[L1: 5.9453]	90.7+0.0s
[12800/16000]	[L1: 5.9264]	78.7+0.0s
[14400/16000]	[L1: 5.9093]	84.5+0.0s
[16000/16000]	[L1: 5.9115]	88.1+0.0s
[Epoch 353]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0179]	79.4+0.5s
[3200/16000]	[L1: 5.9437]	77.2+0.0s
[4800/16000]	[L1: 5.9072]	77.6+0.0s
[6400/16000]	[L1: 5.9047]	81.1+0.0s
[8000/16000]	[L1: 5.9341]	76.7+0.0s
[9600/16000]	[L1: 5.8972]	77.9+0.0s
[11200/16000]	[L1: 5.8900]	79.8+0.0s
[12800/16000]	[L1: 5.8824]	79.9+0.0s
[14400/16000]	[L1: 5.8587]	79.5+0.0s
[16000/16000]	[L1: 5.8792]	78.1+0.0s
[Epoch 354]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8905]	84.9+0.5s
[3200/16000]	[L1: 5.9366]	79.6+0.0s
[4800/16000]	[L1: 6.0219]	79.7+0.0s
[6400/16000]	[L1: 5.9872]	81.1+0.0s
[8000/16000]	[L1: 5.9805]	80.3+0.0s
[9600/16000]	[L1: 5.9307]	91.0+0.0s
[11200/16000]	[L1: 5.9177]	79.4+0.0s
[12800/16000]	[L1: 5.9084]	78.2+0.0s
[14400/16000]	[L1: 5.8934]	89.2+0.0s
[16000/16000]	[L1: 5.9064]	78.6+0.0s
[Epoch 355]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8069]	80.8+0.5s
[3200/16000]	[L1: 5.8729]	80.6+0.0s
[4800/16000]	[L1: 5.8551]	89.4+0.0s
[6400/16000]	[L1: 5.8790]	78.5+0.0s
[8000/16000]	[L1: 5.9269]	83.6+0.0s
[9600/16000]	[L1: 5.9025]	84.7+0.0s
[11200/16000]	[L1: 5.8949]	77.7+0.0s
[12800/16000]	[L1: 5.8807]	83.7+0.0s
[14400/16000]	[L1: 5.8751]	84.4+0.0s
[16000/16000]	[L1: 5.8713]	84.1+0.0s
[Epoch 356]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6005]	89.9+0.5s
[3200/16000]	[L1: 5.7031]	77.1+0.0s
[4800/16000]	[L1: 5.7917]	86.7+0.0s
[6400/16000]	[L1: 5.8092]	78.2+0.0s
[8000/16000]	[L1: 5.8441]	77.0+0.0s
[9600/16000]	[L1: 5.8377]	77.2+0.0s
[11200/16000]	[L1: 5.8420]	77.8+0.0s
[12800/16000]	[L1: 5.8452]	87.2+0.0s
[14400/16000]	[L1: 5.8498]	87.4+0.0s
[16000/16000]	[L1: 5.8573]	81.7+0.0s
[Epoch 357]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7933]	81.7+0.5s
[3200/16000]	[L1: 5.7380]	80.0+0.0s
[4800/16000]	[L1: 5.7525]	81.1+0.0s
[6400/16000]	[L1: 5.7783]	86.6+0.0s
[8000/16000]	[L1: 5.8070]	79.3+0.0s
[9600/16000]	[L1: 5.8388]	79.7+0.0s
[11200/16000]	[L1: 5.8362]	85.3+0.0s
[12800/16000]	[L1: 5.8441]	82.1+0.0s
[14400/16000]	[L1: 5.8497]	79.9+0.0s
[16000/16000]	[L1: 5.8422]	75.2+0.0s
[Epoch 358]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7780]	76.9+0.5s
[3200/16000]	[L1: 5.7621]	82.6+0.0s
[4800/16000]	[L1: 5.8218]	78.8+0.0s
[6400/16000]	[L1: 5.8079]	82.8+0.0s
[8000/16000]	[L1: 5.8239]	79.1+0.0s
[9600/16000]	[L1: 5.8384]	75.9+0.0s
[11200/16000]	[L1: 5.8397]	81.9+0.0s
[12800/16000]	[L1: 5.8459]	76.7+0.0s
[14400/16000]	[L1: 5.8471]	78.3+0.0s
[16000/16000]	[L1: 5.8556]	78.3+0.0s
[Epoch 359]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8100]	89.8+0.5s
[3200/16000]	[L1: 5.8417]	82.2+0.0s
[4800/16000]	[L1: 5.8800]	80.2+0.0s
[6400/16000]	[L1: 5.8845]	77.5+0.0s
[8000/16000]	[L1: 5.8990]	79.2+0.0s
[9600/16000]	[L1: 5.8743]	86.4+0.0s
[11200/16000]	[L1: 5.8656]	77.7+0.0s
[12800/16000]	[L1: 5.8488]	89.5+0.0s
[14400/16000]	[L1: 5.8450]	80.1+0.0s
[16000/16000]	[L1: 5.8667]	82.3+0.0s
[Epoch 360]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9484]	78.9+0.5s
[3200/16000]	[L1: 5.9887]	83.2+0.0s
[4800/16000]	[L1: 5.9069]	77.1+0.0s
[6400/16000]	[L1: 5.9057]	79.6+0.0s
[8000/16000]	[L1: 5.9334]	85.9+0.1s
[9600/16000]	[L1: 5.9219]	77.0+0.0s
[11200/16000]	[L1: 5.9187]	81.6+0.0s
[12800/16000]	[L1: 5.9229]	76.6+0.0s
[14400/16000]	[L1: 5.9349]	76.8+0.0s
[16000/16000]	[L1: 5.9327]	74.2+0.0s
[Epoch 361]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8690]	74.9+0.5s
[3200/16000]	[L1: 6.0077]	74.9+0.0s
[4800/16000]	[L1: 6.0445]	74.9+0.0s
[6400/16000]	[L1: 5.9801]	74.9+0.0s
[8000/16000]	[L1: 5.9663]	75.0+0.0s
[9600/16000]	[L1: 5.9325]	74.9+0.0s
[11200/16000]	[L1: 5.9326]	78.6+0.0s
[12800/16000]	[L1: 5.9247]	83.9+0.0s
[14400/16000]	[L1: 5.9225]	77.0+0.0s
[16000/16000]	[L1: 5.9123]	78.0+0.0s
[Epoch 362]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8287]	79.0+0.5s
[3200/16000]	[L1: 5.8542]	83.6+0.0s
[4800/16000]	[L1: 5.8579]	78.7+0.0s
[6400/16000]	[L1: 5.8694]	86.5+0.0s
[8000/16000]	[L1: 5.9337]	82.3+0.0s
[9600/16000]	[L1: 5.9169]	77.7+0.0s
[11200/16000]	[L1: 5.9157]	79.0+0.0s
[12800/16000]	[L1: 5.9175]	89.7+0.0s
[14400/16000]	[L1: 5.8975]	86.4+0.0s
[16000/16000]	[L1: 5.9113]	89.5+0.0s
[Epoch 363]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8755]	79.1+0.5s
[3200/16000]	[L1: 5.9736]	82.0+0.0s
[4800/16000]	[L1: 5.9714]	91.7+0.0s
[6400/16000]	[L1: 5.9050]	82.1+0.0s
[8000/16000]	[L1: 5.8998]	79.4+0.0s
[9600/16000]	[L1: 5.8844]	79.9+0.0s
[11200/16000]	[L1: 5.8880]	82.3+0.0s
[12800/16000]	[L1: 5.8733]	79.2+0.0s
[14400/16000]	[L1: 5.8625]	78.8+0.0s
[16000/16000]	[L1: 5.8815]	79.0+0.0s
[Epoch 364]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7658]	77.6+0.5s
[3200/16000]	[L1: 5.8623]	86.6+0.0s
[4800/16000]	[L1: 5.9200]	80.4+0.0s
[6400/16000]	[L1: 5.9419]	84.5+0.0s
[8000/16000]	[L1: 5.9307]	78.1+0.0s
[9600/16000]	[L1: 5.9376]	79.1+0.0s
[11200/16000]	[L1: 5.9589]	85.5+0.0s
[12800/16000]	[L1: 5.9396]	82.8+0.0s
[14400/16000]	[L1: 5.9375]	79.5+0.0s
[16000/16000]	[L1: 5.9313]	81.6+0.0s
[Epoch 365]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9525]	81.9+0.5s
[3200/16000]	[L1: 5.9730]	83.7+0.0s
[4800/16000]	[L1: 5.9098]	78.8+0.0s
[6400/16000]	[L1: 5.8724]	80.9+0.0s
[8000/16000]	[L1: 5.8544]	84.5+0.0s
[9600/16000]	[L1: 5.8676]	80.0+0.0s
[11200/16000]	[L1: 5.8866]	83.6+0.0s
[12800/16000]	[L1: 5.8881]	81.6+0.0s
[14400/16000]	[L1: 5.8680]	79.2+0.0s
[16000/16000]	[L1: 5.8735]	81.9+0.0s
[Epoch 366]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8195]	80.0+0.5s
[3200/16000]	[L1: 5.8443]	81.2+0.0s
[4800/16000]	[L1: 5.9252]	81.9+0.0s
[6400/16000]	[L1: 5.9502]	78.0+0.0s
[8000/16000]	[L1: 5.9342]	83.5+0.0s
[9600/16000]	[L1: 5.9387]	76.7+0.0s
[11200/16000]	[L1: 5.9082]	76.9+0.0s
[12800/16000]	[L1: 5.9147]	77.6+0.0s
[14400/16000]	[L1: 5.9187]	80.6+0.0s
[16000/16000]	[L1: 5.9223]	79.9+0.0s
[Epoch 367]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7878]	74.6+0.5s
[3200/16000]	[L1: 5.8445]	74.9+0.0s
[4800/16000]	[L1: 5.8026]	74.7+0.0s
[6400/16000]	[L1: 5.7931]	74.9+0.0s
[8000/16000]	[L1: 5.8269]	75.1+0.0s
[9600/16000]	[L1: 5.8247]	74.7+0.0s
[11200/16000]	[L1: 5.8495]	74.6+0.0s
[12800/16000]	[L1: 5.8543]	75.1+0.0s
[14400/16000]	[L1: 5.8705]	74.6+0.0s
[16000/16000]	[L1: 5.8933]	75.4+0.0s
[Epoch 368]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8933]	75.4+0.5s
[3200/16000]	[L1: 5.8743]	75.0+0.0s
[4800/16000]	[L1: 5.9309]	75.5+0.0s
[6400/16000]	[L1: 5.8949]	75.1+0.0s
[8000/16000]	[L1: 5.9273]	75.0+0.0s
[9600/16000]	[L1: 5.9364]	75.0+0.0s
[11200/16000]	[L1: 5.9437]	75.0+0.0s
[12800/16000]	[L1: 5.9247]	75.0+0.0s
[14400/16000]	[L1: 5.9333]	75.2+0.0s
[16000/16000]	[L1: 5.9327]	78.1+0.1s
[Epoch 369]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8172]	86.0+0.5s
[3200/16000]	[L1: 5.8879]	82.3+0.0s
[4800/16000]	[L1: 5.8646]	86.8+0.0s
[6400/16000]	[L1: 5.8788]	81.4+0.0s
[8000/16000]	[L1: 5.8660]	93.6+0.1s
[9600/16000]	[L1: 5.8696]	84.4+0.0s
[11200/16000]	[L1: 5.8538]	85.4+0.0s
[12800/16000]	[L1: 5.8167]	80.6+0.0s
[14400/16000]	[L1: 5.8399]	81.7+0.0s
[16000/16000]	[L1: 5.8317]	82.9+0.0s
[Epoch 370]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8687]	95.7+0.5s
[3200/16000]	[L1: 5.8155]	76.6+0.0s
[4800/16000]	[L1: 5.8335]	78.8+0.0s
[6400/16000]	[L1: 5.8432]	77.7+0.0s
[8000/16000]	[L1: 5.8371]	79.9+0.1s
[9600/16000]	[L1: 5.8372]	82.4+0.0s
[11200/16000]	[L1: 5.8152]	84.0+0.0s
[12800/16000]	[L1: 5.8387]	86.7+0.0s
[14400/16000]	[L1: 5.8620]	80.6+0.0s
[16000/16000]	[L1: 5.8685]	77.0+0.0s
[Epoch 371]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8677]	75.6+0.6s
[3200/16000]	[L1: 5.8674]	79.7+0.0s
[4800/16000]	[L1: 5.8868]	83.0+0.0s
[6400/16000]	[L1: 5.9414]	87.5+0.0s
[8000/16000]	[L1: 5.9727]	80.9+0.0s
[9600/16000]	[L1: 5.9584]	78.5+0.0s
[11200/16000]	[L1: 5.9090]	84.2+0.0s
[12800/16000]	[L1: 5.8882]	83.0+0.0s
[14400/16000]	[L1: 5.8816]	82.2+0.0s
[16000/16000]	[L1: 5.9010]	82.6+0.0s
[Epoch 372]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9414]	83.2+0.5s
[3200/16000]	[L1: 5.8511]	82.7+0.0s
[4800/16000]	[L1: 5.8287]	85.7+0.0s
[6400/16000]	[L1: 5.8676]	81.8+0.0s
[8000/16000]	[L1: 5.8577]	80.4+0.0s
[9600/16000]	[L1: 5.8676]	80.2+0.0s
[11200/16000]	[L1: 5.8676]	80.8+0.0s
[12800/16000]	[L1: 5.8867]	82.6+0.0s
[14400/16000]	[L1: 5.8884]	81.2+0.0s
[16000/16000]	[L1: 5.9036]	79.8+0.0s
[Epoch 373]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7825]	81.3+0.5s
[3200/16000]	[L1: 5.8279]	85.1+0.0s
[4800/16000]	[L1: 5.8145]	81.4+0.1s
[6400/16000]	[L1: 5.7826]	90.7+0.0s
[8000/16000]	[L1: 5.7745]	85.4+0.0s
[9600/16000]	[L1: 5.8200]	82.7+0.0s
[11200/16000]	[L1: 5.8213]	83.5+0.0s
[12800/16000]	[L1: 5.8260]	88.1+0.0s
[14400/16000]	[L1: 5.8335]	87.7+0.0s
[16000/16000]	[L1: 5.8452]	80.7+0.0s
[Epoch 374]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9746]	86.5+0.5s
[3200/16000]	[L1: 5.9305]	79.9+0.0s
[4800/16000]	[L1: 5.8825]	82.3+0.0s
[6400/16000]	[L1: 5.8876]	81.5+0.0s
[8000/16000]	[L1: 5.8752]	85.0+0.0s
[9600/16000]	[L1: 5.9106]	81.8+0.0s
[11200/16000]	[L1: 5.8891]	80.7+0.0s
[12800/16000]	[L1: 5.9082]	85.2+0.0s
[14400/16000]	[L1: 5.9091]	81.6+0.0s
[16000/16000]	[L1: 5.9035]	80.0+0.0s
[Epoch 375]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8928]	75.9+0.6s
[3200/16000]	[L1: 5.9384]	85.5+0.0s
[4800/16000]	[L1: 5.8887]	84.1+0.1s
[6400/16000]	[L1: 5.8553]	76.6+0.0s
[8000/16000]	[L1: 5.8436]	75.8+0.0s
[9600/16000]	[L1: 5.8476]	86.0+0.0s
[11200/16000]	[L1: 5.8619]	101.2+0.0s
[12800/16000]	[L1: 5.8676]	83.6+0.0s
[14400/16000]	[L1: 5.8617]	80.2+0.0s
[16000/16000]	[L1: 5.8433]	77.7+0.0s
[Epoch 376]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7679]	84.2+0.5s
[3200/16000]	[L1: 5.9323]	85.0+0.0s
[4800/16000]	[L1: 5.9073]	83.8+0.0s
[6400/16000]	[L1: 5.9233]	88.2+0.0s
[8000/16000]	[L1: 5.8483]	89.6+0.1s
[9600/16000]	[L1: 5.8598]	79.1+0.0s
[11200/16000]	[L1: 5.8505]	81.7+0.0s
[12800/16000]	[L1: 5.8725]	89.3+0.0s
[14400/16000]	[L1: 5.8597]	86.2+0.0s
[16000/16000]	[L1: 5.8579]	90.2+0.0s
[Epoch 377]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8655]	77.7+0.6s
[3200/16000]	[L1: 5.8318]	83.1+0.0s
[4800/16000]	[L1: 5.9081]	85.4+0.0s
[6400/16000]	[L1: 5.8799]	84.1+0.0s
[8000/16000]	[L1: 5.8962]	79.9+0.0s
[9600/16000]	[L1: 5.8930]	82.7+0.0s
[11200/16000]	[L1: 5.9094]	78.9+0.0s
[12800/16000]	[L1: 5.9023]	86.8+0.0s
[14400/16000]	[L1: 5.8881]	77.0+0.0s
[16000/16000]	[L1: 5.8795]	75.6+0.0s
[Epoch 378]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7388]	81.4+0.6s
[3200/16000]	[L1: 5.7823]	80.5+0.0s
[4800/16000]	[L1: 5.7739]	89.8+0.0s
[6400/16000]	[L1: 5.7940]	76.6+0.0s
[8000/16000]	[L1: 5.8209]	85.4+0.0s
[9600/16000]	[L1: 5.8191]	82.5+0.0s
[11200/16000]	[L1: 5.7972]	81.7+0.0s
[12800/16000]	[L1: 5.8026]	85.6+0.0s
[14400/16000]	[L1: 5.8086]	77.9+0.0s
[16000/16000]	[L1: 5.8029]	80.9+0.0s
[Epoch 379]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8609]	82.8+0.5s
[3200/16000]	[L1: 5.8400]	84.8+0.0s
[4800/16000]	[L1: 5.8390]	83.9+0.0s
[6400/16000]	[L1: 5.7818]	86.9+0.0s
[8000/16000]	[L1: 5.8352]	82.1+0.0s
[9600/16000]	[L1: 5.8644]	86.9+0.0s
[11200/16000]	[L1: 5.8471]	82.8+0.0s
[12800/16000]	[L1: 5.8423]	80.6+0.0s
[14400/16000]	[L1: 5.8577]	80.2+0.0s
[16000/16000]	[L1: 5.8723]	80.3+0.0s
[Epoch 380]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9276]	88.8+0.5s
[3200/16000]	[L1: 5.9219]	85.0+0.0s
[4800/16000]	[L1: 5.9304]	81.7+0.0s
[6400/16000]	[L1: 5.9320]	81.9+0.0s
[8000/16000]	[L1: 5.9058]	80.3+0.0s
[9600/16000]	[L1: 5.8982]	77.1+0.0s
[11200/16000]	[L1: 5.8754]	81.5+0.0s
[12800/16000]	[L1: 5.8898]	78.9+0.0s
[14400/16000]	[L1: 5.8993]	81.7+0.0s
[16000/16000]	[L1: 5.9002]	85.6+0.0s
[Epoch 381]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7667]	82.6+0.5s
[3200/16000]	[L1: 5.7840]	79.9+0.0s
[4800/16000]	[L1: 5.8598]	84.2+0.0s
[6400/16000]	[L1: 5.8613]	95.2+0.0s
[8000/16000]	[L1: 5.8974]	81.4+0.0s
[9600/16000]	[L1: 5.9037]	85.2+0.0s
[11200/16000]	[L1: 5.9113]	85.4+0.0s
[12800/16000]	[L1: 5.9044]	84.1+0.0s
[14400/16000]	[L1: 5.9042]	87.0+0.0s
[16000/16000]	[L1: 5.9002]	81.2+0.0s
[Epoch 382]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7606]	81.2+0.5s
[3200/16000]	[L1: 5.8392]	81.1+0.0s
[4800/16000]	[L1: 5.8896]	79.7+0.1s
[6400/16000]	[L1: 5.8927]	81.8+0.0s
[8000/16000]	[L1: 5.8915]	79.4+0.0s
[9600/16000]	[L1: 5.9020]	90.1+0.1s
[11200/16000]	[L1: 5.8731]	81.4+0.0s
[12800/16000]	[L1: 5.8710]	82.2+0.0s
[14400/16000]	[L1: 5.8770]	84.8+0.0s
[16000/16000]	[L1: 5.8879]	85.8+0.0s
[Epoch 383]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0475]	78.3+0.5s
[3200/16000]	[L1: 5.9287]	79.3+0.0s
[4800/16000]	[L1: 5.9294]	80.9+0.0s
[6400/16000]	[L1: 5.9112]	83.0+0.0s
[8000/16000]	[L1: 5.9294]	77.8+0.0s
[9600/16000]	[L1: 5.9316]	82.8+0.0s
[11200/16000]	[L1: 5.9323]	83.5+0.0s
[12800/16000]	[L1: 5.9414]	93.0+0.0s
[14400/16000]	[L1: 5.9111]	83.5+0.0s
[16000/16000]	[L1: 5.8854]	79.5+0.0s
[Epoch 384]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9836]	79.5+0.5s
[3200/16000]	[L1: 5.8709]	80.2+0.0s
[4800/16000]	[L1: 5.8632]	80.5+0.0s
[6400/16000]	[L1: 5.9107]	80.8+0.0s
[8000/16000]	[L1: 5.9257]	81.2+0.0s
[9600/16000]	[L1: 5.9264]	78.9+0.0s
[11200/16000]	[L1: 5.9073]	81.5+0.0s
[12800/16000]	[L1: 5.8848]	80.9+0.0s
[14400/16000]	[L1: 5.9023]	78.4+0.0s
[16000/16000]	[L1: 5.8821]	80.6+0.0s
[Epoch 385]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8873]	86.4+0.6s
[3200/16000]	[L1: 5.9086]	82.2+0.0s
[4800/16000]	[L1: 5.9249]	81.9+0.0s
[6400/16000]	[L1: 5.9278]	88.6+0.0s
[8000/16000]	[L1: 5.9623]	80.2+0.0s
[9600/16000]	[L1: 5.9939]	79.5+0.0s
[11200/16000]	[L1: 5.9445]	84.2+0.0s
[12800/16000]	[L1: 5.9232]	80.5+0.0s
[14400/16000]	[L1: 5.9255]	75.2+0.0s
[16000/16000]	[L1: 5.9163]	76.7+0.0s
[Epoch 386]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6467]	83.4+0.5s
[3200/16000]	[L1: 5.7786]	89.7+0.0s
[4800/16000]	[L1: 5.8102]	83.1+0.0s
[6400/16000]	[L1: 5.7977]	80.7+0.1s
[8000/16000]	[L1: 5.8306]	75.9+0.0s
[9600/16000]	[L1: 5.8507]	79.5+0.0s
[11200/16000]	[L1: 5.8496]	81.0+0.0s
[12800/16000]	[L1: 5.8558]	85.6+0.0s
[14400/16000]	[L1: 5.8548]	84.9+0.0s
[16000/16000]	[L1: 5.8547]	81.7+0.0s
[Epoch 387]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8550]	80.4+0.5s
[3200/16000]	[L1: 5.8456]	77.9+0.0s
[4800/16000]	[L1: 5.8403]	86.2+0.0s
[6400/16000]	[L1: 5.8494]	78.7+0.0s
[8000/16000]	[L1: 5.8772]	88.6+0.0s
[9600/16000]	[L1: 5.8908]	75.6+0.0s
[11200/16000]	[L1: 5.9074]	75.4+0.0s
[12800/16000]	[L1: 5.9056]	76.0+0.0s
[14400/16000]	[L1: 5.9115]	79.6+0.0s
[16000/16000]	[L1: 5.9106]	81.3+0.0s
[Epoch 388]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7743]	87.6+0.6s
[3200/16000]	[L1: 5.9214]	78.2+0.0s
[4800/16000]	[L1: 5.9185]	74.9+0.0s
[6400/16000]	[L1: 5.9195]	75.5+0.0s
[8000/16000]	[L1: 5.8759]	81.8+0.0s
[9600/16000]	[L1: 5.8764]	82.5+0.0s
[11200/16000]	[L1: 5.8675]	79.5+0.0s
[12800/16000]	[L1: 5.8751]	79.1+0.0s
[14400/16000]	[L1: 5.8584]	80.5+0.0s
[16000/16000]	[L1: 5.8592]	81.2+0.0s
[Epoch 389]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7315]	86.5+0.5s
[3200/16000]	[L1: 5.8664]	90.3+0.0s
[4800/16000]	[L1: 5.8541]	79.4+0.0s
[6400/16000]	[L1: 5.8669]	79.5+0.0s
[8000/16000]	[L1: 5.8623]	83.4+0.0s
[9600/16000]	[L1: 5.8426]	79.9+0.0s
[11200/16000]	[L1: 5.8318]	79.1+0.0s
[12800/16000]	[L1: 5.8322]	81.4+0.0s
[14400/16000]	[L1: 5.8245]	100.9+0.0s
[16000/16000]	[L1: 5.8389]	84.2+0.0s
[Epoch 390]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7658]	91.3+0.5s
[3200/16000]	[L1: 5.7806]	79.7+0.0s
[4800/16000]	[L1: 5.8056]	83.0+0.0s
[6400/16000]	[L1: 5.7979]	80.6+0.0s
[8000/16000]	[L1: 5.8248]	89.2+0.0s
[9600/16000]	[L1: 5.8762]	81.5+0.0s
[11200/16000]	[L1: 5.8858]	77.1+0.0s
[12800/16000]	[L1: 5.8934]	84.2+0.0s
[14400/16000]	[L1: 5.8953]	82.6+0.0s
[16000/16000]	[L1: 5.8716]	79.1+0.0s
[Epoch 391]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9700]	83.4+0.5s
[3200/16000]	[L1: 5.8068]	79.4+0.0s
[4800/16000]	[L1: 5.8972]	75.1+0.0s
[6400/16000]	[L1: 5.8774]	76.8+0.0s
[8000/16000]	[L1: 5.8902]	77.5+0.0s
[9600/16000]	[L1: 5.9230]	77.1+0.0s
[11200/16000]	[L1: 5.9113]	75.9+0.0s
[12800/16000]	[L1: 5.8811]	99.4+0.0s
[14400/16000]	[L1: 5.8770]	80.0+0.0s
[16000/16000]	[L1: 5.8718]	82.7+0.0s
[Epoch 392]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8116]	80.5+0.6s
[3200/16000]	[L1: 5.8226]	81.4+0.0s
[4800/16000]	[L1: 5.8487]	83.6+0.0s
[6400/16000]	[L1: 5.8419]	93.1+0.1s
[8000/16000]	[L1: 5.8320]	90.5+0.0s
[9600/16000]	[L1: 5.8643]	88.7+0.0s
[11200/16000]	[L1: 5.8764]	82.1+0.0s
[12800/16000]	[L1: 5.8809]	87.4+0.0s
[14400/16000]	[L1: 5.9107]	82.8+0.0s
[16000/16000]	[L1: 5.8943]	86.3+0.0s
[Epoch 393]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8816]	80.9+0.5s
[3200/16000]	[L1: 5.9465]	81.2+0.0s
[4800/16000]	[L1: 5.9162]	84.8+0.0s
[6400/16000]	[L1: 5.9306]	80.0+0.0s
[8000/16000]	[L1: 5.8746]	79.5+0.0s
[9600/16000]	[L1: 5.8763]	81.3+0.0s
[11200/16000]	[L1: 5.8874]	78.5+0.0s
[12800/16000]	[L1: 5.8748]	80.3+0.0s
[14400/16000]	[L1: 5.8595]	79.1+0.0s
[16000/16000]	[L1: 5.8737]	78.8+0.0s
[Epoch 394]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.1947]	81.2+1.0s
[3200/16000]	[L1: 6.1125]	78.0+0.0s
[4800/16000]	[L1: 6.0331]	89.6+0.0s
[6400/16000]	[L1: 5.9696]	81.8+0.0s
[8000/16000]	[L1: 5.9901]	82.2+0.0s
[9600/16000]	[L1: 5.9519]	79.9+0.0s
[11200/16000]	[L1: 5.9480]	80.6+0.0s
[12800/16000]	[L1: 5.9195]	83.6+0.0s
[14400/16000]	[L1: 5.9272]	84.5+0.0s
[16000/16000]	[L1: 5.9187]	86.1+0.0s
[Epoch 395]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9788]	86.3+0.5s
[3200/16000]	[L1: 5.8374]	76.6+0.0s
[4800/16000]	[L1: 5.9168]	83.1+0.0s
[6400/16000]	[L1: 5.9000]	88.2+0.0s
[8000/16000]	[L1: 5.9118]	79.2+0.0s
[9600/16000]	[L1: 5.9017]	85.5+0.0s
[11200/16000]	[L1: 5.9138]	82.8+0.0s
[12800/16000]	[L1: 5.9090]	79.7+0.0s
[14400/16000]	[L1: 5.9229]	80.5+0.0s
[16000/16000]	[L1: 5.9093]	80.4+0.0s
[Epoch 396]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8012]	84.6+0.8s
[3200/16000]	[L1: 5.8271]	85.3+0.0s
[4800/16000]	[L1: 5.8471]	93.3+0.1s
[6400/16000]	[L1: 5.8098]	89.9+0.0s
[8000/16000]	[L1: 5.8647]	83.1+0.0s
[9600/16000]	[L1: 5.8705]	78.7+0.0s
[11200/16000]	[L1: 5.8411]	81.4+0.0s
[12800/16000]	[L1: 5.8368]	78.1+0.0s
[14400/16000]	[L1: 5.8441]	79.5+0.0s
[16000/16000]	[L1: 5.8562]	83.0+0.0s
[Epoch 397]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0026]	79.7+0.5s
[3200/16000]	[L1: 5.8970]	77.5+0.0s
[4800/16000]	[L1: 5.8553]	80.5+0.0s
[6400/16000]	[L1: 5.9059]	76.4+0.0s
[8000/16000]	[L1: 5.8948]	82.0+0.0s
[9600/16000]	[L1: 5.9005]	80.7+0.0s
[11200/16000]	[L1: 5.8788]	78.1+0.0s
[12800/16000]	[L1: 5.8820]	77.1+0.0s
[14400/16000]	[L1: 5.8699]	81.9+0.0s
[16000/16000]	[L1: 5.8633]	81.2+0.0s
[Epoch 398]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8179]	79.7+0.5s
[3200/16000]	[L1: 5.8517]	77.5+0.0s
[4800/16000]	[L1: 5.9573]	83.6+0.0s
[6400/16000]	[L1: 5.9510]	79.8+0.0s
[8000/16000]	[L1: 5.9586]	83.1+0.0s
[9600/16000]	[L1: 5.9453]	80.9+0.0s
[11200/16000]	[L1: 5.9311]	80.1+0.0s
[12800/16000]	[L1: 5.9304]	80.7+0.0s
[14400/16000]	[L1: 5.8951]	81.3+0.0s
[16000/16000]	[L1: 5.8915]	80.3+0.0s
[Epoch 399]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9190]	81.8+0.5s
[3200/16000]	[L1: 5.8547]	79.6+0.1s
[4800/16000]	[L1: 5.8916]	86.1+0.0s
[6400/16000]	[L1: 5.8940]	81.4+0.0s
[8000/16000]	[L1: 5.8742]	83.3+0.0s
[9600/16000]	[L1: 5.8630]	78.8+0.0s
[11200/16000]	[L1: 5.8615]	80.9+0.0s
[12800/16000]	[L1: 5.8710]	80.6+0.0s
[14400/16000]	[L1: 5.8856]	85.8+0.0s
[16000/16000]	[L1: 5.8719]	85.0+0.0s
[Epoch 400]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7691]	81.1+0.5s
[3200/16000]	[L1: 5.9304]	81.8+0.0s
[4800/16000]	[L1: 5.8722]	81.2+0.0s
[6400/16000]	[L1: 5.8261]	79.7+0.0s
[8000/16000]	[L1: 5.8318]	83.4+0.0s
[9600/16000]	[L1: 5.8189]	88.5+0.0s
[11200/16000]	[L1: 5.8277]	77.9+0.0s
[12800/16000]	[L1: 5.8549]	77.7+0.0s
[14400/16000]	[L1: 5.8510]	77.7+0.0s
[16000/16000]	[L1: 5.8360]	81.0+0.0s
[Epoch 401]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9727]	82.6+0.5s
[3200/16000]	[L1: 5.9482]	83.5+0.0s
[4800/16000]	[L1: 5.9189]	82.1+0.0s
[6400/16000]	[L1: 5.8996]	77.4+0.0s
[8000/16000]	[L1: 5.8746]	74.9+0.0s
[9600/16000]	[L1: 5.8903]	74.6+0.0s
[11200/16000]	[L1: 5.8804]	76.3+0.0s
[12800/16000]	[L1: 5.8842]	79.8+0.0s
[14400/16000]	[L1: 5.8781]	80.1+0.0s
[16000/16000]	[L1: 5.8867]	83.9+0.0s
[Epoch 402]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8474]	79.6+0.5s
[3200/16000]	[L1: 5.8111]	79.1+0.0s
[4800/16000]	[L1: 5.7977]	84.4+0.0s
[6400/16000]	[L1: 5.8210]	84.8+0.0s
[8000/16000]	[L1: 5.8412]	77.3+0.0s
[9600/16000]	[L1: 5.8311]	82.3+0.0s
[11200/16000]	[L1: 5.8365]	82.0+0.0s
[12800/16000]	[L1: 5.8444]	81.3+0.0s
[14400/16000]	[L1: 5.8428]	82.6+0.0s
[16000/16000]	[L1: 5.8384]	79.3+0.0s
[Epoch 403]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7867]	77.4+0.7s
[3200/16000]	[L1: 5.8340]	82.1+0.0s
[4800/16000]	[L1: 5.7994]	78.5+0.0s
[6400/16000]	[L1: 5.8634]	82.8+0.0s
[8000/16000]	[L1: 5.8794]	81.4+0.0s
[9600/16000]	[L1: 5.8943]	85.2+0.0s
[11200/16000]	[L1: 5.8642]	82.6+0.0s
[12800/16000]	[L1: 5.8239]	88.0+0.0s
[14400/16000]	[L1: 5.8399]	80.4+0.0s
[16000/16000]	[L1: 5.8397]	76.9+0.0s
[Epoch 404]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9888]	88.5+0.5s
[3200/16000]	[L1: 5.9980]	77.0+0.0s
[4800/16000]	[L1: 5.9282]	78.0+0.0s
[6400/16000]	[L1: 6.0122]	91.6+0.0s
[8000/16000]	[L1: 5.9308]	78.8+0.0s
[9600/16000]	[L1: 5.9113]	77.6+0.0s
[11200/16000]	[L1: 5.9187]	78.2+0.0s
[12800/16000]	[L1: 5.9138]	74.6+0.0s
[14400/16000]	[L1: 5.9136]	78.4+0.0s
[16000/16000]	[L1: 5.9039]	80.5+0.0s
[Epoch 405]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8024]	77.3+0.6s
[3200/16000]	[L1: 5.7820]	77.7+0.0s
[4800/16000]	[L1: 5.8489]	83.2+0.0s
[6400/16000]	[L1: 5.8473]	78.2+0.0s
[8000/16000]	[L1: 5.8846]	77.1+0.0s
[9600/16000]	[L1: 5.8778]	76.8+0.0s
[11200/16000]	[L1: 5.8678]	79.2+0.0s
[12800/16000]	[L1: 5.8756]	78.3+0.0s
[14400/16000]	[L1: 5.8802]	76.1+0.0s
[16000/16000]	[L1: 5.8711]	81.7+0.0s
[Epoch 406]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7569]	75.1+0.8s
[3200/16000]	[L1: 5.7156]	77.0+0.0s
[4800/16000]	[L1: 5.7959]	80.8+0.0s
[6400/16000]	[L1: 5.7941]	79.2+0.0s
[8000/16000]	[L1: 5.8229]	81.3+0.0s
[9600/16000]	[L1: 5.8303]	80.6+0.0s
[11200/16000]	[L1: 5.8319]	85.2+0.0s
[12800/16000]	[L1: 5.8317]	87.1+0.0s
[14400/16000]	[L1: 5.8203]	77.8+0.0s
[16000/16000]	[L1: 5.8420]	78.7+0.0s
[Epoch 407]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8555]	79.4+0.5s
[3200/16000]	[L1: 5.8780]	79.3+0.0s
[4800/16000]	[L1: 5.8958]	80.0+0.0s
[6400/16000]	[L1: 5.8289]	87.0+0.0s
[8000/16000]	[L1: 5.8403]	77.4+0.0s
[9600/16000]	[L1: 5.8293]	81.1+0.1s
[11200/16000]	[L1: 5.8252]	79.2+0.0s
[12800/16000]	[L1: 5.8515]	79.3+0.0s
[14400/16000]	[L1: 5.8555]	78.4+0.0s
[16000/16000]	[L1: 5.8551]	80.7+0.0s
[Epoch 408]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0443]	81.1+0.5s
[3200/16000]	[L1: 5.8397]	78.5+0.0s
[4800/16000]	[L1: 5.8348]	84.2+0.0s
[6400/16000]	[L1: 5.7784]	76.9+0.1s
[8000/16000]	[L1: 5.8149]	74.6+0.0s
[9600/16000]	[L1: 5.7815]	78.0+0.0s
[11200/16000]	[L1: 5.8219]	76.4+0.0s
[12800/16000]	[L1: 5.8577]	76.2+0.0s
[14400/16000]	[L1: 5.8677]	77.0+0.0s
[16000/16000]	[L1: 5.8375]	75.3+0.0s
[Epoch 409]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7039]	75.5+0.5s
[3200/16000]	[L1: 5.6712]	75.0+0.0s
[4800/16000]	[L1: 5.7523]	75.0+0.0s
[6400/16000]	[L1: 5.8010]	75.6+0.0s
[8000/16000]	[L1: 5.8199]	76.5+0.0s
[9600/16000]	[L1: 5.8026]	76.5+0.0s
[11200/16000]	[L1: 5.8017]	74.8+0.0s
[12800/16000]	[L1: 5.8367]	76.0+0.0s
[14400/16000]	[L1: 5.8324]	76.4+0.0s
[16000/16000]	[L1: 5.8388]	75.5+0.0s
[Epoch 410]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9051]	76.8+0.5s
[3200/16000]	[L1: 5.9054]	76.5+0.0s
[4800/16000]	[L1: 5.8410]	76.1+0.0s
[6400/16000]	[L1: 5.8500]	77.5+0.0s
[8000/16000]	[L1: 5.8713]	76.0+0.0s
[9600/16000]	[L1: 5.8991]	76.7+0.0s
[11200/16000]	[L1: 5.9008]	77.8+0.0s
[12800/16000]	[L1: 5.8863]	73.8+0.0s
[14400/16000]	[L1: 5.8781]	73.4+0.1s
[16000/16000]	[L1: 5.8741]	73.1+0.0s
[Epoch 411]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8609]	73.3+0.5s
[3200/16000]	[L1: 5.8723]	77.8+0.0s
[4800/16000]	[L1: 5.8797]	77.3+0.0s
[6400/16000]	[L1: 5.8918]	75.8+0.0s
[8000/16000]	[L1: 5.8870]	75.7+0.0s
[9600/16000]	[L1: 5.8789]	77.6+0.0s
[11200/16000]	[L1: 5.8638]	79.0+0.0s
[12800/16000]	[L1: 5.8611]	76.5+0.0s
[14400/16000]	[L1: 5.8523]	76.3+0.0s
[16000/16000]	[L1: 5.8663]	75.7+0.0s
[Epoch 412]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8913]	77.2+0.5s
[3200/16000]	[L1: 5.8442]	78.0+0.0s
[4800/16000]	[L1: 5.8678]	76.3+0.0s
[6400/16000]	[L1: 5.8869]	77.0+0.0s
[8000/16000]	[L1: 5.8620]	75.8+0.0s
[9600/16000]	[L1: 5.8680]	76.2+0.0s
[11200/16000]	[L1: 5.8598]	76.7+0.0s
[12800/16000]	[L1: 5.8889]	74.9+0.0s
[14400/16000]	[L1: 5.8882]	76.0+0.0s
[16000/16000]	[L1: 5.8904]	73.3+0.0s
[Epoch 413]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7839]	76.4+0.5s
[3200/16000]	[L1: 5.8471]	75.7+0.0s
[4800/16000]	[L1: 5.8297]	75.1+0.0s
[6400/16000]	[L1: 5.8597]	76.5+0.0s
[8000/16000]	[L1: 5.8408]	75.0+0.0s
[9600/16000]	[L1: 5.8683]	75.4+0.0s
[11200/16000]	[L1: 5.8791]	75.4+0.0s
[12800/16000]	[L1: 5.8615]	77.0+0.0s
[14400/16000]	[L1: 5.8520]	75.2+0.0s
[16000/16000]	[L1: 5.8549]	75.4+0.0s
[Epoch 414]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9303]	75.8+0.5s
[3200/16000]	[L1: 5.9181]	74.8+0.0s
[4800/16000]	[L1: 5.8805]	76.1+0.0s
[6400/16000]	[L1: 5.8977]	74.4+0.0s
[8000/16000]	[L1: 5.8720]	73.9+0.0s
[9600/16000]	[L1: 5.8684]	75.0+0.0s
[11200/16000]	[L1: 5.8975]	75.8+0.0s
[12800/16000]	[L1: 5.8841]	77.2+0.0s
[14400/16000]	[L1: 5.8495]	75.3+0.0s
[16000/16000]	[L1: 5.8354]	74.5+0.0s
[Epoch 415]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7463]	75.1+0.5s
[3200/16000]	[L1: 5.7738]	74.8+0.0s
[4800/16000]	[L1: 5.8818]	76.3+0.0s
[6400/16000]	[L1: 5.9392]	76.9+0.0s
[8000/16000]	[L1: 5.9018]	75.8+0.0s
[9600/16000]	[L1: 5.8528]	76.0+0.0s
[11200/16000]	[L1: 5.8696]	75.7+0.0s
[12800/16000]	[L1: 5.8753]	76.1+0.0s
[14400/16000]	[L1: 5.8802]	75.9+0.0s
[16000/16000]	[L1: 5.8806]	75.1+0.0s
[Epoch 416]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6602]	75.6+0.5s
[3200/16000]	[L1: 5.7075]	76.4+0.0s
[4800/16000]	[L1: 5.7597]	77.4+0.0s
[6400/16000]	[L1: 5.7561]	79.1+0.0s
[8000/16000]	[L1: 5.8002]	78.0+0.0s
[9600/16000]	[L1: 5.7989]	75.8+0.0s
[11200/16000]	[L1: 5.8095]	76.2+0.0s
[12800/16000]	[L1: 5.8095]	76.5+0.0s
[14400/16000]	[L1: 5.8106]	75.9+0.0s
[16000/16000]	[L1: 5.8101]	75.8+0.0s
[Epoch 417]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9342]	76.2+0.7s
[3200/16000]	[L1: 5.8423]	76.4+0.0s
[4800/16000]	[L1: 5.8851]	75.6+0.0s
[6400/16000]	[L1: 5.8721]	76.4+0.0s
[8000/16000]	[L1: 5.8878]	76.9+0.0s
[9600/16000]	[L1: 5.9034]	76.4+0.0s
[11200/16000]	[L1: 5.8871]	76.2+0.0s
[12800/16000]	[L1: 5.8953]	75.8+0.0s
[14400/16000]	[L1: 5.9037]	76.2+0.0s
[16000/16000]	[L1: 5.8992]	75.7+0.0s
[Epoch 418]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6986]	75.8+0.5s
[3200/16000]	[L1: 5.8761]	77.0+0.0s
[4800/16000]	[L1: 5.9189]	75.9+0.0s
[6400/16000]	[L1: 5.8788]	76.6+0.0s
[8000/16000]	[L1: 5.8545]	76.5+0.0s
[9600/16000]	[L1: 5.8301]	76.6+0.0s
[11200/16000]	[L1: 5.8308]	77.2+0.0s
[12800/16000]	[L1: 5.8250]	76.3+0.0s
[14400/16000]	[L1: 5.8391]	77.7+0.0s
[16000/16000]	[L1: 5.8529]	75.3+0.0s
[Epoch 419]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8807]	78.5+0.5s
[3200/16000]	[L1: 5.8405]	76.5+0.0s
[4800/16000]	[L1: 5.8207]	76.6+0.0s
[6400/16000]	[L1: 5.8155]	75.5+0.0s
[8000/16000]	[L1: 5.8422]	77.3+0.0s
[9600/16000]	[L1: 5.8313]	76.7+0.0s
[11200/16000]	[L1: 5.8425]	76.7+0.0s
[12800/16000]	[L1: 5.8304]	76.7+0.0s
[14400/16000]	[L1: 5.8558]	75.9+0.0s
[16000/16000]	[L1: 5.8603]	75.5+0.0s
[Epoch 420]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9999]	75.9+0.5s
[3200/16000]	[L1: 5.9254]	76.0+0.1s
[4800/16000]	[L1: 5.8563]	80.4+0.0s
[6400/16000]	[L1: 5.8821]	77.5+0.0s
[8000/16000]	[L1: 5.8364]	75.2+0.0s
[9600/16000]	[L1: 5.8383]	77.2+0.0s
[11200/16000]	[L1: 5.8572]	75.8+0.0s
[12800/16000]	[L1: 5.8787]	77.0+0.0s
[14400/16000]	[L1: 5.8936]	76.4+0.0s
[16000/16000]	[L1: 5.8813]	76.4+0.0s
[Epoch 421]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6463]	76.4+0.5s
[3200/16000]	[L1: 5.6426]	74.9+0.0s
[4800/16000]	[L1: 5.6973]	75.7+0.0s
[6400/16000]	[L1: 5.6867]	75.0+0.0s
[8000/16000]	[L1: 5.7411]	76.4+0.0s
[9600/16000]	[L1: 5.7956]	75.4+0.0s
[11200/16000]	[L1: 5.7922]	75.7+0.0s
[12800/16000]	[L1: 5.7909]	77.4+0.0s
[14400/16000]	[L1: 5.7922]	76.3+0.0s
[16000/16000]	[L1: 5.8170]	76.1+0.0s
[Epoch 422]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8371]	76.1+0.6s
[3200/16000]	[L1: 5.9385]	74.9+0.0s
[4800/16000]	[L1: 5.8961]	75.3+0.0s
[6400/16000]	[L1: 5.8954]	75.6+0.0s
[8000/16000]	[L1: 5.8428]	75.7+0.0s
[9600/16000]	[L1: 5.8626]	78.1+0.0s
[11200/16000]	[L1: 5.8810]	74.7+0.0s
[12800/16000]	[L1: 5.8790]	74.5+0.0s
[14400/16000]	[L1: 5.8845]	72.8+0.0s
[16000/16000]	[L1: 5.8726]	73.0+0.0s
[Epoch 423]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7169]	77.7+0.5s
[3200/16000]	[L1: 5.8514]	76.2+0.0s
[4800/16000]	[L1: 5.8053]	76.0+0.0s
[6400/16000]	[L1: 5.8549]	76.7+0.0s
[8000/16000]	[L1: 5.8598]	76.0+0.0s
[9600/16000]	[L1: 5.8789]	75.5+0.0s
[11200/16000]	[L1: 5.8905]	74.2+0.0s
[12800/16000]	[L1: 5.8984]	74.7+0.0s
[14400/16000]	[L1: 5.9019]	74.4+0.0s
[16000/16000]	[L1: 5.8791]	74.4+0.0s
[Epoch 424]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9378]	75.5+0.5s
[3200/16000]	[L1: 5.9412]	74.3+0.0s
[4800/16000]	[L1: 5.9140]	75.2+0.0s
[6400/16000]	[L1: 5.8715]	74.6+0.0s
[8000/16000]	[L1: 5.8989]	74.9+0.0s
[9600/16000]	[L1: 5.9373]	75.5+0.0s
[11200/16000]	[L1: 5.8965]	75.0+0.0s
[12800/16000]	[L1: 5.8827]	75.3+0.0s
[14400/16000]	[L1: 5.8665]	76.2+0.0s
[16000/16000]	[L1: 5.8654]	76.7+0.0s
[Epoch 425]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0535]	77.8+0.5s
[3200/16000]	[L1: 5.9203]	74.2+0.0s
[4800/16000]	[L1: 5.8515]	75.6+0.0s
[6400/16000]	[L1: 5.8736]	74.8+0.0s
[8000/16000]	[L1: 5.8801]	75.8+0.0s
[9600/16000]	[L1: 5.8681]	75.1+0.0s
[11200/16000]	[L1: 5.8624]	75.2+0.0s
[12800/16000]	[L1: 5.8626]	76.1+0.0s
[14400/16000]	[L1: 5.8761]	75.8+0.0s
[16000/16000]	[L1: 5.8668]	76.3+0.0s
[Epoch 426]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9879]	76.8+0.5s
[3200/16000]	[L1: 5.8923]	76.7+0.0s
[4800/16000]	[L1: 5.8081]	75.5+0.0s
[6400/16000]	[L1: 5.8578]	73.8+0.0s
[8000/16000]	[L1: 5.8487]	76.3+0.0s
[9600/16000]	[L1: 5.8665]	77.0+0.0s
[11200/16000]	[L1: 5.8541]	75.9+0.0s
[12800/16000]	[L1: 5.8726]	76.9+0.0s
[14400/16000]	[L1: 5.8618]	76.3+0.0s
[16000/16000]	[L1: 5.8625]	74.7+0.0s
[Epoch 427]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.5652]	73.7+0.5s
[3200/16000]	[L1: 5.7062]	73.5+0.0s
[4800/16000]	[L1: 5.7140]	73.0+0.0s
[6400/16000]	[L1: 5.7627]	75.9+0.0s
[8000/16000]	[L1: 5.7561]	76.1+0.0s
[9600/16000]	[L1: 5.7818]	78.3+0.0s
[11200/16000]	[L1: 5.7989]	74.6+0.0s
[12800/16000]	[L1: 5.7906]	75.0+0.0s
[14400/16000]	[L1: 5.7951]	78.8+0.0s
[16000/16000]	[L1: 5.8065]	76.2+0.0s
[Epoch 428]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9074]	77.3+0.5s
[3200/16000]	[L1: 5.9970]	76.8+0.0s
[4800/16000]	[L1: 5.9137]	76.4+0.0s
[6400/16000]	[L1: 5.9077]	76.1+0.0s
[8000/16000]	[L1: 5.9014]	76.5+0.0s
[9600/16000]	[L1: 5.9014]	76.1+0.0s
[11200/16000]	[L1: 5.9052]	77.8+0.1s
[12800/16000]	[L1: 5.8972]	75.0+0.0s
[14400/16000]	[L1: 5.9149]	74.8+0.0s
[16000/16000]	[L1: 5.8958]	74.8+0.0s
[Epoch 429]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8862]	76.1+0.5s
[3200/16000]	[L1: 5.9121]	76.5+0.0s
[4800/16000]	[L1: 5.8817]	76.8+0.0s
[6400/16000]	[L1: 5.9669]	76.7+0.0s
[8000/16000]	[L1: 5.9488]	76.5+0.0s
[9600/16000]	[L1: 5.9386]	74.0+0.0s
[11200/16000]	[L1: 5.9306]	76.5+0.0s
[12800/16000]	[L1: 5.9121]	77.5+0.0s
[14400/16000]	[L1: 5.8868]	76.6+0.0s
[16000/16000]	[L1: 5.8842]	76.0+0.0s
[Epoch 430]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7760]	76.4+0.5s
[3200/16000]	[L1: 5.8357]	81.5+0.0s
[4800/16000]	[L1: 5.8238]	82.5+0.0s
[6400/16000]	[L1: 5.8645]	78.9+0.0s
[8000/16000]	[L1: 5.8941]	79.6+0.0s
[9600/16000]	[L1: 5.9157]	77.7+0.0s
[11200/16000]	[L1: 5.8881]	75.8+0.0s
[12800/16000]	[L1: 5.9039]	75.7+0.0s
[14400/16000]	[L1: 5.9084]	74.8+0.0s
[16000/16000]	[L1: 5.9088]	74.4+0.0s
[Epoch 431]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9658]	75.1+0.5s
[3200/16000]	[L1: 5.9206]	75.6+0.0s
[4800/16000]	[L1: 5.9933]	76.2+0.0s
[6400/16000]	[L1: 5.9378]	75.5+0.0s
[8000/16000]	[L1: 5.8771]	76.3+0.0s
[9600/16000]	[L1: 5.8673]	76.1+0.0s
[11200/16000]	[L1: 5.8562]	75.2+0.0s
[12800/16000]	[L1: 5.8583]	75.5+0.0s
[14400/16000]	[L1: 5.8571]	75.9+0.0s
[16000/16000]	[L1: 5.8577]	76.5+0.0s
[Epoch 432]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7154]	77.7+0.5s
[3200/16000]	[L1: 5.7769]	77.2+0.0s
[4800/16000]	[L1: 5.7837]	76.8+0.0s
[6400/16000]	[L1: 5.7541]	75.7+0.0s
[8000/16000]	[L1: 5.7886]	76.1+0.0s
[9600/16000]	[L1: 5.8128]	76.6+0.0s
[11200/16000]	[L1: 5.8438]	76.1+0.0s
[12800/16000]	[L1: 5.8288]	78.3+0.0s
[14400/16000]	[L1: 5.8333]	76.8+0.0s
[16000/16000]	[L1: 5.8527]	75.4+0.0s
[Epoch 433]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6289]	76.8+0.5s
[3200/16000]	[L1: 5.6885]	76.0+0.0s
[4800/16000]	[L1: 5.7075]	76.4+0.0s
[6400/16000]	[L1: 5.7263]	75.5+0.0s
[8000/16000]	[L1: 5.7326]	75.9+0.0s
[9600/16000]	[L1: 5.7552]	76.0+0.0s
[11200/16000]	[L1: 5.7752]	75.7+0.0s
[12800/16000]	[L1: 5.7833]	75.8+0.0s
[14400/16000]	[L1: 5.8219]	78.3+0.0s
[16000/16000]	[L1: 5.8389]	77.2+0.0s
[Epoch 434]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8583]	74.5+0.8s
[3200/16000]	[L1: 5.8467]	77.3+0.0s
[4800/16000]	[L1: 5.8990]	76.7+0.0s
[6400/16000]	[L1: 5.8902]	78.8+0.0s
[8000/16000]	[L1: 5.8918]	78.8+0.0s
[9600/16000]	[L1: 5.8603]	78.5+0.0s
[11200/16000]	[L1: 5.8452]	77.2+0.0s
[12800/16000]	[L1: 5.8543]	77.8+0.0s
[14400/16000]	[L1: 5.8722]	77.4+0.0s
[16000/16000]	[L1: 5.8809]	75.8+0.1s
[Epoch 435]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7221]	77.2+0.5s
[3200/16000]	[L1: 5.8101]	75.7+0.0s
[4800/16000]	[L1: 5.8229]	75.9+0.0s
[6400/16000]	[L1: 5.7934]	75.3+0.0s
[8000/16000]	[L1: 5.8341]	75.9+0.0s
[9600/16000]	[L1: 5.8470]	75.6+0.0s
[11200/16000]	[L1: 5.8517]	76.9+0.0s
[12800/16000]	[L1: 5.8486]	75.3+0.0s
[14400/16000]	[L1: 5.8740]	75.6+0.0s
[16000/16000]	[L1: 5.8668]	75.9+0.0s
[Epoch 436]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8217]	76.2+0.5s
[3200/16000]	[L1: 5.9574]	76.5+0.0s
[4800/16000]	[L1: 5.9176]	76.7+0.0s
[6400/16000]	[L1: 5.9332]	76.4+0.0s
[8000/16000]	[L1: 5.9214]	77.4+0.0s
[9600/16000]	[L1: 5.9066]	76.5+0.0s
[11200/16000]	[L1: 5.9165]	78.4+0.0s
[12800/16000]	[L1: 5.9002]	77.8+0.0s
[14400/16000]	[L1: 5.8999]	77.2+0.0s
[16000/16000]	[L1: 5.9110]	77.0+0.0s
[Epoch 437]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8992]	77.0+0.5s
[3200/16000]	[L1: 5.7825]	76.2+0.0s
[4800/16000]	[L1: 5.7435]	76.4+0.0s
[6400/16000]	[L1: 5.8643]	76.0+0.0s
[8000/16000]	[L1: 5.8430]	75.2+0.0s
[9600/16000]	[L1: 5.8064]	76.1+0.0s
[11200/16000]	[L1: 5.8332]	77.7+0.0s
[12800/16000]	[L1: 5.8249]	77.1+0.0s
[14400/16000]	[L1: 5.8140]	79.5+0.0s
[16000/16000]	[L1: 5.8043]	75.8+0.0s
[Epoch 438]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.1813]	76.1+0.5s
[3200/16000]	[L1: 5.9662]	77.1+0.0s
[4800/16000]	[L1: 5.8913]	78.3+0.0s
[6400/16000]	[L1: 5.8546]	77.4+0.0s
[8000/16000]	[L1: 5.8670]	82.1+0.0s
[9600/16000]	[L1: 5.8942]	79.0+0.0s
[11200/16000]	[L1: 5.8716]	81.3+0.0s
[12800/16000]	[L1: 5.8774]	75.8+0.0s
[14400/16000]	[L1: 5.9114]	82.3+0.0s
[16000/16000]	[L1: 5.8823]	75.6+0.0s
[Epoch 439]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0250]	76.3+0.5s
[3200/16000]	[L1: 5.9034]	76.2+0.0s
[4800/16000]	[L1: 5.9379]	75.3+0.0s
[6400/16000]	[L1: 5.9278]	74.9+0.0s
[8000/16000]	[L1: 5.9297]	74.6+0.0s
[9600/16000]	[L1: 5.9062]	74.9+0.0s
[11200/16000]	[L1: 5.8922]	75.5+0.0s
[12800/16000]	[L1: 5.8751]	75.0+0.0s
[14400/16000]	[L1: 5.8802]	75.6+0.0s
[16000/16000]	[L1: 5.8607]	75.1+0.0s
[Epoch 440]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8421]	76.0+0.5s
[3200/16000]	[L1: 5.9356]	76.8+0.0s
[4800/16000]	[L1: 5.9352]	75.1+0.0s
[6400/16000]	[L1: 5.8971]	77.7+0.0s
[8000/16000]	[L1: 5.8772]	74.4+0.0s
[9600/16000]	[L1: 5.9011]	74.7+0.0s
[11200/16000]	[L1: 5.8787]	74.7+0.0s
[12800/16000]	[L1: 5.8651]	74.4+0.0s
[14400/16000]	[L1: 5.8647]	74.6+0.0s
[16000/16000]	[L1: 5.8741]	74.4+0.0s
[Epoch 441]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9301]	77.4+0.5s
[3200/16000]	[L1: 5.8743]	74.9+0.0s
[4800/16000]	[L1: 5.8527]	74.7+0.0s
[6400/16000]	[L1: 5.8541]	73.8+0.0s
[8000/16000]	[L1: 5.8733]	75.0+0.0s
[9600/16000]	[L1: 5.8611]	74.6+0.0s
[11200/16000]	[L1: 5.8663]	75.3+0.0s
[12800/16000]	[L1: 5.8923]	75.3+0.0s
[14400/16000]	[L1: 5.8706]	75.1+0.0s
[16000/16000]	[L1: 5.8853]	74.7+0.0s
[Epoch 442]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6415]	75.7+0.5s
[3200/16000]	[L1: 5.7369]	75.6+0.0s
[4800/16000]	[L1: 5.7803]	75.5+0.0s
[6400/16000]	[L1: 5.8396]	74.5+0.0s
[8000/16000]	[L1: 5.8477]	74.4+0.0s
[9600/16000]	[L1: 5.8285]	74.4+0.0s
[11200/16000]	[L1: 5.8399]	75.3+0.0s
[12800/16000]	[L1: 5.8197]	74.2+0.0s
[14400/16000]	[L1: 5.8407]	75.1+0.0s
[16000/16000]	[L1: 5.8585]	75.2+0.0s
[Epoch 443]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8619]	77.4+0.5s
[3200/16000]	[L1: 5.8569]	75.9+0.0s
[4800/16000]	[L1: 5.9115]	76.5+0.0s
[6400/16000]	[L1: 5.9314]	76.4+0.0s
[8000/16000]	[L1: 5.9292]	75.7+0.0s
[9600/16000]	[L1: 5.9098]	75.0+0.0s
[11200/16000]	[L1: 5.8880]	74.8+0.0s
[12800/16000]	[L1: 5.8740]	74.4+0.0s
[14400/16000]	[L1: 5.8674]	74.8+0.0s
[16000/16000]	[L1: 5.8742]	75.8+0.0s
[Epoch 444]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9088]	76.2+0.6s
[3200/16000]	[L1: 5.9634]	76.7+0.0s
[4800/16000]	[L1: 5.9728]	74.4+0.0s
[6400/16000]	[L1: 5.8900]	74.7+0.0s
[8000/16000]	[L1: 5.8991]	75.3+0.0s
[9600/16000]	[L1: 5.8588]	76.0+0.0s
[11200/16000]	[L1: 5.8478]	76.2+0.0s
[12800/16000]	[L1: 5.8698]	75.9+0.0s
[14400/16000]	[L1: 5.8588]	75.4+0.0s
[16000/16000]	[L1: 5.8621]	78.0+0.0s
[Epoch 445]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8570]	75.8+0.5s
[3200/16000]	[L1: 5.7837]	75.1+0.0s
[4800/16000]	[L1: 5.7924]	74.9+0.0s
[6400/16000]	[L1: 5.8664]	76.0+0.0s
[8000/16000]	[L1: 5.8885]	76.4+0.0s
[9600/16000]	[L1: 5.8561]	76.9+0.0s
[11200/16000]	[L1: 5.8660]	86.8+0.0s
[12800/16000]	[L1: 5.8710]	75.9+0.0s
[14400/16000]	[L1: 5.8584]	75.6+0.0s
[16000/16000]	[L1: 5.8590]	75.9+0.0s
[Epoch 446]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7243]	75.6+0.5s
[3200/16000]	[L1: 5.8037]	75.9+0.0s
[4800/16000]	[L1: 5.7882]	76.3+0.0s
[6400/16000]	[L1: 5.7935]	76.1+0.0s
[8000/16000]	[L1: 5.8047]	75.7+0.0s
[9600/16000]	[L1: 5.8394]	75.2+0.0s
[11200/16000]	[L1: 5.8327]	75.9+0.0s
[12800/16000]	[L1: 5.8605]	76.7+0.0s
[14400/16000]	[L1: 5.8640]	74.8+0.0s
[16000/16000]	[L1: 5.8791]	74.8+0.0s
[Epoch 447]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7928]	76.7+0.5s
[3200/16000]	[L1: 5.7780]	75.1+0.0s
[4800/16000]	[L1: 5.8202]	75.0+0.0s
[6400/16000]	[L1: 5.8678]	74.6+0.0s
[8000/16000]	[L1: 5.8771]	74.8+0.0s
[9600/16000]	[L1: 5.9051]	76.5+0.0s
[11200/16000]	[L1: 5.8963]	74.7+0.0s
[12800/16000]	[L1: 5.8993]	75.2+0.0s
[14400/16000]	[L1: 5.9068]	75.3+0.0s
[16000/16000]	[L1: 5.9044]	74.6+0.0s
[Epoch 448]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0556]	74.2+0.5s
[3200/16000]	[L1: 5.9688]	75.1+0.0s
[4800/16000]	[L1: 5.9132]	77.4+0.1s
[6400/16000]	[L1: 5.8893]	78.2+0.0s
[8000/16000]	[L1: 5.8896]	76.7+0.0s
[9600/16000]	[L1: 5.8612]	80.0+0.0s
[11200/16000]	[L1: 5.8826]	77.8+0.0s
[12800/16000]	[L1: 5.8781]	76.7+0.0s
[14400/16000]	[L1: 5.8751]	76.8+0.0s
[16000/16000]	[L1: 5.8653]	76.0+0.0s
[Epoch 449]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.2652]	75.9+0.5s
[3200/16000]	[L1: 6.0936]	77.8+0.0s
[4800/16000]	[L1: 6.0198]	77.0+0.0s
[6400/16000]	[L1: 5.9402]	75.5+0.0s
[8000/16000]	[L1: 5.9127]	74.0+0.0s
[9600/16000]	[L1: 5.8986]	73.8+0.0s
[11200/16000]	[L1: 5.8637]	73.9+0.0s
[12800/16000]	[L1: 5.8872]	75.6+0.0s
[14400/16000]	[L1: 5.8943]	75.4+0.0s
[16000/16000]	[L1: 5.8668]	82.7+0.0s
[Epoch 450]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8911]	75.3+0.5s
[3200/16000]	[L1: 5.8092]	74.5+0.0s
[4800/16000]	[L1: 5.7655]	73.8+0.0s
[6400/16000]	[L1: 5.7689]	74.5+0.0s
[8000/16000]	[L1: 5.8168]	74.2+0.0s
[9600/16000]	[L1: 5.8188]	74.5+0.0s
[11200/16000]	[L1: 5.8160]	73.8+0.0s
[12800/16000]	[L1: 5.8323]	75.6+0.0s
[14400/16000]	[L1: 5.8300]	75.8+0.0s
[16000/16000]	[L1: 5.8372]	86.1+0.0s
[Epoch 451]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7397]	79.9+0.5s
[3200/16000]	[L1: 5.8151]	79.1+0.0s
[4800/16000]	[L1: 5.8292]	78.7+0.0s
[6400/16000]	[L1: 5.8657]	78.7+0.0s
[8000/16000]	[L1: 5.8936]	80.3+0.0s
[9600/16000]	[L1: 5.8590]	80.1+0.0s
[11200/16000]	[L1: 5.8252]	79.1+0.0s
[12800/16000]	[L1: 5.8390]	74.8+0.0s
[14400/16000]	[L1: 5.8462]	75.2+0.0s
[16000/16000]	[L1: 5.8375]	73.7+0.0s
[Epoch 452]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7476]	75.0+0.5s
[3200/16000]	[L1: 5.8562]	74.4+0.0s
[4800/16000]	[L1: 5.8694]	74.8+0.0s
[6400/16000]	[L1: 5.8563]	73.5+0.0s
[8000/16000]	[L1: 5.8401]	73.3+0.0s
[9600/16000]	[L1: 5.8072]	75.2+0.0s
[11200/16000]	[L1: 5.8158]	75.6+0.0s
[12800/16000]	[L1: 5.8238]	75.1+0.0s
[14400/16000]	[L1: 5.8227]	75.8+0.0s
[16000/16000]	[L1: 5.8343]	81.3+0.0s
[Epoch 453]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8688]	81.0+0.5s
[3200/16000]	[L1: 5.8858]	80.0+0.0s
[4800/16000]	[L1: 5.9003]	73.8+0.0s
[6400/16000]	[L1: 5.8764]	73.0+0.0s
[8000/16000]	[L1: 5.8518]	72.9+0.0s
[9600/16000]	[L1: 5.8592]	74.5+0.0s
[11200/16000]	[L1: 5.8750]	73.4+0.0s
[12800/16000]	[L1: 5.9068]	73.2+0.0s
[14400/16000]	[L1: 5.8921]	73.3+0.0s
[16000/16000]	[L1: 5.8942]	73.5+0.1s
[Epoch 454]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.6934]	74.9+0.5s
[3200/16000]	[L1: 5.7251]	74.4+0.0s
[4800/16000]	[L1: 5.8211]	73.8+0.0s
[6400/16000]	[L1: 5.8197]	76.0+0.0s
[8000/16000]	[L1: 5.8271]	76.7+0.0s
[9600/16000]	[L1: 5.8610]	76.7+0.0s
[11200/16000]	[L1: 5.8814]	76.2+0.0s
[12800/16000]	[L1: 5.8781]	75.9+0.0s
[14400/16000]	[L1: 5.8707]	75.5+0.0s
[16000/16000]	[L1: 5.8500]	74.5+0.0s
[Epoch 455]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9171]	74.4+0.5s
[3200/16000]	[L1: 5.9315]	74.2+0.0s
[4800/16000]	[L1: 5.9651]	75.9+0.0s
[6400/16000]	[L1: 5.9291]	74.8+0.0s
[8000/16000]	[L1: 5.8841]	74.4+0.0s
[9600/16000]	[L1: 5.8610]	74.0+0.0s
[11200/16000]	[L1: 5.8513]	73.8+0.0s
[12800/16000]	[L1: 5.8655]	75.5+0.0s
[14400/16000]	[L1: 5.8875]	75.2+0.0s
[16000/16000]	[L1: 5.8981]	73.6+0.0s
[Epoch 456]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0487]	75.1+0.5s
[3200/16000]	[L1: 5.9611]	74.5+0.0s
[4800/16000]	[L1: 5.8778]	74.1+0.0s
[6400/16000]	[L1: 5.8909]	74.2+0.0s
[8000/16000]	[L1: 5.8200]	83.9+0.0s
[9600/16000]	[L1: 5.8291]	81.2+0.1s
[11200/16000]	[L1: 5.8218]	74.7+0.0s
[12800/16000]	[L1: 5.8055]	75.3+0.0s
[14400/16000]	[L1: 5.8301]	78.6+0.0s
[16000/16000]	[L1: 5.8270]	76.6+0.0s
[Epoch 457]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8517]	74.3+0.7s
[3200/16000]	[L1: 5.8434]	75.4+0.0s
[4800/16000]	[L1: 5.8821]	79.0+0.0s
[6400/16000]	[L1: 5.8754]	81.1+0.0s
[8000/16000]	[L1: 5.8563]	76.7+0.0s
[9600/16000]	[L1: 5.8425]	78.1+0.0s
[11200/16000]	[L1: 5.8236]	78.1+0.0s
[12800/16000]	[L1: 5.8266]	75.9+0.0s
[14400/16000]	[L1: 5.8195]	74.1+0.0s
[16000/16000]	[L1: 5.8258]	74.3+0.0s
[Epoch 458]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9251]	76.5+0.5s
[3200/16000]	[L1: 5.8276]	78.2+0.0s
[4800/16000]	[L1: 5.8324]	82.4+0.0s
[6400/16000]	[L1: 5.8644]	74.8+0.0s
[8000/16000]	[L1: 5.8281]	75.3+0.0s
[9600/16000]	[L1: 5.8416]	77.3+0.0s
[11200/16000]	[L1: 5.8466]	78.6+0.0s
[12800/16000]	[L1: 5.8520]	75.7+0.0s
[14400/16000]	[L1: 5.8680]	77.9+0.0s
[16000/16000]	[L1: 5.8429]	82.1+0.0s
[Epoch 459]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.1088]	78.5+0.5s
[3200/16000]	[L1: 6.0590]	84.4+0.0s
[4800/16000]	[L1: 5.9584]	84.5+0.0s
[6400/16000]	[L1: 5.9772]	78.4+0.0s
[8000/16000]	[L1: 5.9850]	81.9+0.0s
[9600/16000]	[L1: 5.9606]	80.5+0.0s
[11200/16000]	[L1: 5.9467]	81.4+0.0s
[12800/16000]	[L1: 5.9354]	78.9+0.0s
[14400/16000]	[L1: 5.9216]	85.3+0.0s
[16000/16000]	[L1: 5.8986]	80.5+0.0s
[Epoch 460]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9326]	81.3+0.6s
[3200/16000]	[L1: 5.8815]	78.7+0.0s
[4800/16000]	[L1: 5.8388]	80.1+0.0s
[6400/16000]	[L1: 5.8733]	85.7+0.0s
[8000/16000]	[L1: 5.8563]	84.4+0.0s
[9600/16000]	[L1: 5.8169]	87.1+0.0s
[11200/16000]	[L1: 5.7923]	86.8+0.0s
[12800/16000]	[L1: 5.8517]	84.2+0.0s
[14400/16000]	[L1: 5.8642]	84.7+0.0s
[16000/16000]	[L1: 5.8635]	85.8+0.0s
[Epoch 461]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7228]	81.3+0.6s
[3200/16000]	[L1: 5.7768]	80.7+0.0s
[4800/16000]	[L1: 5.8334]	83.7+0.0s
[6400/16000]	[L1: 5.8064]	83.0+0.0s
[8000/16000]	[L1: 5.7767]	85.4+0.0s
[9600/16000]	[L1: 5.7749]	83.6+0.0s
[11200/16000]	[L1: 5.7962]	81.7+0.0s
[12800/16000]	[L1: 5.8062]	84.1+0.0s
[14400/16000]	[L1: 5.8299]	85.5+0.0s
[16000/16000]	[L1: 5.8419]	84.9+0.0s
[Epoch 462]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7503]	86.2+0.5s
[3200/16000]	[L1: 5.8192]	84.7+0.0s
[4800/16000]	[L1: 5.7630]	85.5+0.0s
[6400/16000]	[L1: 5.7911]	87.6+0.0s
[8000/16000]	[L1: 5.8146]	84.3+0.0s
[9600/16000]	[L1: 5.8354]	84.3+0.0s
[11200/16000]	[L1: 5.8365]	82.7+0.1s
[12800/16000]	[L1: 5.8461]	80.2+0.0s
[14400/16000]	[L1: 5.8430]	79.1+0.0s
[16000/16000]	[L1: 5.8389]	80.0+0.0s
[Epoch 463]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9320]	79.4+0.5s
[3200/16000]	[L1: 5.9446]	78.3+0.0s
[4800/16000]	[L1: 5.8997]	79.2+0.0s
[6400/16000]	[L1: 5.9396]	78.3+0.0s
[8000/16000]	[L1: 5.9341]	80.6+0.0s
[9600/16000]	[L1: 5.9205]	79.4+0.0s
[11200/16000]	[L1: 5.9105]	79.3+0.0s
[12800/16000]	[L1: 5.8996]	78.2+0.0s
[14400/16000]	[L1: 5.8969]	83.4+0.0s
[16000/16000]	[L1: 5.9148]	85.0+0.0s
[Epoch 464]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8857]	86.7+0.6s
[3200/16000]	[L1: 5.8511]	85.6+0.0s
[4800/16000]	[L1: 5.8711]	86.1+0.0s
[6400/16000]	[L1: 5.8786]	86.2+0.0s
[8000/16000]	[L1: 5.8664]	82.5+0.0s
[9600/16000]	[L1: 5.8898]	82.1+0.0s
[11200/16000]	[L1: 5.9151]	80.3+0.0s
[12800/16000]	[L1: 5.9068]	88.2+0.0s
[14400/16000]	[L1: 5.8701]	83.6+0.0s
[16000/16000]	[L1: 5.8690]	79.7+0.0s
[Epoch 465]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7194]	77.3+0.5s
[3200/16000]	[L1: 5.7247]	76.3+0.0s
[4800/16000]	[L1: 5.8666]	76.5+0.0s
[6400/16000]	[L1: 5.8556]	77.3+0.0s
[8000/16000]	[L1: 5.8952]	78.8+0.0s
[9600/16000]	[L1: 5.8850]	78.5+0.0s
[11200/16000]	[L1: 5.8378]	81.1+0.0s
[12800/16000]	[L1: 5.8384]	79.0+0.0s
[14400/16000]	[L1: 5.8427]	79.2+0.0s
[16000/16000]	[L1: 5.8519]	83.7+0.0s
[Epoch 466]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7987]	80.9+0.5s
[3200/16000]	[L1: 5.8830]	81.0+0.0s
[4800/16000]	[L1: 5.8868]	80.7+0.0s
[6400/16000]	[L1: 5.8509]	79.3+0.0s
[8000/16000]	[L1: 5.7886]	79.8+0.0s
[9600/16000]	[L1: 5.8056]	78.7+0.0s
[11200/16000]	[L1: 5.7998]	78.8+0.0s
[12800/16000]	[L1: 5.8106]	79.4+0.0s
[14400/16000]	[L1: 5.8428]	80.5+0.0s
[16000/16000]	[L1: 5.8379]	81.0+0.0s
[Epoch 467]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0168]	79.8+0.5s
[3200/16000]	[L1: 5.9704]	81.7+0.0s
[4800/16000]	[L1: 5.9152]	84.0+0.0s
[6400/16000]	[L1: 5.9273]	80.8+0.0s
[8000/16000]	[L1: 5.9232]	80.4+0.0s
[9600/16000]	[L1: 5.8918]	80.6+0.0s
[11200/16000]	[L1: 5.8779]	79.0+0.0s
[12800/16000]	[L1: 5.8706]	82.7+0.0s
[14400/16000]	[L1: 5.8585]	79.3+0.0s
[16000/16000]	[L1: 5.8489]	79.9+0.0s
[Epoch 468]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7454]	80.6+0.5s
[3200/16000]	[L1: 5.8204]	78.0+0.0s
[4800/16000]	[L1: 5.7886]	79.5+0.0s
[6400/16000]	[L1: 5.7947]	79.4+0.0s
[8000/16000]	[L1: 5.8356]	80.4+0.0s
[9600/16000]	[L1: 5.8526]	79.2+0.0s
[11200/16000]	[L1: 5.8717]	78.5+0.0s
[12800/16000]	[L1: 5.8797]	79.0+0.0s
[14400/16000]	[L1: 5.9025]	79.0+0.0s
[16000/16000]	[L1: 5.8923]	79.5+0.0s
[Epoch 469]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9035]	79.1+0.5s
[3200/16000]	[L1: 5.9514]	81.5+0.0s
[4800/16000]	[L1: 5.9300]	79.2+0.0s
[6400/16000]	[L1: 5.9148]	79.6+0.0s
[8000/16000]	[L1: 5.9031]	79.5+0.0s
[9600/16000]	[L1: 5.8940]	81.7+0.0s
[11200/16000]	[L1: 5.8771]	78.4+0.0s
[12800/16000]	[L1: 5.8722]	79.9+0.0s
[14400/16000]	[L1: 5.8635]	76.7+0.0s
[16000/16000]	[L1: 5.8703]	76.9+0.0s
[Epoch 470]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.9337]	75.5+0.5s
[3200/16000]	[L1: 5.8618]	75.1+0.0s
[4800/16000]	[L1: 5.8649]	75.5+0.0s
[6400/16000]	[L1: 5.8195]	74.6+0.0s
[8000/16000]	[L1: 5.8465]	74.8+0.1s
[9600/16000]	[L1: 5.8320]	74.7+0.0s
[11200/16000]	[L1: 5.8181]	74.8+0.0s
[12800/16000]	[L1: 5.8236]	76.1+0.0s
[14400/16000]	[L1: 5.8265]	75.4+0.0s
[16000/16000]	[L1: 5.8335]	75.9+0.0s
[Epoch 471]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8579]	74.7+0.5s
[3200/16000]	[L1: 5.8785]	77.2+0.0s
[4800/16000]	[L1: 5.8301]	83.1+0.0s
[6400/16000]	[L1: 5.8224]	84.1+0.0s
[8000/16000]	[L1: 5.7761]	83.6+0.0s
[9600/16000]	[L1: 5.8036]	83.6+0.0s
[11200/16000]	[L1: 5.8096]	87.9+0.0s
[12800/16000]	[L1: 5.8234]	86.3+0.0s
[14400/16000]	[L1: 5.8207]	86.4+0.0s
[16000/16000]	[L1: 5.8266]	85.7+0.0s
[Epoch 472]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7034]	84.7+0.5s
[3200/16000]	[L1: 5.7673]	84.4+0.0s
[4800/16000]	[L1: 5.7721]	80.3+0.0s
[6400/16000]	[L1: 5.8045]	84.2+0.0s
[8000/16000]	[L1: 5.8245]	80.9+0.0s
[9600/16000]	[L1: 5.8137]	79.6+0.0s
[11200/16000]	[L1: 5.8195]	75.5+0.0s
[12800/16000]	[L1: 5.8253]	76.8+0.0s
[14400/16000]	[L1: 5.8303]	75.9+0.0s
[16000/16000]	[L1: 5.8273]	73.7+0.0s
[Epoch 473]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7621]	77.4+0.5s
[3200/16000]	[L1: 5.7898]	75.7+0.0s
[4800/16000]	[L1: 5.7654]	76.1+0.0s
[6400/16000]	[L1: 5.8203]	76.1+0.0s
[8000/16000]	[L1: 5.8680]	77.4+0.0s
[9600/16000]	[L1: 5.8643]	82.9+0.0s
[11200/16000]	[L1: 5.8647]	83.7+0.0s
[12800/16000]	[L1: 5.8667]	84.2+0.0s
[14400/16000]	[L1: 5.8962]	78.8+0.0s
[16000/16000]	[L1: 5.8831]	77.7+0.0s
[Epoch 474]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8084]	77.8+0.7s
[3200/16000]	[L1: 5.8239]	79.6+0.0s
[4800/16000]	[L1: 5.7923]	88.7+0.0s
[6400/16000]	[L1: 5.8431]	80.4+0.1s
[8000/16000]	[L1: 5.8276]	77.7+0.0s
[9600/16000]	[L1: 5.8423]	79.9+0.1s
[11200/16000]	[L1: 5.8374]	78.3+0.0s
[12800/16000]	[L1: 5.8279]	78.0+0.0s
[14400/16000]	[L1: 5.8257]	77.1+0.0s
[16000/16000]	[L1: 5.8158]	77.0+0.0s
[Epoch 475]	Learning rate: 5.00e-5
[1600/16000]	[L1: 6.0658]	78.0+0.5s
[3200/16000]	[L1: 6.0059]	77.5+0.0s
[4800/16000]	[L1: 6.0014]	78.0+0.0s
[6400/16000]	[L1: 5.9423]	78.8+0.0s
[8000/16000]	[L1: 5.9313]	78.2+0.0s
[9600/16000]	[L1: 5.9553]	77.3+0.0s
[11200/16000]	[L1: 5.9341]	76.8+0.0s
[12800/16000]	[L1: 5.9200]	77.3+0.0s
[14400/16000]	[L1: 5.8889]	77.4+0.0s
[16000/16000]	[L1: 5.8823]	82.2+0.0s
[Epoch 476]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7640]	77.9+0.5s
[3200/16000]	[L1: 5.8269]	77.8+0.0s
[4800/16000]	[L1: 5.8699]	77.3+0.0s
[6400/16000]	[L1: 5.8751]	78.0+0.0s
[8000/16000]	[L1: 5.8458]	78.8+0.0s
[9600/16000]	[L1: 5.8352]	78.2+0.0s
[11200/16000]	[L1: 5.8281]	78.1+0.0s
[12800/16000]	[L1: 5.8188]	78.6+0.0s
[14400/16000]	[L1: 5.8180]	78.1+0.0s
[16000/16000]	[L1: 5.8311]	77.9+0.0s
[Epoch 477]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.8638]	77.8+0.5s
[3200/16000]	[L1: 5.8841]	77.8+0.0s
[4800/16000]	[L1: 5.8164]	78.1+0.0s
[6400/16000]	[L1: 5.8829]	78.6+0.0s
[8000/16000]	[L1: 5.8967]	77.4+0.0s
[9600/16000]	[L1: 5.8712]	77.3+0.0s
[11200/16000]	[L1: 5.8293]	78.0+0.0s
[12800/16000]	[L1: 5.8460]	78.1+0.0s
[14400/16000]	[L1: 5.8422]	77.3+0.0s
[16000/16000]	[L1: 5.8385]	77.7+0.0s
[Epoch 478]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7709]	77.9+0.5s
[3200/16000]	[L1: 5.8811]	78.3+0.0s
[4800/16000]	[L1: 5.8307]	78.1+0.0s
[6400/16000]	[L1: 5.8336]	77.9+0.0s
[8000/16000]	[L1: 5.7916]	77.7+0.0s
[9600/16000]	[L1: 5.7740]	76.7+0.0s
[11200/16000]	[L1: 5.7961]	78.5+0.0s
[12800/16000]	[L1: 5.8217]	78.7+0.0s
[14400/16000]	[L1: 5.8174]	78.2+0.0s
[16000/16000]	[L1: 5.8218]	78.4+0.0s
[Epoch 479]	Learning rate: 5.00e-5
[1600/16000]	[L1: 5.7791]	78.1+0.5s
[3200/16000]	[L1: 5.7184]	78.3+0.0s
[4800/16000]	[L1: 5.7572]	77.0+0.0s
[6400/16000]	[L1: 5.7596]	78.5+0.0s
[8000/16000]	[L1: 5.7863]	78.8+0.0s
[9600/16000]	[L1: 5.8211]	78.0+0.0s
[11200/16000]	[L1: 5.8674]	78.0+0.0s
[12800/16000]	[L1: 5.8785]	80.3+0.0s
[14400/16000]	[L1: 5.9109]	80.5+0.0s
[16000/16000]	[L1: 5.9090]	78.3+0.0s
[Epoch 480]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6539]	79.3+0.5s
[3200/16000]	[L1: 5.7793]	78.6+0.0s
[4800/16000]	[L1: 5.7677]	78.3+0.0s
[6400/16000]	[L1: 5.7778]	79.2+0.0s
[8000/16000]	[L1: 5.7904]	78.4+0.0s
[9600/16000]	[L1: 5.8060]	79.3+0.0s
[11200/16000]	[L1: 5.8353]	77.9+0.0s
[12800/16000]	[L1: 5.8304]	77.8+0.0s
[14400/16000]	[L1: 5.8275]	84.0+0.0s
[16000/16000]	[L1: 5.8381]	79.0+0.0s
[Epoch 481]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7086]	80.8+0.5s
[3200/16000]	[L1: 5.8746]	78.9+0.0s
[4800/16000]	[L1: 5.9359]	78.5+0.0s
[6400/16000]	[L1: 5.9336]	78.1+0.0s
[8000/16000]	[L1: 5.9535]	77.9+0.0s
[9600/16000]	[L1: 5.9347]	78.0+0.0s
[11200/16000]	[L1: 5.9070]	79.6+0.0s
[12800/16000]	[L1: 5.9032]	79.0+0.0s
[14400/16000]	[L1: 5.8897]	81.9+0.0s
[16000/16000]	[L1: 5.8847]	79.1+0.0s
[Epoch 482]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0911]	78.3+0.5s
[3200/16000]	[L1: 5.9474]	77.3+0.0s
[4800/16000]	[L1: 5.9518]	78.6+0.0s
[6400/16000]	[L1: 5.9224]	78.5+0.0s
[8000/16000]	[L1: 5.8912]	82.3+0.0s
[9600/16000]	[L1: 5.8565]	83.7+0.0s
[11200/16000]	[L1: 5.8034]	85.2+0.0s
[12800/16000]	[L1: 5.8270]	84.0+0.0s
[14400/16000]	[L1: 5.8291]	83.7+0.0s
[16000/16000]	[L1: 5.8250]	82.3+0.0s
[Epoch 483]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8908]	84.8+0.5s
[3200/16000]	[L1: 5.8341]	84.1+0.0s
[4800/16000]	[L1: 5.7941]	87.0+0.0s
[6400/16000]	[L1: 5.7622]	84.7+0.0s
[8000/16000]	[L1: 5.7884]	83.5+0.0s
[9600/16000]	[L1: 5.7652]	86.6+0.0s
[11200/16000]	[L1: 5.8036]	85.3+0.1s
[12800/16000]	[L1: 5.8086]	82.4+0.0s
[14400/16000]	[L1: 5.7935]	85.0+0.0s
[16000/16000]	[L1: 5.8021]	78.6+0.0s
[Epoch 484]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7217]	81.9+0.6s
[3200/16000]	[L1: 5.7146]	81.5+0.0s
[4800/16000]	[L1: 5.7716]	81.3+0.0s
[6400/16000]	[L1: 5.8162]	79.6+0.0s
[8000/16000]	[L1: 5.7306]	80.5+0.0s
[9600/16000]	[L1: 5.7597]	80.4+0.0s
[11200/16000]	[L1: 5.7841]	80.0+0.0s
[12800/16000]	[L1: 5.8109]	78.3+0.0s
[14400/16000]	[L1: 5.8096]	77.9+0.0s
[16000/16000]	[L1: 5.7980]	79.7+0.0s
[Epoch 485]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7994]	79.8+0.5s
[3200/16000]	[L1: 5.6893]	79.3+0.0s
[4800/16000]	[L1: 5.7065]	77.2+0.0s
[6400/16000]	[L1: 5.6508]	75.4+0.0s
[8000/16000]	[L1: 5.7299]	75.0+0.0s
[9600/16000]	[L1: 5.7526]	75.1+0.0s
[11200/16000]	[L1: 5.8096]	75.6+0.0s
[12800/16000]	[L1: 5.8091]	75.1+0.0s
[14400/16000]	[L1: 5.7971]	76.1+0.0s
[16000/16000]	[L1: 5.7905]	79.5+0.0s
[Epoch 486]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8819]	82.5+0.5s
[3200/16000]	[L1: 5.8758]	82.0+0.0s
[4800/16000]	[L1: 5.8301]	83.0+0.0s
[6400/16000]	[L1: 5.8451]	79.3+0.0s
[8000/16000]	[L1: 5.8485]	81.1+0.0s
[9600/16000]	[L1: 5.8870]	79.6+0.0s
[11200/16000]	[L1: 5.9148]	81.4+0.0s
[12800/16000]	[L1: 5.8926]	80.2+0.0s
[14400/16000]	[L1: 5.8884]	80.6+0.0s
[16000/16000]	[L1: 5.8696]	80.9+0.0s
[Epoch 487]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7643]	80.3+0.5s
[3200/16000]	[L1: 5.8585]	79.9+0.0s
[4800/16000]	[L1: 5.8731]	80.2+0.0s
[6400/16000]	[L1: 5.8389]	80.9+0.0s
[8000/16000]	[L1: 5.8069]	74.7+0.0s
[9600/16000]	[L1: 5.8124]	73.9+0.0s
[11200/16000]	[L1: 5.8095]	74.5+0.0s
[12800/16000]	[L1: 5.8051]	74.9+0.0s
[14400/16000]	[L1: 5.8144]	74.9+0.0s
[16000/16000]	[L1: 5.8119]	75.4+0.0s
[Epoch 488]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6688]	76.1+0.5s
[3200/16000]	[L1: 5.8098]	74.5+0.0s
[4800/16000]	[L1: 5.7873]	74.8+0.0s
[6400/16000]	[L1: 5.8153]	75.5+0.0s
[8000/16000]	[L1: 5.8236]	75.9+0.0s
[9600/16000]	[L1: 5.8548]	76.1+0.0s
[11200/16000]	[L1: 5.8481]	75.8+0.0s
[12800/16000]	[L1: 5.8344]	75.3+0.0s
[14400/16000]	[L1: 5.8275]	76.3+0.0s
[16000/16000]	[L1: 5.8088]	75.7+0.0s
[Epoch 489]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8411]	76.1+0.5s
[3200/16000]	[L1: 5.7806]	75.2+0.0s
[4800/16000]	[L1: 5.8622]	76.1+0.0s
[6400/16000]	[L1: 5.8181]	77.0+0.0s
[8000/16000]	[L1: 5.7855]	76.8+0.0s
[9600/16000]	[L1: 5.7623]	77.4+0.0s
[11200/16000]	[L1: 5.7524]	77.7+0.0s
[12800/16000]	[L1: 5.7721]	76.0+0.0s
[14400/16000]	[L1: 5.7626]	75.5+0.0s
[16000/16000]	[L1: 5.7697]	76.7+0.0s
[Epoch 490]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8124]	74.7+0.5s
[3200/16000]	[L1: 5.8808]	74.9+0.0s
[4800/16000]	[L1: 5.8664]	74.9+0.0s
[6400/16000]	[L1: 5.8556]	75.2+0.0s
[8000/16000]	[L1: 5.8502]	76.2+0.0s
[9600/16000]	[L1: 5.8434]	77.6+0.0s
[11200/16000]	[L1: 5.8614]	77.2+0.0s
[12800/16000]	[L1: 5.8458]	77.1+0.0s
[14400/16000]	[L1: 5.8273]	76.9+0.0s
[16000/16000]	[L1: 5.7940]	76.9+0.0s
[Epoch 491]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8968]	75.8+0.5s
[3200/16000]	[L1: 5.8085]	76.2+0.0s
[4800/16000]	[L1: 5.7935]	75.0+0.0s
[6400/16000]	[L1: 5.7486]	75.3+0.0s
[8000/16000]	[L1: 5.7573]	74.8+0.0s
[9600/16000]	[L1: 5.7659]	75.3+0.0s
[11200/16000]	[L1: 5.7678]	74.0+0.0s
[12800/16000]	[L1: 5.7684]	74.2+0.0s
[14400/16000]	[L1: 5.7603]	75.6+0.0s
[16000/16000]	[L1: 5.7604]	73.9+0.0s
[Epoch 492]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6856]	74.8+0.6s
[3200/16000]	[L1: 5.7720]	74.0+0.0s
[4800/16000]	[L1: 5.7349]	74.0+0.0s
[6400/16000]	[L1: 5.7145]	73.5+0.0s
[8000/16000]	[L1: 5.7458]	73.7+0.0s
[9600/16000]	[L1: 5.7984]	73.8+0.0s
[11200/16000]	[L1: 5.8023]	73.3+0.0s
[12800/16000]	[L1: 5.7949]	75.3+0.0s
[14400/16000]	[L1: 5.7951]	75.5+0.0s
[16000/16000]	[L1: 5.7748]	75.3+0.0s
[Epoch 493]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6485]	74.8+0.5s
[3200/16000]	[L1: 5.6294]	74.3+0.0s
[4800/16000]	[L1: 5.7073]	76.3+0.0s
[6400/16000]	[L1: 5.7169]	74.3+0.0s
[8000/16000]	[L1: 5.7282]	74.3+0.0s
[9600/16000]	[L1: 5.7238]	74.2+0.0s
[11200/16000]	[L1: 5.7467]	74.3+0.0s
[12800/16000]	[L1: 5.7542]	74.3+0.0s
[14400/16000]	[L1: 5.7673]	74.4+0.0s
[16000/16000]	[L1: 5.7834]	74.0+0.0s
[Epoch 494]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7718]	73.7+0.5s
[3200/16000]	[L1: 5.8281]	73.6+0.0s
[4800/16000]	[L1: 5.8556]	73.0+0.0s
[6400/16000]	[L1: 5.8270]	73.2+0.0s
[8000/16000]	[L1: 5.8381]	73.8+0.0s
[9600/16000]	[L1: 5.8691]	74.3+0.0s
[11200/16000]	[L1: 5.8531]	74.8+0.0s
[12800/16000]	[L1: 5.8707]	74.8+0.0s
[14400/16000]	[L1: 5.8482]	74.6+0.0s
[16000/16000]	[L1: 5.8372]	75.1+0.0s
[Epoch 495]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7165]	75.3+0.5s
[3200/16000]	[L1: 5.7898]	75.7+0.0s
[4800/16000]	[L1: 5.8138]	75.4+0.0s
[6400/16000]	[L1: 5.7981]	74.8+0.0s
[8000/16000]	[L1: 5.7884]	73.6+0.0s
[9600/16000]	[L1: 5.7540]	74.6+0.1s
[11200/16000]	[L1: 5.7761]	74.8+0.0s
[12800/16000]	[L1: 5.7766]	74.7+0.0s
[14400/16000]	[L1: 5.7639]	75.1+0.0s
[16000/16000]	[L1: 5.7757]	74.1+0.0s
[Epoch 496]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8329]	74.7+0.5s
[3200/16000]	[L1: 5.6804]	74.2+0.0s
[4800/16000]	[L1: 5.6991]	73.9+0.0s
[6400/16000]	[L1: 5.7281]	74.8+0.0s
[8000/16000]	[L1: 5.7431]	75.0+0.0s
[9600/16000]	[L1: 5.7772]	74.4+0.0s
[11200/16000]	[L1: 5.7900]	74.8+0.0s
[12800/16000]	[L1: 5.7991]	76.4+0.0s
[14400/16000]	[L1: 5.8156]	75.5+0.0s
[16000/16000]	[L1: 5.8178]	74.7+0.0s
[Epoch 497]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5949]	74.7+0.5s
[3200/16000]	[L1: 5.7955]	74.8+0.0s
[4800/16000]	[L1: 5.8358]	75.3+0.0s
[6400/16000]	[L1: 5.8604]	74.5+0.0s
[8000/16000]	[L1: 5.8600]	77.0+0.0s
[9600/16000]	[L1: 5.8637]	77.9+0.0s
[11200/16000]	[L1: 5.8574]	75.0+0.0s
[12800/16000]	[L1: 5.8525]	74.9+0.0s
[14400/16000]	[L1: 5.8407]	76.9+0.0s
[16000/16000]	[L1: 5.8485]	73.9+0.0s
[Epoch 498]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8326]	74.7+0.5s
[3200/16000]	[L1: 5.6748]	74.4+0.0s
[4800/16000]	[L1: 5.7521]	73.9+0.0s
[6400/16000]	[L1: 5.7950]	75.3+0.0s
[8000/16000]	[L1: 5.8084]	75.7+0.0s
[9600/16000]	[L1: 5.8198]	75.0+0.0s
[11200/16000]	[L1: 5.8246]	74.7+0.0s
[12800/16000]	[L1: 5.8039]	75.3+0.0s
[14400/16000]	[L1: 5.8065]	74.7+0.0s
[16000/16000]	[L1: 5.8055]	74.5+0.1s
[Epoch 499]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8551]	74.1+0.5s
[3200/16000]	[L1: 5.8942]	73.7+0.0s
[4800/16000]	[L1: 5.8761]	75.8+0.0s
[6400/16000]	[L1: 5.8369]	74.6+0.0s
[8000/16000]	[L1: 5.8508]	74.2+0.0s
[9600/16000]	[L1: 5.8380]	75.3+0.0s
[11200/16000]	[L1: 5.8365]	75.2+0.0s
[12800/16000]	[L1: 5.8076]	76.6+0.0s
[14400/16000]	[L1: 5.8201]	75.8+0.0s
[16000/16000]	[L1: 5.8165]	75.6+0.0s
[Epoch 500]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7628]	76.2+0.6s
[3200/16000]	[L1: 5.7481]	75.2+0.0s
[4800/16000]	[L1: 5.7534]	74.5+0.0s
[6400/16000]	[L1: 5.7473]	77.6+0.0s
[8000/16000]	[L1: 5.7648]	76.4+0.0s
[9600/16000]	[L1: 5.7524]	74.1+0.0s
[11200/16000]	[L1: 5.7753]	73.9+0.0s
[12800/16000]	[L1: 5.7913]	74.6+0.0s
[14400/16000]	[L1: 5.7928]	75.8+0.0s
[16000/16000]	[L1: 5.8043]	73.0+0.0s
[Epoch 501]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9990]	73.1+0.5s
[3200/16000]	[L1: 5.8476]	73.1+0.0s
[4800/16000]	[L1: 5.8768]	73.0+0.0s
[6400/16000]	[L1: 5.8526]	73.3+0.0s
[8000/16000]	[L1: 5.8669]	74.0+0.0s
[9600/16000]	[L1: 5.8449]	73.9+0.0s
[11200/16000]	[L1: 5.8451]	74.4+0.0s
[12800/16000]	[L1: 5.8501]	74.8+0.0s
[14400/16000]	[L1: 5.8619]	76.0+0.0s
[16000/16000]	[L1: 5.8600]	75.7+0.0s
[Epoch 502]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7920]	74.3+0.5s
[3200/16000]	[L1: 5.9028]	73.7+0.0s
[4800/16000]	[L1: 5.9196]	73.7+0.0s
[6400/16000]	[L1: 5.9295]	73.6+0.0s
[8000/16000]	[L1: 5.9025]	75.0+0.0s
[9600/16000]	[L1: 5.8977]	74.5+0.0s
[11200/16000]	[L1: 5.8579]	76.2+0.0s
[12800/16000]	[L1: 5.8343]	75.1+0.0s
[14400/16000]	[L1: 5.8512]	74.4+0.0s
[16000/16000]	[L1: 5.8352]	74.9+0.0s
[Epoch 503]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7943]	76.5+0.5s
[3200/16000]	[L1: 5.7444]	73.9+0.0s
[4800/16000]	[L1: 5.8042]	74.3+0.0s
[6400/16000]	[L1: 5.8158]	74.0+0.0s
[8000/16000]	[L1: 5.8356]	74.1+0.0s
[9600/16000]	[L1: 5.8150]	74.1+0.0s
[11200/16000]	[L1: 5.8040]	73.6+0.0s
[12800/16000]	[L1: 5.8115]	74.2+0.0s
[14400/16000]	[L1: 5.7989]	75.2+0.0s
[16000/16000]	[L1: 5.8044]	74.2+0.0s
[Epoch 504]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.4862]	75.0+0.4s
[3200/16000]	[L1: 5.6617]	75.1+0.0s
[4800/16000]	[L1: 5.7097]	76.7+0.0s
[6400/16000]	[L1: 5.6931]	75.4+0.0s
[8000/16000]	[L1: 5.7254]	77.1+0.0s
[9600/16000]	[L1: 5.7313]	75.0+0.0s
[11200/16000]	[L1: 5.7323]	75.1+0.0s
[12800/16000]	[L1: 5.7305]	74.9+0.0s
[14400/16000]	[L1: 5.7589]	77.2+0.0s
[16000/16000]	[L1: 5.7859]	74.8+0.0s
[Epoch 505]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7775]	74.9+0.5s
[3200/16000]	[L1: 5.8067]	75.5+0.0s
[4800/16000]	[L1: 5.8382]	75.0+0.0s
[6400/16000]	[L1: 5.8061]	75.1+0.0s
[8000/16000]	[L1: 5.8211]	75.3+0.0s
[9600/16000]	[L1: 5.8090]	74.8+0.0s
[11200/16000]	[L1: 5.7677]	75.6+0.0s
[12800/16000]	[L1: 5.7731]	74.9+0.0s
[14400/16000]	[L1: 5.7708]	74.7+0.0s
[16000/16000]	[L1: 5.7979]	76.7+0.0s
[Epoch 506]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.1213]	74.3+0.5s
[3200/16000]	[L1: 6.0642]	74.7+0.0s
[4800/16000]	[L1: 6.0140]	73.8+0.0s
[6400/16000]	[L1: 5.9680]	73.7+0.0s
[8000/16000]	[L1: 5.9066]	76.7+0.0s
[9600/16000]	[L1: 5.9085]	76.6+0.0s
[11200/16000]	[L1: 5.8895]	75.3+0.0s
[12800/16000]	[L1: 5.8801]	73.4+0.0s
[14400/16000]	[L1: 5.8729]	74.1+0.0s
[16000/16000]	[L1: 5.8739]	73.8+0.1s
[Epoch 507]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6437]	73.9+0.5s
[3200/16000]	[L1: 5.6687]	73.7+0.0s
[4800/16000]	[L1: 5.6833]	74.0+0.0s
[6400/16000]	[L1: 5.6771]	73.8+0.0s
[8000/16000]	[L1: 5.7236]	73.7+0.0s
[9600/16000]	[L1: 5.7537]	73.6+0.0s
[11200/16000]	[L1: 5.7765]	74.2+0.0s
[12800/16000]	[L1: 5.8046]	73.8+0.0s
[14400/16000]	[L1: 5.8118]	73.8+0.0s
[16000/16000]	[L1: 5.7986]	73.7+0.0s
[Epoch 508]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0084]	74.0+0.5s
[3200/16000]	[L1: 5.9761]	73.9+0.1s
[4800/16000]	[L1: 5.9561]	73.7+0.0s
[6400/16000]	[L1: 5.8892]	73.3+0.0s
[8000/16000]	[L1: 5.8683]	73.5+0.0s
[9600/16000]	[L1: 5.8508]	73.2+0.0s
[11200/16000]	[L1: 5.8453]	74.2+0.0s
[12800/16000]	[L1: 5.8118]	74.3+0.0s
[14400/16000]	[L1: 5.8176]	74.6+0.0s
[16000/16000]	[L1: 5.8298]	74.1+0.0s
[Epoch 509]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5449]	74.8+0.5s
[3200/16000]	[L1: 5.6547]	74.5+0.0s
[4800/16000]	[L1: 5.6836]	75.2+0.0s
[6400/16000]	[L1: 5.7187]	74.4+0.0s
[8000/16000]	[L1: 5.7736]	73.9+0.0s
[9600/16000]	[L1: 5.7788]	74.5+0.0s
[11200/16000]	[L1: 5.7376]	74.8+0.0s
[12800/16000]	[L1: 5.7430]	73.6+0.0s
[14400/16000]	[L1: 5.7190]	74.0+0.0s
[16000/16000]	[L1: 5.7361]	74.2+0.0s
[Epoch 510]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9233]	74.5+0.5s
[3200/16000]	[L1: 5.8999]	75.4+0.0s
[4800/16000]	[L1: 5.8705]	74.9+0.0s
[6400/16000]	[L1: 5.8568]	75.2+0.0s
[8000/16000]	[L1: 5.8189]	74.2+0.0s
[9600/16000]	[L1: 5.8046]	73.8+0.0s
[11200/16000]	[L1: 5.8116]	73.7+0.0s
[12800/16000]	[L1: 5.8306]	74.0+0.0s
[14400/16000]	[L1: 5.8141]	73.8+0.0s
[16000/16000]	[L1: 5.7992]	75.7+0.0s
[Epoch 511]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9522]	75.8+0.5s
[3200/16000]	[L1: 5.8211]	75.5+0.0s
[4800/16000]	[L1: 5.8234]	75.8+0.0s
[6400/16000]	[L1: 5.8281]	74.6+0.0s
[8000/16000]	[L1: 5.8199]	74.9+0.1s
[9600/16000]	[L1: 5.8445]	74.7+0.0s
[11200/16000]	[L1: 5.8560]	76.1+0.0s
[12800/16000]	[L1: 5.8320]	74.8+0.0s
[14400/16000]	[L1: 5.7958]	74.2+0.1s
[16000/16000]	[L1: 5.7924]	73.9+0.0s
[Epoch 512]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5482]	76.4+0.5s
[3200/16000]	[L1: 5.7553]	74.0+0.0s
[4800/16000]	[L1: 5.7573]	74.3+0.0s
[6400/16000]	[L1: 5.8100]	73.6+0.0s
[8000/16000]	[L1: 5.7612]	73.4+0.0s
[9600/16000]	[L1: 5.7661]	74.2+0.0s
[11200/16000]	[L1: 5.7750]	75.6+0.0s
[12800/16000]	[L1: 5.7909]	75.7+0.0s
[14400/16000]	[L1: 5.7802]	76.2+0.0s
[16000/16000]	[L1: 5.7880]	75.5+0.0s
[Epoch 513]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6588]	76.1+0.5s
[3200/16000]	[L1: 5.8126]	73.4+0.0s
[4800/16000]	[L1: 5.8359]	75.1+0.1s
[6400/16000]	[L1: 5.8628]	75.7+0.0s
[8000/16000]	[L1: 5.8783]	74.6+0.0s
[9600/16000]	[L1: 5.8398]	74.0+0.0s
[11200/16000]	[L1: 5.8720]	74.3+0.0s
[12800/16000]	[L1: 5.8612]	74.0+0.0s
[14400/16000]	[L1: 5.8478]	75.1+0.0s
[16000/16000]	[L1: 5.8274]	75.2+0.0s
[Epoch 514]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7947]	74.1+0.5s
[3200/16000]	[L1: 5.7269]	74.7+0.0s
[4800/16000]	[L1: 5.7783]	75.1+0.0s
[6400/16000]	[L1: 5.8323]	74.7+0.0s
[8000/16000]	[L1: 5.8544]	76.5+0.0s
[9600/16000]	[L1: 5.8131]	75.8+0.0s
[11200/16000]	[L1: 5.8175]	74.2+0.0s
[12800/16000]	[L1: 5.8298]	74.5+0.0s
[14400/16000]	[L1: 5.8509]	74.6+0.0s
[16000/16000]	[L1: 5.8448]	74.5+0.0s
[Epoch 515]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5481]	74.4+0.5s
[3200/16000]	[L1: 5.5760]	74.6+0.0s
[4800/16000]	[L1: 5.5800]	74.4+0.0s
[6400/16000]	[L1: 5.6328]	76.1+0.0s
[8000/16000]	[L1: 5.6468]	74.8+0.0s
[9600/16000]	[L1: 5.7040]	74.4+0.0s
[11200/16000]	[L1: 5.7151]	73.8+0.0s
[12800/16000]	[L1: 5.7264]	73.7+0.0s
[14400/16000]	[L1: 5.7262]	74.2+0.0s
[16000/16000]	[L1: 5.7311]	73.7+0.0s
[Epoch 516]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8232]	75.5+0.5s
[3200/16000]	[L1: 5.7549]	74.0+0.0s
[4800/16000]	[L1: 5.6789]	74.5+0.0s
[6400/16000]	[L1: 5.7719]	75.5+0.0s
[8000/16000]	[L1: 5.7941]	75.2+0.0s
[9600/16000]	[L1: 5.7915]	76.1+0.0s
[11200/16000]	[L1: 5.7510]	74.9+0.1s
[12800/16000]	[L1: 5.7623]	74.4+0.0s
[14400/16000]	[L1: 5.7615]	76.1+0.0s
[16000/16000]	[L1: 5.7668]	76.6+0.0s
[Epoch 517]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7923]	74.5+0.5s
[3200/16000]	[L1: 5.8320]	74.4+0.0s
[4800/16000]	[L1: 5.8404]	73.9+0.0s
[6400/16000]	[L1: 5.8620]	74.2+0.0s
[8000/16000]	[L1: 5.8456]	74.3+0.0s
[9600/16000]	[L1: 5.8473]	74.1+0.0s
[11200/16000]	[L1: 5.8417]	74.4+0.0s
[12800/16000]	[L1: 5.8399]	73.9+0.0s
[14400/16000]	[L1: 5.8279]	73.5+0.0s
[16000/16000]	[L1: 5.8291]	74.0+0.0s
[Epoch 518]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7204]	74.9+0.5s
[3200/16000]	[L1: 5.7032]	74.1+0.0s
[4800/16000]	[L1: 5.7843]	77.0+0.0s
[6400/16000]	[L1: 5.8166]	76.6+0.0s
[8000/16000]	[L1: 5.7942]	74.8+0.0s
[9600/16000]	[L1: 5.7974]	74.5+0.0s
[11200/16000]	[L1: 5.8194]	74.6+0.0s
[12800/16000]	[L1: 5.8110]	74.4+0.0s
[14400/16000]	[L1: 5.8110]	74.6+0.0s
[16000/16000]	[L1: 5.8037]	74.8+0.0s
[Epoch 519]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9363]	74.3+0.5s
[3200/16000]	[L1: 5.7267]	74.2+0.0s
[4800/16000]	[L1: 5.7247]	74.1+0.0s
[6400/16000]	[L1: 5.7444]	74.6+0.0s
[8000/16000]	[L1: 5.7674]	75.5+0.0s
[9600/16000]	[L1: 5.8017]	74.4+0.0s
[11200/16000]	[L1: 5.8485]	75.3+0.0s
[12800/16000]	[L1: 5.8576]	75.2+0.0s
[14400/16000]	[L1: 5.8474]	75.3+0.0s
[16000/16000]	[L1: 5.8192]	75.2+0.0s
[Epoch 520]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9181]	76.1+0.5s
[3200/16000]	[L1: 6.0021]	76.5+0.0s
[4800/16000]	[L1: 5.9188]	75.6+0.0s
[6400/16000]	[L1: 5.9038]	76.0+0.0s
[8000/16000]	[L1: 5.8577]	75.8+0.0s
[9600/16000]	[L1: 5.8220]	74.4+0.0s
[11200/16000]	[L1: 5.8121]	74.8+0.0s
[12800/16000]	[L1: 5.8084]	75.1+0.0s
[14400/16000]	[L1: 5.7897]	77.2+0.0s
[16000/16000]	[L1: 5.7783]	74.4+0.0s
[Epoch 521]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0663]	74.0+0.5s
[3200/16000]	[L1: 6.0434]	74.0+0.0s
[4800/16000]	[L1: 5.9942]	74.2+0.0s
[6400/16000]	[L1: 5.9001]	73.0+0.0s
[8000/16000]	[L1: 5.8904]	73.6+0.0s
[9600/16000]	[L1: 5.8598]	73.8+0.0s
[11200/16000]	[L1: 5.8244]	74.2+0.0s
[12800/16000]	[L1: 5.8169]	74.5+0.0s
[14400/16000]	[L1: 5.7886]	74.3+0.0s
[16000/16000]	[L1: 5.7863]	75.0+0.0s
[Epoch 522]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0997]	74.5+0.5s
[3200/16000]	[L1: 5.9091]	73.6+0.0s
[4800/16000]	[L1: 5.8952]	73.6+0.0s
[6400/16000]	[L1: 5.8502]	74.2+0.0s
[8000/16000]	[L1: 5.8232]	74.0+0.0s
[9600/16000]	[L1: 5.8299]	73.9+0.0s
[11200/16000]	[L1: 5.8061]	74.0+0.0s
[12800/16000]	[L1: 5.7779]	75.0+0.0s
[14400/16000]	[L1: 5.8091]	74.7+0.0s
[16000/16000]	[L1: 5.7935]	74.4+0.0s
[Epoch 523]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9031]	75.4+0.5s
[3200/16000]	[L1: 5.8314]	74.1+0.0s
[4800/16000]	[L1: 5.8891]	74.7+0.0s
[6400/16000]	[L1: 5.8700]	74.5+0.0s
[8000/16000]	[L1: 5.8438]	75.0+0.0s
[9600/16000]	[L1: 5.8138]	75.8+0.0s
[11200/16000]	[L1: 5.8131]	75.3+0.0s
[12800/16000]	[L1: 5.7914]	75.9+0.0s
[14400/16000]	[L1: 5.8005]	75.5+0.0s
[16000/16000]	[L1: 5.8070]	74.9+0.0s
[Epoch 524]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7204]	74.9+0.5s
[3200/16000]	[L1: 5.7277]	74.2+0.0s
[4800/16000]	[L1: 5.7738]	75.0+0.0s
[6400/16000]	[L1: 5.8171]	73.7+0.0s
[8000/16000]	[L1: 5.7772]	75.4+0.0s
[9600/16000]	[L1: 5.8038]	73.8+0.0s
[11200/16000]	[L1: 5.8288]	74.9+0.0s
[12800/16000]	[L1: 5.7987]	75.6+0.0s
[14400/16000]	[L1: 5.8070]	75.8+0.0s
[16000/16000]	[L1: 5.8171]	75.2+0.0s
[Epoch 525]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5926]	75.8+0.5s
[3200/16000]	[L1: 5.6307]	75.5+0.0s
[4800/16000]	[L1: 5.6987]	75.2+0.0s
[6400/16000]	[L1: 5.7984]	74.9+0.0s
[8000/16000]	[L1: 5.8180]	74.8+0.0s
[9600/16000]	[L1: 5.8056]	74.7+0.0s
[11200/16000]	[L1: 5.8094]	75.2+0.0s
[12800/16000]	[L1: 5.8131]	74.9+0.0s
[14400/16000]	[L1: 5.8164]	73.9+0.0s
[16000/16000]	[L1: 5.8203]	73.8+0.0s
[Epoch 526]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6548]	74.9+0.5s
[3200/16000]	[L1: 5.8183]	74.4+0.0s
[4800/16000]	[L1: 5.7645]	75.1+0.0s
[6400/16000]	[L1: 5.7367]	74.7+0.0s
[8000/16000]	[L1: 5.7095]	74.8+0.0s
[9600/16000]	[L1: 5.7769]	74.2+0.0s
[11200/16000]	[L1: 5.7696]	74.9+0.0s
[12800/16000]	[L1: 5.7763]	74.4+0.0s
[14400/16000]	[L1: 5.7808]	74.2+0.0s
[16000/16000]	[L1: 5.7764]	74.6+0.0s
[Epoch 527]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8517]	74.4+0.5s
[3200/16000]	[L1: 5.7879]	74.0+0.0s
[4800/16000]	[L1: 5.7657]	75.0+0.0s
[6400/16000]	[L1: 5.7319]	75.1+0.0s
[8000/16000]	[L1: 5.7407]	74.8+0.0s
[9600/16000]	[L1: 5.7478]	74.7+0.0s
[11200/16000]	[L1: 5.7140]	76.4+0.0s
[12800/16000]	[L1: 5.7163]	73.5+0.0s
[14400/16000]	[L1: 5.7338]	74.8+0.0s
[16000/16000]	[L1: 5.7403]	73.5+0.0s
[Epoch 528]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7605]	73.9+0.5s
[3200/16000]	[L1: 5.8464]	73.3+0.0s
[4800/16000]	[L1: 5.8058]	74.1+0.0s
[6400/16000]	[L1: 5.8142]	73.2+0.0s
[8000/16000]	[L1: 5.8120]	73.6+0.0s
[9600/16000]	[L1: 5.8275]	73.8+0.0s
[11200/16000]	[L1: 5.8257]	73.5+0.0s
[12800/16000]	[L1: 5.8008]	73.2+0.0s
[14400/16000]	[L1: 5.8232]	73.5+0.0s
[16000/16000]	[L1: 5.8268]	73.5+0.0s
[Epoch 529]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8464]	74.1+0.5s
[3200/16000]	[L1: 5.9717]	73.8+0.0s
[4800/16000]	[L1: 5.9460]	76.9+0.0s
[6400/16000]	[L1: 5.8851]	74.5+0.0s
[8000/16000]	[L1: 5.8964]	74.2+0.0s
[9600/16000]	[L1: 5.8405]	74.2+0.0s
[11200/16000]	[L1: 5.8214]	74.2+0.0s
[12800/16000]	[L1: 5.8260]	74.2+0.0s
[14400/16000]	[L1: 5.8126]	74.6+0.0s
[16000/16000]	[L1: 5.7933]	75.7+0.0s
[Epoch 530]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9531]	75.8+0.5s
[3200/16000]	[L1: 5.9393]	74.1+0.0s
[4800/16000]	[L1: 5.9278]	74.6+0.0s
[6400/16000]	[L1: 5.9057]	73.4+0.0s
[8000/16000]	[L1: 5.8662]	75.6+0.0s
[9600/16000]	[L1: 5.8498]	75.8+0.0s
[11200/16000]	[L1: 5.8390]	75.0+0.0s
[12800/16000]	[L1: 5.8342]	73.6+0.0s
[14400/16000]	[L1: 5.8362]	73.4+0.0s
[16000/16000]	[L1: 5.8286]	74.3+0.0s
[Epoch 531]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7243]	75.5+0.5s
[3200/16000]	[L1: 5.6673]	75.6+0.0s
[4800/16000]	[L1: 5.7505]	75.4+0.0s
[6400/16000]	[L1: 5.7823]	73.9+0.0s
[8000/16000]	[L1: 5.7905]	74.0+0.0s
[9600/16000]	[L1: 5.8152]	73.7+0.0s
[11200/16000]	[L1: 5.8186]	75.8+0.0s
[12800/16000]	[L1: 5.8275]	75.7+0.0s
[14400/16000]	[L1: 5.8161]	75.0+0.0s
[16000/16000]	[L1: 5.8056]	74.3+0.0s
[Epoch 532]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7471]	75.0+0.5s
[3200/16000]	[L1: 5.7831]	75.8+0.0s
[4800/16000]	[L1: 5.7828]	74.2+0.0s
[6400/16000]	[L1: 5.8141]	73.6+0.0s
[8000/16000]	[L1: 5.7899]	74.2+0.0s
[9600/16000]	[L1: 5.7792]	73.5+0.0s
[11200/16000]	[L1: 5.7762]	73.5+0.0s
[12800/16000]	[L1: 5.7591]	74.1+0.0s
[14400/16000]	[L1: 5.7643]	73.8+0.0s
[16000/16000]	[L1: 5.7680]	74.2+0.0s
[Epoch 533]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7828]	74.0+0.5s
[3200/16000]	[L1: 5.7335]	73.7+0.0s
[4800/16000]	[L1: 5.7330]	73.6+0.0s
[6400/16000]	[L1: 5.7148]	73.6+0.0s
[8000/16000]	[L1: 5.7292]	72.9+0.1s
[9600/16000]	[L1: 5.7387]	72.8+0.0s
[11200/16000]	[L1: 5.7410]	74.0+0.0s
[12800/16000]	[L1: 5.7233]	74.7+0.0s
[14400/16000]	[L1: 5.7334]	74.2+0.0s
[16000/16000]	[L1: 5.7395]	74.2+0.0s
[Epoch 534]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9975]	74.0+0.5s
[3200/16000]	[L1: 5.9980]	74.1+0.0s
[4800/16000]	[L1: 5.9048]	74.0+0.0s
[6400/16000]	[L1: 5.8905]	74.3+0.0s
[8000/16000]	[L1: 5.8908]	76.9+0.0s
[9600/16000]	[L1: 5.8557]	75.3+0.0s
[11200/16000]	[L1: 5.8275]	74.5+0.0s
[12800/16000]	[L1: 5.8262]	75.3+0.0s
[14400/16000]	[L1: 5.8293]	74.1+0.0s
[16000/16000]	[L1: 5.8244]	75.0+0.0s
[Epoch 535]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7672]	76.0+0.5s
[3200/16000]	[L1: 5.8106]	74.8+0.0s
[4800/16000]	[L1: 5.8508]	74.9+0.0s
[6400/16000]	[L1: 5.8378]	75.4+0.0s
[8000/16000]	[L1: 5.8324]	75.2+0.0s
[9600/16000]	[L1: 5.8511]	74.9+0.0s
[11200/16000]	[L1: 5.8223]	73.7+0.0s
[12800/16000]	[L1: 5.8076]	74.1+0.0s
[14400/16000]	[L1: 5.8206]	74.5+0.0s
[16000/16000]	[L1: 5.8174]	76.7+0.0s
[Epoch 536]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8375]	75.6+0.5s
[3200/16000]	[L1: 5.8497]	75.4+0.0s
[4800/16000]	[L1: 5.7933]	76.8+0.0s
[6400/16000]	[L1: 5.7874]	75.7+0.0s
[8000/16000]	[L1: 5.7625]	74.8+0.0s
[9600/16000]	[L1: 5.7547]	75.6+0.0s
[11200/16000]	[L1: 5.7923]	75.0+0.0s
[12800/16000]	[L1: 5.7759]	74.1+0.0s
[14400/16000]	[L1: 5.7843]	75.6+0.0s
[16000/16000]	[L1: 5.7914]	74.3+0.0s
[Epoch 537]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7935]	74.2+0.5s
[3200/16000]	[L1: 5.8493]	74.0+0.0s
[4800/16000]	[L1: 5.7724]	74.2+0.0s
[6400/16000]	[L1: 5.8215]	73.8+0.0s
[8000/16000]	[L1: 5.8121]	73.5+0.0s
[9600/16000]	[L1: 5.7982]	75.6+0.0s
[11200/16000]	[L1: 5.8148]	75.8+0.0s
[12800/16000]	[L1: 5.8096]	77.0+0.0s
[14400/16000]	[L1: 5.8020]	77.3+0.0s
[16000/16000]	[L1: 5.8037]	73.7+0.0s
[Epoch 538]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7358]	74.3+0.5s
[3200/16000]	[L1: 5.9018]	74.2+0.0s
[4800/16000]	[L1: 5.8644]	73.9+0.0s
[6400/16000]	[L1: 5.8204]	74.0+0.0s
[8000/16000]	[L1: 5.7890]	73.8+0.0s
[9600/16000]	[L1: 5.7246]	74.2+0.0s
[11200/16000]	[L1: 5.7526]	73.4+0.0s
[12800/16000]	[L1: 5.7557]	73.8+0.0s
[14400/16000]	[L1: 5.7465]	73.5+0.0s
[16000/16000]	[L1: 5.7640]	73.7+0.0s
[Epoch 539]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0102]	74.3+0.5s
[3200/16000]	[L1: 5.9198]	73.9+0.0s
[4800/16000]	[L1: 5.8873]	74.2+0.0s
[6400/16000]	[L1: 5.8383]	76.1+0.0s
[8000/16000]	[L1: 5.8093]	75.8+0.0s
[9600/16000]	[L1: 5.8160]	75.7+0.0s
[11200/16000]	[L1: 5.8077]	73.5+0.0s
[12800/16000]	[L1: 5.7834]	73.8+0.0s
[14400/16000]	[L1: 5.8027]	74.6+0.0s
[16000/16000]	[L1: 5.8049]	73.9+0.0s
[Epoch 540]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8357]	74.2+0.5s
[3200/16000]	[L1: 5.8412]	74.3+0.0s
[4800/16000]	[L1: 5.8546]	73.9+0.0s
[6400/16000]	[L1: 5.7900]	73.5+0.0s
[8000/16000]	[L1: 5.7659]	73.4+0.0s
[9600/16000]	[L1: 5.7781]	73.6+0.0s
[11200/16000]	[L1: 5.7968]	73.5+0.0s
[12800/16000]	[L1: 5.7901]	74.0+0.0s
[14400/16000]	[L1: 5.8039]	72.6+0.0s
[16000/16000]	[L1: 5.7972]	72.6+0.0s
[Epoch 541]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9304]	74.5+0.5s
[3200/16000]	[L1: 5.8580]	74.6+0.0s
[4800/16000]	[L1: 5.8718]	74.5+0.0s
[6400/16000]	[L1: 5.8381]	78.1+0.0s
[8000/16000]	[L1: 5.8169]	74.7+0.0s
[9600/16000]	[L1: 5.8240]	75.3+0.0s
[11200/16000]	[L1: 5.8243]	74.6+0.0s
[12800/16000]	[L1: 5.8272]	75.1+0.0s
[14400/16000]	[L1: 5.8220]	76.7+0.0s
[16000/16000]	[L1: 5.8163]	74.7+0.0s
[Epoch 542]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8309]	75.1+0.5s
[3200/16000]	[L1: 5.7960]	74.6+0.0s
[4800/16000]	[L1: 5.7678]	74.2+0.0s
[6400/16000]	[L1: 5.8163]	74.7+0.0s
[8000/16000]	[L1: 5.8547]	75.7+0.0s
[9600/16000]	[L1: 5.8519]	75.1+0.0s
[11200/16000]	[L1: 5.8387]	74.3+0.0s
[12800/16000]	[L1: 5.8542]	73.8+0.0s
[14400/16000]	[L1: 5.8350]	73.7+0.0s
[16000/16000]	[L1: 5.8293]	73.9+0.0s
[Epoch 543]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7123]	73.9+0.5s
[3200/16000]	[L1: 5.7041]	73.4+0.0s
[4800/16000]	[L1: 5.7349]	73.3+0.0s
[6400/16000]	[L1: 5.7692]	74.1+0.0s
[8000/16000]	[L1: 5.7947]	73.6+0.0s
[9600/16000]	[L1: 5.8174]	74.5+0.0s
[11200/16000]	[L1: 5.8050]	74.2+0.0s
[12800/16000]	[L1: 5.7897]	75.1+0.0s
[14400/16000]	[L1: 5.7910]	75.2+0.0s
[16000/16000]	[L1: 5.7984]	75.4+0.0s
[Epoch 544]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8126]	75.6+0.5s
[3200/16000]	[L1: 5.8951]	75.9+0.0s
[4800/16000]	[L1: 5.8555]	78.4+0.0s
[6400/16000]	[L1: 5.8247]	76.4+0.0s
[8000/16000]	[L1: 5.8511]	76.3+0.0s
[9600/16000]	[L1: 5.8223]	77.4+0.0s
[11200/16000]	[L1: 5.8088]	76.6+0.0s
[12800/16000]	[L1: 5.8035]	77.2+0.0s
[14400/16000]	[L1: 5.7832]	77.0+0.0s
[16000/16000]	[L1: 5.7805]	82.0+0.0s
[Epoch 545]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6270]	77.8+0.5s
[3200/16000]	[L1: 5.7938]	76.9+0.0s
[4800/16000]	[L1: 5.8433]	76.3+0.0s
[6400/16000]	[L1: 5.8267]	76.5+0.0s
[8000/16000]	[L1: 5.7987]	76.3+0.0s
[9600/16000]	[L1: 5.8161]	75.8+0.0s
[11200/16000]	[L1: 5.7922]	78.7+0.0s
[12800/16000]	[L1: 5.7890]	77.5+0.0s
[14400/16000]	[L1: 5.7825]	75.8+0.0s
[16000/16000]	[L1: 5.7808]	76.7+0.0s
[Epoch 546]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8453]	73.2+0.5s
[3200/16000]	[L1: 5.8438]	72.3+0.0s
[4800/16000]	[L1: 5.7965]	72.7+0.0s
[6400/16000]	[L1: 5.7696]	72.8+0.0s
[8000/16000]	[L1: 5.7631]	72.8+0.0s
[9600/16000]	[L1: 5.7683]	72.9+0.0s
[11200/16000]	[L1: 5.8006]	72.6+0.0s
[12800/16000]	[L1: 5.7942]	72.7+0.0s
[14400/16000]	[L1: 5.7950]	72.4+0.0s
[16000/16000]	[L1: 5.8016]	72.8+0.0s
[Epoch 547]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6605]	73.2+0.4s
[3200/16000]	[L1: 5.7101]	73.3+0.0s
[4800/16000]	[L1: 5.7101]	73.0+0.0s
[6400/16000]	[L1: 5.7288]	73.0+0.0s
[8000/16000]	[L1: 5.7220]	73.3+0.0s
[9600/16000]	[L1: 5.7490]	73.3+0.0s
[11200/16000]	[L1: 5.7471]	72.4+0.0s
[12800/16000]	[L1: 5.7431]	72.2+0.0s
[14400/16000]	[L1: 5.7329]	72.1+0.0s
[16000/16000]	[L1: 5.7506]	72.3+0.0s
[Epoch 548]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8539]	73.5+0.4s
[3200/16000]	[L1: 5.9296]	72.8+0.0s
[4800/16000]	[L1: 5.8868]	73.0+0.0s
[6400/16000]	[L1: 5.8516]	73.1+0.0s
[8000/16000]	[L1: 5.7975]	72.9+0.0s
[9600/16000]	[L1: 5.8692]	72.8+0.0s
[11200/16000]	[L1: 5.8544]	72.5+0.0s
[12800/16000]	[L1: 5.8418]	72.6+0.0s
[14400/16000]	[L1: 5.8420]	72.5+0.0s
[16000/16000]	[L1: 5.8297]	72.8+0.0s
[Epoch 549]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0262]	73.3+0.4s
[3200/16000]	[L1: 5.9389]	73.3+0.0s
[4800/16000]	[L1: 5.8616]	73.3+0.0s
[6400/16000]	[L1: 5.8746]	73.2+0.0s
[8000/16000]	[L1: 5.8914]	73.2+0.0s
[9600/16000]	[L1: 5.8907]	73.1+0.0s
[11200/16000]	[L1: 5.8568]	73.4+0.0s
[12800/16000]	[L1: 5.8227]	73.3+0.0s
[14400/16000]	[L1: 5.8132]	73.3+0.1s
[16000/16000]	[L1: 5.8179]	73.4+0.0s
[Epoch 550]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8822]	73.2+0.4s
[3200/16000]	[L1: 5.8144]	72.9+0.0s
[4800/16000]	[L1: 5.7959]	72.6+0.0s
[6400/16000]	[L1: 5.7214]	72.3+0.0s
[8000/16000]	[L1: 5.7436]	72.2+0.0s
[9600/16000]	[L1: 5.7369]	72.3+0.0s
[11200/16000]	[L1: 5.7448]	72.3+0.0s
[12800/16000]	[L1: 5.7260]	72.3+0.0s
[14400/16000]	[L1: 5.7202]	72.4+0.0s
[16000/16000]	[L1: 5.7190]	72.1+0.0s
[Epoch 551]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7576]	72.6+0.4s
[3200/16000]	[L1: 5.7923]	72.6+0.0s
[4800/16000]	[L1: 5.8373]	72.2+0.0s
[6400/16000]	[L1: 5.8591]	72.3+0.0s
[8000/16000]	[L1: 5.8281]	72.7+0.0s
[9600/16000]	[L1: 5.8076]	72.6+0.0s
[11200/16000]	[L1: 5.8062]	72.9+0.0s
[12800/16000]	[L1: 5.8262]	72.9+0.0s
[14400/16000]	[L1: 5.8237]	73.0+0.0s
[16000/16000]	[L1: 5.8181]	72.9+0.0s
[Epoch 552]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.4623]	73.3+0.4s
[3200/16000]	[L1: 5.6845]	73.1+0.0s
[4800/16000]	[L1: 5.7231]	72.8+0.0s
[6400/16000]	[L1: 5.7650]	73.2+0.0s
[8000/16000]	[L1: 5.7746]	73.0+0.0s
[9600/16000]	[L1: 5.7793]	73.0+0.0s
[11200/16000]	[L1: 5.7694]	73.1+0.0s
[12800/16000]	[L1: 5.7535]	73.0+0.0s
[14400/16000]	[L1: 5.7612]	73.0+0.0s
[16000/16000]	[L1: 5.7784]	72.9+0.0s
[Epoch 553]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8067]	72.7+0.4s
[3200/16000]	[L1: 5.7543]	72.6+0.0s
[4800/16000]	[L1: 5.7783]	72.4+0.0s
[6400/16000]	[L1: 5.7531]	73.2+0.0s
[8000/16000]	[L1: 5.7530]	73.0+0.0s
[9600/16000]	[L1: 5.7862]	73.0+0.0s
[11200/16000]	[L1: 5.7828]	73.2+0.0s
[12800/16000]	[L1: 5.7943]	73.5+0.0s
[14400/16000]	[L1: 5.7862]	73.7+0.0s
[16000/16000]	[L1: 5.7895]	73.0+0.0s
[Epoch 554]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9518]	73.5+0.4s
[3200/16000]	[L1: 5.8373]	73.5+0.0s
[4800/16000]	[L1: 5.8531]	72.3+0.0s
[6400/16000]	[L1: 5.8469]	72.9+0.0s
[8000/16000]	[L1: 5.8332]	72.6+0.0s
[9600/16000]	[L1: 5.8650]	73.0+0.0s
[11200/16000]	[L1: 5.8569]	73.6+0.0s
[12800/16000]	[L1: 5.8351]	73.4+0.0s
[14400/16000]	[L1: 5.8363]	72.8+0.0s
[16000/16000]	[L1: 5.8317]	73.2+0.0s
[Epoch 555]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6035]	73.4+0.4s
[3200/16000]	[L1: 5.6600]	73.1+0.0s
[4800/16000]	[L1: 5.6586]	72.9+0.0s
[6400/16000]	[L1: 5.7101]	72.8+0.0s
[8000/16000]	[L1: 5.7468]	73.0+0.0s
[9600/16000]	[L1: 5.7399]	72.9+0.0s
[11200/16000]	[L1: 5.7416]	73.5+0.0s
[12800/16000]	[L1: 5.7315]	73.0+0.0s
[14400/16000]	[L1: 5.7518]	72.7+0.0s
[16000/16000]	[L1: 5.7446]	73.4+0.0s
[Epoch 556]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6405]	73.8+0.4s
[3200/16000]	[L1: 5.7141]	73.1+0.0s
[4800/16000]	[L1: 5.6784]	73.0+0.0s
[6400/16000]	[L1: 5.7372]	73.4+0.0s
[8000/16000]	[L1: 5.7446]	72.8+0.0s
[9600/16000]	[L1: 5.7439]	72.4+0.0s
[11200/16000]	[L1: 5.7378]	72.6+0.0s
[12800/16000]	[L1: 5.7173]	72.8+0.0s
[14400/16000]	[L1: 5.7185]	72.9+0.0s
[16000/16000]	[L1: 5.7250]	72.8+0.0s
[Epoch 557]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7663]	73.2+0.4s
[3200/16000]	[L1: 5.7213]	72.6+0.0s
[4800/16000]	[L1: 5.7950]	73.0+0.0s
[6400/16000]	[L1: 5.7947]	74.2+0.0s
[8000/16000]	[L1: 5.8363]	80.4+0.0s
[9600/16000]	[L1: 5.8280]	76.6+0.0s
[11200/16000]	[L1: 5.8309]	72.9+0.0s
[12800/16000]	[L1: 5.8276]	72.5+0.0s
[14400/16000]	[L1: 5.8317]	72.8+0.0s
[16000/16000]	[L1: 5.8327]	72.5+0.0s
[Epoch 558]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7347]	73.3+0.4s
[3200/16000]	[L1: 5.6727]	72.9+0.0s
[4800/16000]	[L1: 5.7242]	73.1+0.0s
[6400/16000]	[L1: 5.7638]	72.9+0.0s
[8000/16000]	[L1: 5.7657]	73.0+0.0s
[9600/16000]	[L1: 5.7614]	73.0+0.0s
[11200/16000]	[L1: 5.7667]	72.8+0.0s
[12800/16000]	[L1: 5.7950]	73.5+0.0s
[14400/16000]	[L1: 5.7845]	74.1+0.0s
[16000/16000]	[L1: 5.7888]	73.8+0.0s
[Epoch 559]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8594]	74.3+0.4s
[3200/16000]	[L1: 5.7706]	73.8+0.0s
[4800/16000]	[L1: 5.8131]	74.2+0.0s
[6400/16000]	[L1: 5.8061]	74.9+0.0s
[8000/16000]	[L1: 5.7925]	73.9+0.0s
[9600/16000]	[L1: 5.7473]	73.6+0.0s
[11200/16000]	[L1: 5.7640]	73.6+0.0s
[12800/16000]	[L1: 5.7408]	73.3+0.0s
[14400/16000]	[L1: 5.7439]	73.5+0.0s
[16000/16000]	[L1: 5.7559]	73.7+0.0s
[Epoch 560]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7341]	73.8+0.4s
[3200/16000]	[L1: 5.7981]	73.6+0.0s
[4800/16000]	[L1: 5.8182]	73.4+0.0s
[6400/16000]	[L1: 5.7957]	72.9+0.0s
[8000/16000]	[L1: 5.8092]	72.6+0.0s
[9600/16000]	[L1: 5.7858]	73.0+0.0s
[11200/16000]	[L1: 5.7871]	72.7+0.0s
[12800/16000]	[L1: 5.7970]	73.0+0.0s
[14400/16000]	[L1: 5.7713]	72.8+0.0s
[16000/16000]	[L1: 5.7864]	72.6+0.0s
[Epoch 561]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8134]	72.5+0.4s
[3200/16000]	[L1: 5.8424]	72.5+0.0s
[4800/16000]	[L1: 5.8320]	72.7+0.0s
[6400/16000]	[L1: 5.8078]	73.3+0.0s
[8000/16000]	[L1: 5.7996]	73.6+0.0s
[9600/16000]	[L1: 5.7841]	72.8+0.0s
[11200/16000]	[L1: 5.8030]	72.8+0.0s
[12800/16000]	[L1: 5.8008]	72.9+0.0s
[14400/16000]	[L1: 5.7861]	72.7+0.0s
[16000/16000]	[L1: 5.7909]	72.7+0.0s
[Epoch 562]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9021]	73.1+0.4s
[3200/16000]	[L1: 5.9510]	73.1+0.0s
[4800/16000]	[L1: 5.9236]	73.3+0.0s
[6400/16000]	[L1: 5.8816]	73.3+0.0s
[8000/16000]	[L1: 5.8779]	72.8+0.0s
[9600/16000]	[L1: 5.8786]	72.7+0.0s
[11200/16000]	[L1: 5.8573]	72.6+0.0s
[12800/16000]	[L1: 5.8351]	72.8+0.0s
[14400/16000]	[L1: 5.8207]	72.6+0.0s
[16000/16000]	[L1: 5.8262]	72.6+0.0s
[Epoch 563]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7992]	72.9+0.4s
[3200/16000]	[L1: 5.8669]	72.8+0.0s
[4800/16000]	[L1: 5.8781]	72.6+0.0s
[6400/16000]	[L1: 5.8885]	72.7+0.0s
[8000/16000]	[L1: 5.8573]	72.8+0.0s
[9600/16000]	[L1: 5.8560]	72.7+0.0s
[11200/16000]	[L1: 5.8257]	73.3+0.0s
[12800/16000]	[L1: 5.7986]	73.2+0.0s
[14400/16000]	[L1: 5.7915]	73.4+0.0s
[16000/16000]	[L1: 5.7851]	73.7+0.0s
[Epoch 564]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7992]	73.5+0.4s
[3200/16000]	[L1: 5.7261]	73.3+0.0s
[4800/16000]	[L1: 5.7872]	73.4+0.0s
[6400/16000]	[L1: 5.8184]	72.9+0.0s
[8000/16000]	[L1: 5.8138]	72.5+0.0s
[9600/16000]	[L1: 5.8238]	72.9+0.0s
[11200/16000]	[L1: 5.8262]	73.0+0.0s
[12800/16000]	[L1: 5.8210]	73.2+0.0s
[14400/16000]	[L1: 5.8081]	73.4+0.0s
[16000/16000]	[L1: 5.7927]	72.9+0.0s
[Epoch 565]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6850]	73.0+0.5s
[3200/16000]	[L1: 5.7509]	73.1+0.0s
[4800/16000]	[L1: 5.7552]	72.6+0.0s
[6400/16000]	[L1: 5.7353]	73.2+0.0s
[8000/16000]	[L1: 5.7407]	73.7+0.0s
[9600/16000]	[L1: 5.7518]	73.2+0.0s
[11200/16000]	[L1: 5.7371]	73.0+0.0s
[12800/16000]	[L1: 5.7553]	72.6+0.0s
[14400/16000]	[L1: 5.7508]	73.0+0.0s
[16000/16000]	[L1: 5.7578]	72.8+0.0s
[Epoch 566]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9339]	72.6+0.4s
[3200/16000]	[L1: 5.8224]	72.6+0.0s
[4800/16000]	[L1: 5.8280]	72.7+0.0s
[6400/16000]	[L1: 5.8145]	73.6+0.0s
[8000/16000]	[L1: 5.8647]	73.3+0.0s
[9600/16000]	[L1: 5.8197]	73.2+0.0s
[11200/16000]	[L1: 5.7919]	73.3+0.0s
[12800/16000]	[L1: 5.7931]	73.1+0.0s
[14400/16000]	[L1: 5.7891]	73.3+0.0s
[16000/16000]	[L1: 5.8106]	73.3+0.0s
[Epoch 567]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9631]	73.5+0.4s
[3200/16000]	[L1: 5.8431]	73.5+0.0s
[4800/16000]	[L1: 5.7754]	73.6+0.0s
[6400/16000]	[L1: 5.7608]	72.8+0.0s
[8000/16000]	[L1: 5.7687]	72.6+0.0s
[9600/16000]	[L1: 5.7862]	72.9+0.0s
[11200/16000]	[L1: 5.7852]	72.8+0.0s
[12800/16000]	[L1: 5.7835]	72.6+0.0s
[14400/16000]	[L1: 5.7936]	72.9+0.0s
[16000/16000]	[L1: 5.8176]	72.7+0.0s
[Epoch 568]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0023]	72.9+0.4s
[3200/16000]	[L1: 5.9194]	72.7+0.0s
[4800/16000]	[L1: 5.8002]	73.0+0.0s
[6400/16000]	[L1: 5.7940]	72.7+0.0s
[8000/16000]	[L1: 5.7546]	73.5+0.0s
[9600/16000]	[L1: 5.8038]	73.2+0.0s
[11200/16000]	[L1: 5.8091]	73.2+0.0s
[12800/16000]	[L1: 5.8300]	73.5+0.0s
[14400/16000]	[L1: 5.8119]	73.7+0.0s
[16000/16000]	[L1: 5.7969]	73.4+0.0s
[Epoch 569]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7096]	73.6+0.4s
[3200/16000]	[L1: 5.7895]	73.2+0.0s
[4800/16000]	[L1: 5.8096]	73.2+0.0s
[6400/16000]	[L1: 5.8016]	73.5+0.0s
[8000/16000]	[L1: 5.8105]	73.2+0.0s
[9600/16000]	[L1: 5.8056]	73.3+0.0s
[11200/16000]	[L1: 5.8257]	73.5+0.0s
[12800/16000]	[L1: 5.8012]	73.4+0.0s
[14400/16000]	[L1: 5.7899]	73.3+0.0s
[16000/16000]	[L1: 5.7653]	73.4+0.0s
[Epoch 570]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9345]	73.5+0.4s
[3200/16000]	[L1: 5.9276]	73.2+0.0s
[4800/16000]	[L1: 5.9590]	73.5+0.0s
[6400/16000]	[L1: 5.9161]	73.2+0.0s
[8000/16000]	[L1: 5.8671]	73.2+0.0s
[9600/16000]	[L1: 5.8577]	73.6+0.0s
[11200/16000]	[L1: 5.8358]	72.5+0.0s
[12800/16000]	[L1: 5.8518]	73.6+0.0s
[14400/16000]	[L1: 5.8266]	73.5+0.0s
[16000/16000]	[L1: 5.8275]	72.8+0.0s
[Epoch 571]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0110]	72.8+0.4s
[3200/16000]	[L1: 5.8974]	72.5+0.0s
[4800/16000]	[L1: 5.8649]	72.5+0.0s
[6400/16000]	[L1: 5.8191]	72.6+0.0s
[8000/16000]	[L1: 5.8415]	72.5+0.0s
[9600/16000]	[L1: 5.8069]	72.3+0.0s
[11200/16000]	[L1: 5.8166]	72.7+0.0s
[12800/16000]	[L1: 5.8160]	73.5+0.0s
[14400/16000]	[L1: 5.8061]	73.3+0.0s
[16000/16000]	[L1: 5.7799]	73.2+0.0s
[Epoch 572]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9125]	73.8+0.4s
[3200/16000]	[L1: 5.8649]	73.5+0.0s
[4800/16000]	[L1: 5.7402]	73.5+0.0s
[6400/16000]	[L1: 5.7656]	73.6+0.0s
[8000/16000]	[L1: 5.7245]	73.5+0.0s
[9600/16000]	[L1: 5.7339]	73.7+0.0s
[11200/16000]	[L1: 5.7512]	73.2+0.0s
[12800/16000]	[L1: 5.7597]	72.8+0.0s
[14400/16000]	[L1: 5.7560]	74.2+0.0s
[16000/16000]	[L1: 5.7438]	73.5+0.0s
[Epoch 573]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9475]	73.2+0.4s
[3200/16000]	[L1: 6.0101]	73.0+0.0s
[4800/16000]	[L1: 5.9220]	73.3+0.0s
[6400/16000]	[L1: 5.8635]	73.0+0.0s
[8000/16000]	[L1: 5.8424]	73.6+0.0s
[9600/16000]	[L1: 5.8145]	73.5+0.0s
[11200/16000]	[L1: 5.8220]	73.4+0.0s
[12800/16000]	[L1: 5.8208]	73.5+0.0s
[14400/16000]	[L1: 5.8255]	73.7+0.0s
[16000/16000]	[L1: 5.8225]	73.4+0.0s
[Epoch 574]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7336]	73.6+0.4s
[3200/16000]	[L1: 5.8412]	73.6+0.0s
[4800/16000]	[L1: 5.8033]	73.5+0.0s
[6400/16000]	[L1: 5.8163]	73.3+0.0s
[8000/16000]	[L1: 5.8002]	73.6+0.0s
[9600/16000]	[L1: 5.8086]	72.5+0.0s
[11200/16000]	[L1: 5.7995]	72.5+0.0s
[12800/16000]	[L1: 5.7979]	72.5+0.0s
[14400/16000]	[L1: 5.7961]	72.2+0.0s
[16000/16000]	[L1: 5.7961]	72.4+0.0s
[Epoch 575]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5383]	72.7+0.4s
[3200/16000]	[L1: 5.7041]	72.4+0.0s
[4800/16000]	[L1: 5.7941]	72.4+0.0s
[6400/16000]	[L1: 5.7750]	72.5+0.0s
[8000/16000]	[L1: 5.8093]	72.9+0.0s
[9600/16000]	[L1: 5.7894]	72.3+0.0s
[11200/16000]	[L1: 5.7689]	72.3+0.0s
[12800/16000]	[L1: 5.7717]	73.3+0.0s
[14400/16000]	[L1: 5.7638]	73.1+0.0s
[16000/16000]	[L1: 5.7720]	72.9+0.0s
[Epoch 576]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7796]	72.8+0.4s
[3200/16000]	[L1: 5.8854]	72.8+0.0s
[4800/16000]	[L1: 5.8670]	72.7+0.0s
[6400/16000]	[L1: 5.8818]	72.7+0.0s
[8000/16000]	[L1: 5.8541]	73.0+0.0s
[9600/16000]	[L1: 5.8241]	72.7+0.0s
[11200/16000]	[L1: 5.8440]	72.8+0.0s
[12800/16000]	[L1: 5.8225]	72.6+0.0s
[14400/16000]	[L1: 5.8252]	72.5+0.0s
[16000/16000]	[L1: 5.8166]	72.8+0.0s
[Epoch 577]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7891]	73.0+0.4s
[3200/16000]	[L1: 5.7752]	72.6+0.0s
[4800/16000]	[L1: 5.8408]	73.0+0.0s
[6400/16000]	[L1: 5.7848]	72.5+0.0s
[8000/16000]	[L1: 5.7540]	73.3+0.0s
[9600/16000]	[L1: 5.7647]	73.5+0.0s
[11200/16000]	[L1: 5.7745]	73.2+0.0s
[12800/16000]	[L1: 5.7810]	73.2+0.0s
[14400/16000]	[L1: 5.8007]	73.5+0.0s
[16000/16000]	[L1: 5.8097]	73.5+0.0s
[Epoch 578]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7678]	73.6+0.4s
[3200/16000]	[L1: 5.7995]	73.7+0.0s
[4800/16000]	[L1: 5.8162]	73.2+0.0s
[6400/16000]	[L1: 5.7756]	73.2+0.0s
[8000/16000]	[L1: 5.7519]	73.2+0.0s
[9600/16000]	[L1: 5.7592]	73.4+0.0s
[11200/16000]	[L1: 5.7675]	73.3+0.0s
[12800/16000]	[L1: 5.7668]	73.4+0.0s
[14400/16000]	[L1: 5.7647]	73.6+0.0s
[16000/16000]	[L1: 5.7408]	73.2+0.0s
[Epoch 579]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8689]	73.4+0.4s
[3200/16000]	[L1: 5.8555]	73.6+0.0s
[4800/16000]	[L1: 5.8061]	73.4+0.0s
[6400/16000]	[L1: 5.7819]	73.4+0.0s
[8000/16000]	[L1: 5.7695]	73.4+0.0s
[9600/16000]	[L1: 5.7676]	73.0+0.0s
[11200/16000]	[L1: 5.8095]	73.4+0.0s
[12800/16000]	[L1: 5.7914]	73.6+0.0s
[14400/16000]	[L1: 5.8057]	72.7+0.0s
[16000/16000]	[L1: 5.8017]	72.2+0.0s
[Epoch 580]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8830]	72.9+0.4s
[3200/16000]	[L1: 5.7295]	72.4+0.0s
[4800/16000]	[L1: 5.7574]	72.5+0.0s
[6400/16000]	[L1: 5.7460]	73.3+0.0s
[8000/16000]	[L1: 5.7868]	72.8+0.0s
[9600/16000]	[L1: 5.7863]	73.3+0.0s
[11200/16000]	[L1: 5.7740]	73.2+0.0s
[12800/16000]	[L1: 5.7696]	72.8+0.0s
[14400/16000]	[L1: 5.7486]	72.7+0.0s
[16000/16000]	[L1: 5.7359]	72.5+0.0s
[Epoch 581]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7691]	72.8+0.4s
[3200/16000]	[L1: 5.8911]	73.2+0.0s
[4800/16000]	[L1: 5.8399]	73.0+0.0s
[6400/16000]	[L1: 5.8640]	72.8+0.0s
[8000/16000]	[L1: 5.8066]	72.2+0.0s
[9600/16000]	[L1: 5.8083]	72.9+0.0s
[11200/16000]	[L1: 5.8072]	72.4+0.0s
[12800/16000]	[L1: 5.8054]	75.8+0.0s
[14400/16000]	[L1: 5.7842]	80.5+0.0s
[16000/16000]	[L1: 5.7813]	74.8+0.0s
[Epoch 582]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7937]	73.8+0.4s
[3200/16000]	[L1: 5.7960]	73.5+0.0s
[4800/16000]	[L1: 5.7400]	72.8+0.0s
[6400/16000]	[L1: 5.7526]	73.1+0.0s
[8000/16000]	[L1: 5.7793]	72.8+0.0s
[9600/16000]	[L1: 5.7830]	72.8+0.0s
[11200/16000]	[L1: 5.7808]	73.2+0.0s
[12800/16000]	[L1: 5.7755]	72.9+0.0s
[14400/16000]	[L1: 5.7809]	73.1+0.0s
[16000/16000]	[L1: 5.7947]	72.8+0.0s
[Epoch 583]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9551]	72.9+0.4s
[3200/16000]	[L1: 5.9204]	73.0+0.0s
[4800/16000]	[L1: 5.8784]	73.5+0.0s
[6400/16000]	[L1: 5.8827]	73.3+0.0s
[8000/16000]	[L1: 5.8650]	73.0+0.0s
[9600/16000]	[L1: 5.8531]	73.0+0.0s
[11200/16000]	[L1: 5.8388]	72.5+0.0s
[12800/16000]	[L1: 5.8106]	72.5+0.0s
[14400/16000]	[L1: 5.8179]	72.5+0.0s
[16000/16000]	[L1: 5.8215]	72.4+0.0s
[Epoch 584]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6723]	73.0+0.4s
[3200/16000]	[L1: 5.6647]	72.6+0.0s
[4800/16000]	[L1: 5.7072]	72.7+0.0s
[6400/16000]	[L1: 5.7292]	72.9+0.0s
[8000/16000]	[L1: 5.7301]	73.0+0.0s
[9600/16000]	[L1: 5.7227]	73.1+0.0s
[11200/16000]	[L1: 5.7431]	73.2+0.0s
[12800/16000]	[L1: 5.7488]	73.1+0.0s
[14400/16000]	[L1: 5.7490]	73.0+0.0s
[16000/16000]	[L1: 5.7653]	73.0+0.0s
[Epoch 585]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5607]	73.2+0.4s
[3200/16000]	[L1: 5.5478]	72.9+0.0s
[4800/16000]	[L1: 5.6916]	73.2+0.0s
[6400/16000]	[L1: 5.7006]	73.6+0.0s
[8000/16000]	[L1: 5.7420]	73.4+0.0s
[9600/16000]	[L1: 5.7397]	73.3+0.0s
[11200/16000]	[L1: 5.7258]	73.5+0.0s
[12800/16000]	[L1: 5.7250]	73.2+0.0s
[14400/16000]	[L1: 5.7320]	72.3+0.0s
[16000/16000]	[L1: 5.7452]	72.8+0.1s
[Epoch 586]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9464]	72.9+0.5s
[3200/16000]	[L1: 5.9383]	72.6+0.0s
[4800/16000]	[L1: 5.9345]	72.9+0.0s
[6400/16000]	[L1: 5.8756]	72.7+0.0s
[8000/16000]	[L1: 5.8813]	72.7+0.0s
[9600/16000]	[L1: 5.8349]	72.5+0.0s
[11200/16000]	[L1: 5.8123]	72.3+0.0s
[12800/16000]	[L1: 5.7973]	72.5+0.0s
[14400/16000]	[L1: 5.8163]	72.5+0.0s
[16000/16000]	[L1: 5.8018]	73.0+0.0s
[Epoch 587]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6805]	73.7+0.4s
[3200/16000]	[L1: 5.6714]	73.1+0.0s
[4800/16000]	[L1: 5.7648]	73.3+0.0s
[6400/16000]	[L1: 5.7504]	73.1+0.0s
[8000/16000]	[L1: 5.7514]	73.0+0.0s
[9600/16000]	[L1: 5.7996]	73.4+0.0s
[11200/16000]	[L1: 5.7990]	73.1+0.0s
[12800/16000]	[L1: 5.8011]	73.3+0.0s
[14400/16000]	[L1: 5.7959]	73.1+0.0s
[16000/16000]	[L1: 5.7980]	73.1+0.0s
[Epoch 588]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8344]	73.4+0.4s
[3200/16000]	[L1: 5.8938]	73.0+0.0s
[4800/16000]	[L1: 5.8592]	73.0+0.0s
[6400/16000]	[L1: 5.8481]	72.9+0.0s
[8000/16000]	[L1: 5.8347]	72.5+0.0s
[9600/16000]	[L1: 5.8388]	72.5+0.0s
[11200/16000]	[L1: 5.8351]	73.2+0.0s
[12800/16000]	[L1: 5.8081]	73.0+0.0s
[14400/16000]	[L1: 5.8163]	73.1+0.0s
[16000/16000]	[L1: 5.8013]	73.3+0.0s
[Epoch 589]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6535]	72.8+0.4s
[3200/16000]	[L1: 5.7119]	72.6+0.0s
[4800/16000]	[L1: 5.7138]	72.5+0.0s
[6400/16000]	[L1: 5.7379]	72.5+0.0s
[8000/16000]	[L1: 5.7357]	72.6+0.0s
[9600/16000]	[L1: 5.7248]	72.6+0.0s
[11200/16000]	[L1: 5.7184]	72.6+0.1s
[12800/16000]	[L1: 5.7101]	73.5+0.0s
[14400/16000]	[L1: 5.7055]	73.4+0.0s
[16000/16000]	[L1: 5.7249]	72.3+0.0s
[Epoch 590]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8832]	72.4+0.4s
[3200/16000]	[L1: 5.7782]	73.2+0.0s
[4800/16000]	[L1: 5.7757]	72.9+0.0s
[6400/16000]	[L1: 5.7681]	72.2+0.0s
[8000/16000]	[L1: 5.7771]	72.7+0.0s
[9600/16000]	[L1: 5.7827]	72.3+0.0s
[11200/16000]	[L1: 5.7566]	72.3+0.0s
[12800/16000]	[L1: 5.7347]	72.4+0.0s
[14400/16000]	[L1: 5.7521]	72.3+0.0s
[16000/16000]	[L1: 5.7717]	72.3+0.0s
[Epoch 591]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8742]	72.8+0.4s
[3200/16000]	[L1: 5.8979]	72.3+0.0s
[4800/16000]	[L1: 5.7910]	72.2+0.0s
[6400/16000]	[L1: 5.7724]	72.9+0.0s
[8000/16000]	[L1: 5.7833]	72.9+0.0s
[9600/16000]	[L1: 5.7858]	72.7+0.0s
[11200/16000]	[L1: 5.7435]	72.3+0.0s
[12800/16000]	[L1: 5.7533]	72.6+0.0s
[14400/16000]	[L1: 5.7568]	72.5+0.0s
[16000/16000]	[L1: 5.7485]	72.3+0.0s
[Epoch 592]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.1098]	72.6+0.4s
[3200/16000]	[L1: 5.9002]	72.9+0.0s
[4800/16000]	[L1: 5.9093]	73.1+0.0s
[6400/16000]	[L1: 5.8973]	73.4+0.0s
[8000/16000]	[L1: 5.8420]	73.3+0.0s
[9600/16000]	[L1: 5.8519]	73.4+0.0s
[11200/16000]	[L1: 5.8120]	73.7+0.0s
[12800/16000]	[L1: 5.8170]	73.3+0.0s
[14400/16000]	[L1: 5.8200]	72.7+0.0s
[16000/16000]	[L1: 5.8551]	72.6+0.0s
[Epoch 593]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7064]	72.5+0.4s
[3200/16000]	[L1: 5.7692]	72.5+0.0s
[4800/16000]	[L1: 5.8140]	72.4+0.0s
[6400/16000]	[L1: 5.8160]	73.0+0.0s
[8000/16000]	[L1: 5.8147]	72.9+0.0s
[9600/16000]	[L1: 5.8140]	73.0+0.0s
[11200/16000]	[L1: 5.8207]	73.2+0.0s
[12800/16000]	[L1: 5.8110]	73.1+0.0s
[14400/16000]	[L1: 5.7948]	73.0+0.0s
[16000/16000]	[L1: 5.7984]	72.3+0.0s
[Epoch 594]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0545]	73.1+0.4s
[3200/16000]	[L1: 5.9674]	73.3+0.0s
[4800/16000]	[L1: 5.8850]	73.3+0.0s
[6400/16000]	[L1: 5.8787]	73.2+0.0s
[8000/16000]	[L1: 5.8507]	72.6+0.0s
[9600/16000]	[L1: 5.8566]	72.4+0.0s
[11200/16000]	[L1: 5.8306]	72.9+0.0s
[12800/16000]	[L1: 5.8312]	73.2+0.0s
[14400/16000]	[L1: 5.8423]	73.2+0.0s
[16000/16000]	[L1: 5.8161]	73.0+0.0s
[Epoch 595]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6582]	73.6+0.4s
[3200/16000]	[L1: 5.7111]	73.4+0.0s
[4800/16000]	[L1: 5.7417]	73.3+0.0s
[6400/16000]	[L1: 5.8096]	74.0+0.0s
[8000/16000]	[L1: 5.8151]	73.7+0.0s
[9600/16000]	[L1: 5.7986]	73.9+0.0s
[11200/16000]	[L1: 5.8286]	73.9+0.0s
[12800/16000]	[L1: 5.8309]	73.3+0.0s
[14400/16000]	[L1: 5.8132]	72.4+0.0s
[16000/16000]	[L1: 5.8344]	72.7+0.0s
[Epoch 596]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6295]	73.5+0.4s
[3200/16000]	[L1: 5.7166]	73.2+0.0s
[4800/16000]	[L1: 5.7721]	72.9+0.0s
[6400/16000]	[L1: 5.7484]	73.4+0.0s
[8000/16000]	[L1: 5.7515]	72.9+0.0s
[9600/16000]	[L1: 5.7992]	73.2+0.0s
[11200/16000]	[L1: 5.8215]	72.6+0.0s
[12800/16000]	[L1: 5.8130]	72.5+0.0s
[14400/16000]	[L1: 5.8411]	72.4+0.0s
[16000/16000]	[L1: 5.8449]	72.5+0.0s
[Epoch 597]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8045]	73.0+0.4s
[3200/16000]	[L1: 5.8129]	73.0+0.0s
[4800/16000]	[L1: 5.8168]	72.9+0.0s
[6400/16000]	[L1: 5.7328]	72.8+0.0s
[8000/16000]	[L1: 5.7643]	73.0+0.0s
[9600/16000]	[L1: 5.7621]	73.0+0.0s
[11200/16000]	[L1: 5.7395]	72.6+0.0s
[12800/16000]	[L1: 5.7607]	73.5+0.0s
[14400/16000]	[L1: 5.7663]	73.5+0.0s
[16000/16000]	[L1: 5.7754]	73.3+0.0s
[Epoch 598]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6470]	73.9+0.5s
[3200/16000]	[L1: 5.7242]	73.2+0.0s
[4800/16000]	[L1: 5.7642]	72.5+0.0s
[6400/16000]	[L1: 5.7975]	72.9+0.0s
[8000/16000]	[L1: 5.8072]	73.2+0.0s
[9600/16000]	[L1: 5.8192]	73.3+0.0s
[11200/16000]	[L1: 5.8458]	73.4+0.0s
[12800/16000]	[L1: 5.8572]	73.3+0.0s
[14400/16000]	[L1: 5.8356]	73.3+0.0s
[16000/16000]	[L1: 5.8457]	73.4+0.0s
[Epoch 599]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7539]	73.2+0.4s
[3200/16000]	[L1: 5.7075]	72.7+0.0s
[4800/16000]	[L1: 5.8052]	72.9+0.0s
[6400/16000]	[L1: 5.8330]	72.9+0.0s
[8000/16000]	[L1: 5.8152]	73.7+0.0s
[9600/16000]	[L1: 5.7751]	74.6+0.0s
[11200/16000]	[L1: 5.7794]	73.9+0.0s
[12800/16000]	[L1: 5.7694]	73.4+0.0s
[14400/16000]	[L1: 5.7789]	73.6+0.0s
[16000/16000]	[L1: 5.7662]	73.6+0.0s
[Epoch 600]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7696]	73.8+0.4s
[3200/16000]	[L1: 5.7917]	74.1+0.0s
[4800/16000]	[L1: 5.7561]	73.1+0.0s
[6400/16000]	[L1: 5.7578]	73.1+0.0s
[8000/16000]	[L1: 5.7690]	73.3+0.0s
[9600/16000]	[L1: 5.7926]	73.1+0.0s
[11200/16000]	[L1: 5.7535]	73.0+0.0s
[12800/16000]	[L1: 5.7597]	73.3+0.0s
[14400/16000]	[L1: 5.7744]	72.8+0.0s
[16000/16000]	[L1: 5.7716]	72.2+0.0s
[Epoch 601]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9466]	72.9+0.4s
[3200/16000]	[L1: 5.8506]	72.7+0.0s
[4800/16000]	[L1: 5.8424]	72.3+0.0s
[6400/16000]	[L1: 5.8831]	73.1+0.0s
[8000/16000]	[L1: 5.8362]	73.3+0.0s
[9600/16000]	[L1: 5.8265]	73.2+0.0s
[11200/16000]	[L1: 5.8041]	73.6+0.0s
[12800/16000]	[L1: 5.7812]	73.5+0.0s
[14400/16000]	[L1: 5.7931]	73.3+0.0s
[16000/16000]	[L1: 5.7997]	73.3+0.0s
[Epoch 602]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6160]	73.4+0.4s
[3200/16000]	[L1: 5.6304]	73.0+0.0s
[4800/16000]	[L1: 5.6662]	72.6+0.0s
[6400/16000]	[L1: 5.6730]	72.3+0.0s
[8000/16000]	[L1: 5.7075]	72.4+0.0s
[9600/16000]	[L1: 5.6900]	72.5+0.0s
[11200/16000]	[L1: 5.6851]	72.4+0.0s
[12800/16000]	[L1: 5.6961]	72.3+0.0s
[14400/16000]	[L1: 5.7117]	72.5+0.0s
[16000/16000]	[L1: 5.7265]	72.3+0.0s
[Epoch 603]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8457]	72.5+0.4s
[3200/16000]	[L1: 5.7363]	72.8+0.0s
[4800/16000]	[L1: 5.7229]	73.3+0.0s
[6400/16000]	[L1: 5.7635]	74.3+0.0s
[8000/16000]	[L1: 5.7425]	73.7+0.0s
[9600/16000]	[L1: 5.7683]	73.3+0.0s
[11200/16000]	[L1: 5.7588]	73.4+0.0s
[12800/16000]	[L1: 5.7746]	73.3+0.0s
[14400/16000]	[L1: 5.7762]	73.3+0.0s
[16000/16000]	[L1: 5.7870]	73.2+0.0s
[Epoch 604]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6524]	72.7+0.4s
[3200/16000]	[L1: 5.6580]	73.3+0.0s
[4800/16000]	[L1: 5.6475]	72.4+0.0s
[6400/16000]	[L1: 5.6984]	72.4+0.0s
[8000/16000]	[L1: 5.7026]	72.7+0.0s
[9600/16000]	[L1: 5.7045]	72.7+0.0s
[11200/16000]	[L1: 5.7212]	72.6+0.0s
[12800/16000]	[L1: 5.7590]	73.1+0.0s
[14400/16000]	[L1: 5.7287]	73.0+0.0s
[16000/16000]	[L1: 5.7677]	72.9+0.0s
[Epoch 605]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6116]	72.9+0.4s
[3200/16000]	[L1: 5.6748]	72.9+0.0s
[4800/16000]	[L1: 5.7494]	72.9+0.0s
[6400/16000]	[L1: 5.7771]	73.3+0.0s
[8000/16000]	[L1: 5.7567]	73.0+0.0s
[9600/16000]	[L1: 5.7827]	72.5+0.0s
[11200/16000]	[L1: 5.7823]	73.3+0.0s
[12800/16000]	[L1: 5.8045]	72.6+0.0s
[14400/16000]	[L1: 5.8052]	73.0+0.0s
[16000/16000]	[L1: 5.7698]	73.1+0.0s
[Epoch 606]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8225]	73.4+0.4s
[3200/16000]	[L1: 5.8255]	73.3+0.0s
[4800/16000]	[L1: 5.7385]	73.3+0.0s
[6400/16000]	[L1: 5.7397]	73.1+0.0s
[8000/16000]	[L1: 5.7267]	73.0+0.0s
[9600/16000]	[L1: 5.7543]	73.4+0.0s
[11200/16000]	[L1: 5.7812]	73.4+0.0s
[12800/16000]	[L1: 5.7783]	73.2+0.0s
[14400/16000]	[L1: 5.7770]	73.6+0.0s
[16000/16000]	[L1: 5.7733]	72.8+0.0s
[Epoch 607]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5878]	73.3+0.4s
[3200/16000]	[L1: 5.6453]	73.1+0.0s
[4800/16000]	[L1: 5.6971]	73.0+0.0s
[6400/16000]	[L1: 5.7265]	73.2+0.0s
[8000/16000]	[L1: 5.7193]	75.7+0.0s
[9600/16000]	[L1: 5.7210]	78.7+0.0s
[11200/16000]	[L1: 5.7368]	76.6+0.0s
[12800/16000]	[L1: 5.7401]	72.8+0.0s
[14400/16000]	[L1: 5.7494]	72.8+0.0s
[16000/16000]	[L1: 5.7577]	72.7+0.0s
[Epoch 608]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8030]	73.1+0.4s
[3200/16000]	[L1: 5.7988]	72.9+0.0s
[4800/16000]	[L1: 5.8605]	73.1+0.0s
[6400/16000]	[L1: 5.8440]	75.1+0.0s
[8000/16000]	[L1: 5.8292]	74.8+0.0s
[9600/16000]	[L1: 5.8270]	72.5+0.0s
[11200/16000]	[L1: 5.8488]	72.5+0.0s
[12800/16000]	[L1: 5.8338]	72.3+0.0s
[14400/16000]	[L1: 5.8008]	72.2+0.0s
[16000/16000]	[L1: 5.8041]	72.3+0.0s
[Epoch 609]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7706]	73.4+0.5s
[3200/16000]	[L1: 5.8807]	72.8+0.0s
[4800/16000]	[L1: 5.8327]	72.1+0.0s
[6400/16000]	[L1: 5.7691]	72.2+0.0s
[8000/16000]	[L1: 5.8139]	72.0+0.0s
[9600/16000]	[L1: 5.8025]	72.4+0.0s
[11200/16000]	[L1: 5.7795]	72.4+0.0s
[12800/16000]	[L1: 5.7608]	72.6+0.0s
[14400/16000]	[L1: 5.7753]	72.4+0.0s
[16000/16000]	[L1: 5.7953]	72.4+0.0s
[Epoch 610]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8209]	72.4+0.4s
[3200/16000]	[L1: 5.8721]	72.2+0.0s
[4800/16000]	[L1: 5.8765]	72.4+0.0s
[6400/16000]	[L1: 5.8114]	72.7+0.0s
[8000/16000]	[L1: 5.8172]	72.3+0.0s
[9600/16000]	[L1: 5.8004]	72.1+0.0s
[11200/16000]	[L1: 5.8104]	72.1+0.0s
[12800/16000]	[L1: 5.8439]	72.2+0.0s
[14400/16000]	[L1: 5.8510]	72.2+0.0s
[16000/16000]	[L1: 5.8404]	72.0+0.0s
[Epoch 611]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8520]	72.3+0.5s
[3200/16000]	[L1: 5.8909]	72.0+0.0s
[4800/16000]	[L1: 5.8474]	72.1+0.0s
[6400/16000]	[L1: 5.8336]	72.1+0.0s
[8000/16000]	[L1: 5.8261]	72.6+0.0s
[9600/16000]	[L1: 5.7885]	72.4+0.0s
[11200/16000]	[L1: 5.7951]	72.2+0.0s
[12800/16000]	[L1: 5.7846]	72.6+0.0s
[14400/16000]	[L1: 5.7703]	73.0+0.0s
[16000/16000]	[L1: 5.7558]	73.0+0.0s
[Epoch 612]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7622]	73.0+0.4s
[3200/16000]	[L1: 5.7488]	72.8+0.0s
[4800/16000]	[L1: 5.7573]	73.0+0.0s
[6400/16000]	[L1: 5.7870]	73.1+0.0s
[8000/16000]	[L1: 5.7909]	73.0+0.0s
[9600/16000]	[L1: 5.8061]	73.0+0.0s
[11200/16000]	[L1: 5.7999]	72.8+0.0s
[12800/16000]	[L1: 5.8142]	73.0+0.0s
[14400/16000]	[L1: 5.8040]	72.9+0.0s
[16000/16000]	[L1: 5.8022]	72.9+0.0s
[Epoch 613]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8488]	73.5+0.4s
[3200/16000]	[L1: 5.8657]	72.7+0.0s
[4800/16000]	[L1: 5.7976]	72.7+0.0s
[6400/16000]	[L1: 5.8027]	72.2+0.0s
[8000/16000]	[L1: 5.8150]	72.1+0.0s
[9600/16000]	[L1: 5.8155]	72.1+0.0s
[11200/16000]	[L1: 5.8070]	72.0+0.0s
[12800/16000]	[L1: 5.7876]	72.1+0.0s
[14400/16000]	[L1: 5.7767]	71.9+0.0s
[16000/16000]	[L1: 5.7710]	72.4+0.0s
[Epoch 614]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6879]	72.8+0.4s
[3200/16000]	[L1: 5.7653]	72.6+0.0s
[4800/16000]	[L1: 5.7410]	72.9+0.0s
[6400/16000]	[L1: 5.7678]	73.2+0.0s
[8000/16000]	[L1: 5.7859]	73.1+0.0s
[9600/16000]	[L1: 5.8104]	73.0+0.0s
[11200/16000]	[L1: 5.7963]	73.1+0.0s
[12800/16000]	[L1: 5.7859]	72.8+0.0s
[14400/16000]	[L1: 5.8092]	73.0+0.0s
[16000/16000]	[L1: 5.7936]	73.1+0.0s
[Epoch 615]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5548]	75.6+0.4s
[3200/16000]	[L1: 5.5833]	73.1+0.0s
[4800/16000]	[L1: 5.5867]	72.2+0.0s
[6400/16000]	[L1: 5.6334]	72.8+0.0s
[8000/16000]	[L1: 5.7004]	73.0+0.0s
[9600/16000]	[L1: 5.7365]	73.0+0.0s
[11200/16000]	[L1: 5.7465]	73.1+0.0s
[12800/16000]	[L1: 5.7471]	72.9+0.0s
[14400/16000]	[L1: 5.7540]	73.0+0.0s
[16000/16000]	[L1: 5.7752]	73.0+0.0s
[Epoch 616]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8009]	73.1+0.4s
[3200/16000]	[L1: 5.7672]	72.7+0.0s
[4800/16000]	[L1: 5.7855]	72.2+0.0s
[6400/16000]	[L1: 5.7945]	72.0+0.0s
[8000/16000]	[L1: 5.7982]	72.2+0.0s
[9600/16000]	[L1: 5.7741]	72.4+0.0s
[11200/16000]	[L1: 5.7421]	72.6+0.0s
[12800/16000]	[L1: 5.7703]	72.5+0.0s
[14400/16000]	[L1: 5.7733]	72.6+0.0s
[16000/16000]	[L1: 5.7832]	72.5+0.0s
[Epoch 617]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5637]	72.6+0.5s
[3200/16000]	[L1: 5.6951]	72.8+0.0s
[4800/16000]	[L1: 5.7037]	72.9+0.0s
[6400/16000]	[L1: 5.7441]	73.3+0.0s
[8000/16000]	[L1: 5.7576]	73.1+0.0s
[9600/16000]	[L1: 5.7563]	73.0+0.0s
[11200/16000]	[L1: 5.7451]	73.2+0.0s
[12800/16000]	[L1: 5.7637]	73.0+0.0s
[14400/16000]	[L1: 5.7762]	72.3+0.0s
[16000/16000]	[L1: 5.7772]	72.6+0.0s
[Epoch 618]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8664]	73.2+0.4s
[3200/16000]	[L1: 5.7986]	73.2+0.0s
[4800/16000]	[L1: 5.8541]	73.0+0.0s
[6400/16000]	[L1: 5.8738]	73.2+0.0s
[8000/16000]	[L1: 5.9050]	73.1+0.0s
[9600/16000]	[L1: 5.8479]	72.9+0.0s
[11200/16000]	[L1: 5.8041]	73.1+0.0s
[12800/16000]	[L1: 5.7876]	73.0+0.0s
[14400/16000]	[L1: 5.7831]	73.1+0.0s
[16000/16000]	[L1: 5.7740]	73.0+0.0s
[Epoch 619]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7618]	73.4+0.4s
[3200/16000]	[L1: 5.7594]	73.0+0.0s
[4800/16000]	[L1: 5.7165]	73.0+0.0s
[6400/16000]	[L1: 5.7066]	73.0+0.0s
[8000/16000]	[L1: 5.7051]	73.0+0.0s
[9600/16000]	[L1: 5.7117]	73.4+0.0s
[11200/16000]	[L1: 5.6959]	73.1+0.0s
[12800/16000]	[L1: 5.7195]	73.2+0.0s
[14400/16000]	[L1: 5.7463]	73.1+0.0s
[16000/16000]	[L1: 5.7495]	73.0+0.0s
[Epoch 620]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7434]	73.3+0.4s
[3200/16000]	[L1: 5.6687]	73.2+0.0s
[4800/16000]	[L1: 5.7621]	73.1+0.0s
[6400/16000]	[L1: 5.7688]	73.1+0.0s
[8000/16000]	[L1: 5.8048]	73.1+0.0s
[9600/16000]	[L1: 5.8257]	73.3+0.0s
[11200/16000]	[L1: 5.8197]	73.1+0.0s
[12800/16000]	[L1: 5.8289]	73.1+0.0s
[14400/16000]	[L1: 5.8125]	73.1+0.0s
[16000/16000]	[L1: 5.8145]	73.1+0.0s
[Epoch 621]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6762]	73.4+0.4s
[3200/16000]	[L1: 5.6898]	73.1+0.0s
[4800/16000]	[L1: 5.8350]	73.1+0.0s
[6400/16000]	[L1: 5.7996]	73.2+0.0s
[8000/16000]	[L1: 5.8192]	73.2+0.0s
[9600/16000]	[L1: 5.8199]	73.3+0.0s
[11200/16000]	[L1: 5.8088]	73.1+0.0s
[12800/16000]	[L1: 5.8050]	73.2+0.0s
[14400/16000]	[L1: 5.7712]	73.2+0.0s
[16000/16000]	[L1: 5.7733]	73.2+0.0s
[Epoch 622]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5790]	73.3+0.5s
[3200/16000]	[L1: 5.6274]	73.1+0.0s
[4800/16000]	[L1: 5.6769]	73.3+0.0s
[6400/16000]	[L1: 5.7045]	73.1+0.0s
[8000/16000]	[L1: 5.7492]	73.1+0.0s
[9600/16000]	[L1: 5.7454]	73.0+0.0s
[11200/16000]	[L1: 5.7700]	72.9+0.0s
[12800/16000]	[L1: 5.7793]	73.1+0.0s
[14400/16000]	[L1: 5.7827]	73.1+0.0s
[16000/16000]	[L1: 5.7769]	73.0+0.0s
[Epoch 623]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8297]	73.4+0.4s
[3200/16000]	[L1: 5.8187]	72.9+0.0s
[4800/16000]	[L1: 5.8698]	73.1+0.0s
[6400/16000]	[L1: 5.8528]	73.2+0.0s
[8000/16000]	[L1: 5.8230]	73.0+0.0s
[9600/16000]	[L1: 5.7887]	73.2+0.0s
[11200/16000]	[L1: 5.7782]	73.1+0.0s
[12800/16000]	[L1: 5.7656]	72.9+0.0s
[14400/16000]	[L1: 5.7710]	72.6+0.0s
[16000/16000]	[L1: 5.7771]	72.9+0.0s
[Epoch 624]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8316]	73.2+0.4s
[3200/16000]	[L1: 5.8135]	72.8+0.0s
[4800/16000]	[L1: 5.7611]	72.5+0.0s
[6400/16000]	[L1: 5.8034]	72.2+0.0s
[8000/16000]	[L1: 5.8409]	72.4+0.0s
[9600/16000]	[L1: 5.8291]	72.5+0.0s
[11200/16000]	[L1: 5.8463]	72.3+0.0s
[12800/16000]	[L1: 5.8170]	72.4+0.0s
[14400/16000]	[L1: 5.8015]	72.4+0.0s
[16000/16000]	[L1: 5.8239]	72.3+0.0s
[Epoch 625]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8767]	72.4+0.4s
[3200/16000]	[L1: 5.8326]	72.0+0.0s
[4800/16000]	[L1: 5.8013]	72.1+0.0s
[6400/16000]	[L1: 5.7740]	72.0+0.0s
[8000/16000]	[L1: 5.8118]	72.2+0.0s
[9600/16000]	[L1: 5.7917]	72.9+0.0s
[11200/16000]	[L1: 5.7916]	72.9+0.0s
[12800/16000]	[L1: 5.7814]	72.1+0.0s
[14400/16000]	[L1: 5.7813]	72.0+0.0s
[16000/16000]	[L1: 5.7843]	72.1+0.0s
[Epoch 626]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5766]	72.7+0.5s
[3200/16000]	[L1: 5.7225]	72.6+0.0s
[4800/16000]	[L1: 5.8018]	72.4+0.0s
[6400/16000]	[L1: 5.8166]	72.1+0.0s
[8000/16000]	[L1: 5.8042]	72.1+0.0s
[9600/16000]	[L1: 5.8156]	72.2+0.0s
[11200/16000]	[L1: 5.8159]	72.1+0.0s
[12800/16000]	[L1: 5.8391]	72.2+0.0s
[14400/16000]	[L1: 5.8248]	72.2+0.0s
[16000/16000]	[L1: 5.8189]	72.3+0.0s
[Epoch 627]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8269]	72.6+0.4s
[3200/16000]	[L1: 5.8779]	72.3+0.0s
[4800/16000]	[L1: 5.8769]	72.4+0.0s
[6400/16000]	[L1: 5.8875]	72.2+0.0s
[8000/16000]	[L1: 5.8663]	72.4+0.0s
[9600/16000]	[L1: 5.8588]	72.1+0.0s
[11200/16000]	[L1: 5.8131]	72.3+0.0s
[12800/16000]	[L1: 5.7986]	72.3+0.0s
[14400/16000]	[L1: 5.8215]	72.3+0.0s
[16000/16000]	[L1: 5.8415]	72.3+0.0s
[Epoch 628]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6956]	72.5+0.4s
[3200/16000]	[L1: 5.7516]	72.4+0.0s
[4800/16000]	[L1: 5.7266]	72.4+0.0s
[6400/16000]	[L1: 5.7573]	72.3+0.0s
[8000/16000]	[L1: 5.7447]	72.3+0.0s
[9600/16000]	[L1: 5.7383]	72.2+0.0s
[11200/16000]	[L1: 5.7885]	72.4+0.0s
[12800/16000]	[L1: 5.7981]	72.3+0.0s
[14400/16000]	[L1: 5.8001]	72.3+0.0s
[16000/16000]	[L1: 5.8048]	72.2+0.0s
[Epoch 629]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7548]	72.6+0.4s
[3200/16000]	[L1: 5.8318]	72.6+0.0s
[4800/16000]	[L1: 5.8460]	72.6+0.0s
[6400/16000]	[L1: 5.8712]	72.5+0.0s
[8000/16000]	[L1: 5.8335]	72.6+0.0s
[9600/16000]	[L1: 5.8176]	72.5+0.0s
[11200/16000]	[L1: 5.8184]	72.7+0.0s
[12800/16000]	[L1: 5.8133]	72.4+0.0s
[14400/16000]	[L1: 5.8005]	72.6+0.0s
[16000/16000]	[L1: 5.7777]	72.5+0.0s
[Epoch 630]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6939]	72.3+0.4s
[3200/16000]	[L1: 5.9141]	72.6+0.0s
[4800/16000]	[L1: 5.9012]	73.0+0.0s
[6400/16000]	[L1: 5.8081]	73.2+0.0s
[8000/16000]	[L1: 5.8265]	72.6+0.0s
[9600/16000]	[L1: 5.8168]	73.0+0.0s
[11200/16000]	[L1: 5.8170]	72.6+0.0s
[12800/16000]	[L1: 5.8089]	72.2+0.0s
[14400/16000]	[L1: 5.8005]	72.2+0.0s
[16000/16000]	[L1: 5.7932]	72.2+0.0s
[Epoch 631]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6391]	72.3+0.5s
[3200/16000]	[L1: 5.7986]	72.4+0.0s
[4800/16000]	[L1: 5.8012]	72.2+0.0s
[6400/16000]	[L1: 5.8209]	72.4+0.0s
[8000/16000]	[L1: 5.8133]	72.3+0.0s
[9600/16000]	[L1: 5.7952]	72.2+0.0s
[11200/16000]	[L1: 5.7819]	72.5+0.0s
[12800/16000]	[L1: 5.7817]	72.5+0.0s
[14400/16000]	[L1: 5.7933]	73.1+0.0s
[16000/16000]	[L1: 5.7695]	72.9+0.0s
[Epoch 632]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6036]	73.1+0.4s
[3200/16000]	[L1: 5.6985]	73.3+0.0s
[4800/16000]	[L1: 5.7363]	72.9+0.0s
[6400/16000]	[L1: 5.7241]	72.7+0.0s
[8000/16000]	[L1: 5.7383]	72.2+0.0s
[9600/16000]	[L1: 5.7760]	72.0+0.0s
[11200/16000]	[L1: 5.7753]	72.1+0.0s
[12800/16000]	[L1: 5.7724]	72.0+0.0s
[14400/16000]	[L1: 5.7764]	72.1+0.0s
[16000/16000]	[L1: 5.7913]	72.4+0.0s
[Epoch 633]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8141]	72.8+0.4s
[3200/16000]	[L1: 5.8105]	72.6+0.0s
[4800/16000]	[L1: 5.7997]	72.4+0.0s
[6400/16000]	[L1: 5.7591]	73.1+0.0s
[8000/16000]	[L1: 5.7726]	72.8+0.0s
[9600/16000]	[L1: 5.7563]	72.9+0.0s
[11200/16000]	[L1: 5.7883]	73.0+0.0s
[12800/16000]	[L1: 5.7692]	73.0+0.0s
[14400/16000]	[L1: 5.7836]	73.0+0.0s
[16000/16000]	[L1: 5.7802]	72.8+0.0s
[Epoch 634]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8319]	73.2+0.4s
[3200/16000]	[L1: 5.6639]	73.1+0.0s
[4800/16000]	[L1: 5.6981]	72.7+0.0s
[6400/16000]	[L1: 5.7128]	72.2+0.0s
[8000/16000]	[L1: 5.7572]	72.1+0.0s
[9600/16000]	[L1: 5.7508]	72.5+0.0s
[11200/16000]	[L1: 5.7812]	72.3+0.0s
[12800/16000]	[L1: 5.8055]	72.1+0.0s
[14400/16000]	[L1: 5.8139]	72.2+0.0s
[16000/16000]	[L1: 5.8215]	72.1+0.0s
[Epoch 635]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6983]	72.4+0.4s
[3200/16000]	[L1: 5.6674]	72.7+0.0s
[4800/16000]	[L1: 5.6592]	72.7+0.0s
[6400/16000]	[L1: 5.6754]	72.7+0.0s
[8000/16000]	[L1: 5.6851]	72.6+0.0s
[9600/16000]	[L1: 5.6924]	72.5+0.0s
[11200/16000]	[L1: 5.7352]	72.2+0.0s
[12800/16000]	[L1: 5.7331]	72.2+0.0s
[14400/16000]	[L1: 5.7342]	72.1+0.0s
[16000/16000]	[L1: 5.7107]	71.9+0.0s
[Epoch 636]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6257]	72.5+0.5s
[3200/16000]	[L1: 5.6277]	72.5+0.0s
[4800/16000]	[L1: 5.6534]	72.7+0.0s
[6400/16000]	[L1: 5.7303]	72.6+0.0s
[8000/16000]	[L1: 5.7565]	72.5+0.0s
[9600/16000]	[L1: 5.7951]	72.5+0.0s
[11200/16000]	[L1: 5.7883]	72.5+0.0s
[12800/16000]	[L1: 5.7646]	72.6+0.0s
[14400/16000]	[L1: 5.7799]	73.3+0.0s
[16000/16000]	[L1: 5.7828]	72.9+0.0s
[Epoch 637]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6245]	72.7+0.4s
[3200/16000]	[L1: 5.6791]	72.3+0.0s
[4800/16000]	[L1: 5.7487]	72.2+0.0s
[6400/16000]	[L1: 5.6991]	72.0+0.0s
[8000/16000]	[L1: 5.7236]	72.1+0.0s
[9600/16000]	[L1: 5.7209]	72.1+0.0s
[11200/16000]	[L1: 5.7229]	72.1+0.0s
[12800/16000]	[L1: 5.7414]	72.0+0.0s
[14400/16000]	[L1: 5.7591]	72.1+0.0s
[16000/16000]	[L1: 5.7691]	72.2+0.0s
[Epoch 638]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9126]	72.2+0.4s
[3200/16000]	[L1: 5.8398]	72.5+0.0s
[4800/16000]	[L1: 5.8075]	72.9+0.0s
[6400/16000]	[L1: 5.7521]	72.8+0.0s
[8000/16000]	[L1: 5.8096]	72.8+0.0s
[9600/16000]	[L1: 5.8123]	72.9+0.0s
[11200/16000]	[L1: 5.8129]	72.9+0.0s
[12800/16000]	[L1: 5.8166]	73.0+0.0s
[14400/16000]	[L1: 5.8054]	72.8+0.0s
[16000/16000]	[L1: 5.8176]	72.8+0.0s
[Epoch 639]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8888]	73.1+0.4s
[3200/16000]	[L1: 5.7961]	73.1+0.0s
[4800/16000]	[L1: 5.7499]	72.4+0.0s
[6400/16000]	[L1: 5.7586]	72.1+0.0s
[8000/16000]	[L1: 5.7555]	72.2+0.0s
[9600/16000]	[L1: 5.7345]	72.3+0.0s
[11200/16000]	[L1: 5.7429]	72.0+0.0s
[12800/16000]	[L1: 5.7657]	72.1+0.0s
[14400/16000]	[L1: 5.7708]	72.0+0.0s
[16000/16000]	[L1: 5.7685]	72.0+0.0s
[Epoch 640]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9138]	72.2+0.4s
[3200/16000]	[L1: 5.9220]	72.3+0.0s
[4800/16000]	[L1: 5.8543]	72.9+0.0s
[6400/16000]	[L1: 5.8095]	72.2+0.0s
[8000/16000]	[L1: 5.7915]	73.0+0.0s
[9600/16000]	[L1: 5.7706]	72.8+0.0s
[11200/16000]	[L1: 5.7823]	72.9+0.0s
[12800/16000]	[L1: 5.7720]	72.8+0.0s
[14400/16000]	[L1: 5.7783]	72.7+0.0s
[16000/16000]	[L1: 5.7923]	72.7+0.0s
[Epoch 641]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9583]	72.9+0.4s
[3200/16000]	[L1: 5.9506]	72.4+0.0s
[4800/16000]	[L1: 5.8579]	73.1+0.0s
[6400/16000]	[L1: 5.7860]	73.1+0.0s
[8000/16000]	[L1: 5.7766]	73.2+0.0s
[9600/16000]	[L1: 5.8028]	73.2+0.0s
[11200/16000]	[L1: 5.7951]	73.2+0.0s
[12800/16000]	[L1: 5.7859]	73.2+0.0s
[14400/16000]	[L1: 5.8089]	73.1+0.0s
[16000/16000]	[L1: 5.8186]	72.9+0.0s
[Epoch 642]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7924]	73.3+0.4s
[3200/16000]	[L1: 5.7566]	73.1+0.0s
[4800/16000]	[L1: 5.8389]	73.0+0.0s
[6400/16000]	[L1: 5.8173]	73.0+0.0s
[8000/16000]	[L1: 5.8013]	73.0+0.0s
[9600/16000]	[L1: 5.8138]	72.9+0.0s
[11200/16000]	[L1: 5.8202]	73.1+0.0s
[12800/16000]	[L1: 5.7878]	73.1+0.0s
[14400/16000]	[L1: 5.7697]	73.4+0.0s
[16000/16000]	[L1: 5.7582]	73.1+0.0s
[Epoch 643]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6798]	72.9+0.4s
[3200/16000]	[L1: 5.6266]	73.1+0.0s
[4800/16000]	[L1: 5.6608]	73.0+0.0s
[6400/16000]	[L1: 5.7284]	73.0+0.0s
[8000/16000]	[L1: 5.6864]	72.9+0.0s
[9600/16000]	[L1: 5.7167]	72.9+0.0s
[11200/16000]	[L1: 5.7161]	73.2+0.0s
[12800/16000]	[L1: 5.7338]	72.9+0.0s
[14400/16000]	[L1: 5.7477]	73.2+0.0s
[16000/16000]	[L1: 5.7574]	72.6+0.0s
[Epoch 644]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7216]	72.1+0.4s
[3200/16000]	[L1: 5.7640]	72.4+0.0s
[4800/16000]	[L1: 5.8153]	72.4+0.0s
[6400/16000]	[L1: 5.7842]	72.6+0.0s
[8000/16000]	[L1: 5.7627]	72.6+0.0s
[9600/16000]	[L1: 5.7071]	72.5+0.0s
[11200/16000]	[L1: 5.7331]	72.3+0.0s
[12800/16000]	[L1: 5.7325]	72.1+0.0s
[14400/16000]	[L1: 5.7153]	72.1+0.0s
[16000/16000]	[L1: 5.7380]	72.0+0.0s
[Epoch 645]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6850]	72.7+0.4s
[3200/16000]	[L1: 5.7342]	72.7+0.0s
[4800/16000]	[L1: 5.7425]	73.2+0.0s
[6400/16000]	[L1: 5.7002]	73.2+0.0s
[8000/16000]	[L1: 5.7367]	73.1+0.0s
[9600/16000]	[L1: 5.7643]	72.6+0.0s
[11200/16000]	[L1: 5.7757]	72.2+0.0s
[12800/16000]	[L1: 5.7580]	72.0+0.0s
[14400/16000]	[L1: 5.7346]	72.3+0.0s
[16000/16000]	[L1: 5.7565]	72.1+0.0s
[Epoch 646]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6518]	72.2+0.4s
[3200/16000]	[L1: 5.7796]	72.7+0.0s
[4800/16000]	[L1: 5.7157]	72.0+0.0s
[6400/16000]	[L1: 5.7486]	72.2+0.0s
[8000/16000]	[L1: 5.7813]	72.3+0.0s
[9600/16000]	[L1: 5.7889]	72.5+0.0s
[11200/16000]	[L1: 5.8295]	72.5+0.0s
[12800/16000]	[L1: 5.8325]	72.2+0.0s
[14400/16000]	[L1: 5.8386]	72.0+0.0s
[16000/16000]	[L1: 5.8170]	71.7+0.0s
[Epoch 647]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6432]	72.6+0.4s
[3200/16000]	[L1: 5.7356]	72.2+0.0s
[4800/16000]	[L1: 5.8007]	72.1+0.0s
[6400/16000]	[L1: 5.7908]	72.2+0.0s
[8000/16000]	[L1: 5.7994]	72.1+0.0s
[9600/16000]	[L1: 5.7922]	72.2+0.0s
[11200/16000]	[L1: 5.7759]	72.2+0.0s
[12800/16000]	[L1: 5.7689]	72.1+0.0s
[14400/16000]	[L1: 5.7842]	72.4+0.0s
[16000/16000]	[L1: 5.7778]	72.3+0.0s
[Epoch 648]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7493]	73.3+0.4s
[3200/16000]	[L1: 5.6870]	72.3+0.0s
[4800/16000]	[L1: 5.6145]	72.0+0.0s
[6400/16000]	[L1: 5.6182]	71.9+0.0s
[8000/16000]	[L1: 5.6725]	72.0+0.0s
[9600/16000]	[L1: 5.7244]	72.2+0.0s
[11200/16000]	[L1: 5.7386]	72.6+0.0s
[12800/16000]	[L1: 5.7177]	73.1+0.0s
[14400/16000]	[L1: 5.7405]	73.0+0.0s
[16000/16000]	[L1: 5.7436]	72.6+0.0s
[Epoch 649]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8159]	72.9+0.4s
[3200/16000]	[L1: 5.8750]	72.1+0.0s
[4800/16000]	[L1: 5.8501]	72.1+0.0s
[6400/16000]	[L1: 5.8179]	72.8+0.0s
[8000/16000]	[L1: 5.7958]	72.8+0.0s
[9600/16000]	[L1: 5.7721]	72.7+0.0s
[11200/16000]	[L1: 5.7524]	72.7+0.0s
[12800/16000]	[L1: 5.7642]	72.9+0.0s
[14400/16000]	[L1: 5.7663]	72.7+0.0s
[16000/16000]	[L1: 5.7534]	72.6+0.0s
[Epoch 650]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5529]	73.0+0.4s
[3200/16000]	[L1: 5.6688]	72.8+0.0s
[4800/16000]	[L1: 5.7218]	72.9+0.0s
[6400/16000]	[L1: 5.7557]	73.1+0.0s
[8000/16000]	[L1: 5.7440]	72.8+0.0s
[9600/16000]	[L1: 5.7310]	72.8+0.0s
[11200/16000]	[L1: 5.7574]	72.8+0.0s
[12800/16000]	[L1: 5.7520]	72.8+0.0s
[14400/16000]	[L1: 5.7628]	72.7+0.0s
[16000/16000]	[L1: 5.7571]	72.8+0.0s
[Epoch 651]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9579]	73.1+0.5s
[3200/16000]	[L1: 5.9443]	72.8+0.0s
[4800/16000]	[L1: 5.8115]	72.6+0.0s
[6400/16000]	[L1: 5.8217]	72.6+0.0s
[8000/16000]	[L1: 5.8098]	72.7+0.0s
[9600/16000]	[L1: 5.7680]	72.4+0.0s
[11200/16000]	[L1: 5.7708]	72.9+0.0s
[12800/16000]	[L1: 5.7530]	73.2+0.0s
[14400/16000]	[L1: 5.7718]	73.2+0.0s
[16000/16000]	[L1: 5.7904]	73.3+0.0s
[Epoch 652]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8941]	73.3+0.4s
[3200/16000]	[L1: 5.8208]	73.0+0.0s
[4800/16000]	[L1: 5.7941]	73.1+0.0s
[6400/16000]	[L1: 5.7744]	73.0+0.0s
[8000/16000]	[L1: 5.7904]	73.2+0.0s
[9600/16000]	[L1: 5.7958]	73.1+0.0s
[11200/16000]	[L1: 5.7954]	73.1+0.0s
[12800/16000]	[L1: 5.7778]	73.3+0.0s
[14400/16000]	[L1: 5.8021]	73.1+0.0s
[16000/16000]	[L1: 5.8024]	73.1+0.0s
[Epoch 653]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7488]	73.2+0.4s
[3200/16000]	[L1: 5.7702]	73.1+0.0s
[4800/16000]	[L1: 5.7824]	73.1+0.0s
[6400/16000]	[L1: 5.7704]	73.0+0.0s
[8000/16000]	[L1: 5.7796]	73.2+0.0s
[9600/16000]	[L1: 5.8070]	73.2+0.0s
[11200/16000]	[L1: 5.8111]	73.1+0.0s
[12800/16000]	[L1: 5.8058]	73.1+0.0s
[14400/16000]	[L1: 5.7775]	72.9+0.0s
[16000/16000]	[L1: 5.7642]	72.8+0.0s
[Epoch 654]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8078]	73.1+0.4s
[3200/16000]	[L1: 5.8414]	73.1+0.0s
[4800/16000]	[L1: 5.8539]	73.1+0.0s
[6400/16000]	[L1: 5.8169]	73.0+0.0s
[8000/16000]	[L1: 5.8386]	73.1+0.0s
[9600/16000]	[L1: 5.8469]	72.8+0.0s
[11200/16000]	[L1: 5.8343]	72.8+0.0s
[12800/16000]	[L1: 5.8136]	72.9+0.0s
[14400/16000]	[L1: 5.8270]	72.9+0.0s
[16000/16000]	[L1: 5.8213]	72.9+0.0s
[Epoch 655]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7872]	73.0+0.4s
[3200/16000]	[L1: 5.7783]	73.0+0.0s
[4800/16000]	[L1: 5.7937]	73.3+0.0s
[6400/16000]	[L1: 5.7942]	73.0+0.0s
[8000/16000]	[L1: 5.7977]	73.3+0.0s
[9600/16000]	[L1: 5.8443]	73.0+0.0s
[11200/16000]	[L1: 5.8223]	73.1+0.0s
[12800/16000]	[L1: 5.8127]	73.0+0.0s
[14400/16000]	[L1: 5.8100]	73.1+0.0s
[16000/16000]	[L1: 5.8104]	73.1+0.0s
[Epoch 656]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8846]	73.4+0.4s
[3200/16000]	[L1: 5.8318]	73.1+0.0s
[4800/16000]	[L1: 5.8531]	73.0+0.0s
[6400/16000]	[L1: 5.8114]	73.1+0.0s
[8000/16000]	[L1: 5.8308]	73.1+0.0s
[9600/16000]	[L1: 5.8243]	73.0+0.0s
[11200/16000]	[L1: 5.7991]	73.1+0.0s
[12800/16000]	[L1: 5.7864]	73.0+0.0s
[14400/16000]	[L1: 5.7923]	73.1+0.0s
[16000/16000]	[L1: 5.7843]	73.1+0.0s
[Epoch 657]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5299]	72.7+0.4s
[3200/16000]	[L1: 5.6334]	72.7+0.0s
[4800/16000]	[L1: 5.7522]	72.7+0.0s
[6400/16000]	[L1: 5.7890]	73.1+0.0s
[8000/16000]	[L1: 5.7840]	73.0+0.0s
[9600/16000]	[L1: 5.7795]	73.1+0.0s
[11200/16000]	[L1: 5.7799]	73.2+0.0s
[12800/16000]	[L1: 5.7832]	72.9+0.0s
[14400/16000]	[L1: 5.7794]	72.9+0.0s
[16000/16000]	[L1: 5.8061]	72.9+0.0s
[Epoch 658]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7176]	73.2+0.4s
[3200/16000]	[L1: 5.6970]	72.9+0.0s
[4800/16000]	[L1: 5.7638]	72.8+0.0s
[6400/16000]	[L1: 5.7737]	72.9+0.0s
[8000/16000]	[L1: 5.7815]	72.8+0.0s
[9600/16000]	[L1: 5.7811]	73.1+0.0s
[11200/16000]	[L1: 5.7625]	72.9+0.0s
[12800/16000]	[L1: 5.7428]	72.7+0.0s
[14400/16000]	[L1: 5.7398]	72.9+0.0s
[16000/16000]	[L1: 5.7465]	72.7+0.0s
[Epoch 659]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7934]	73.1+0.5s
[3200/16000]	[L1: 5.7937]	72.9+0.0s
[4800/16000]	[L1: 5.8553]	72.9+0.0s
[6400/16000]	[L1: 5.8466]	72.8+0.0s
[8000/16000]	[L1: 5.8089]	72.0+0.0s
[9600/16000]	[L1: 5.8191]	72.2+0.0s
[11200/16000]	[L1: 5.8120]	72.4+0.0s
[12800/16000]	[L1: 5.7765]	72.7+0.0s
[14400/16000]	[L1: 5.7687]	72.8+0.0s
[16000/16000]	[L1: 5.7605]	72.4+0.0s
[Epoch 660]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8363]	72.9+0.4s
[3200/16000]	[L1: 5.7094]	72.4+0.0s
[4800/16000]	[L1: 5.7345]	72.5+0.0s
[6400/16000]	[L1: 5.7659]	72.9+0.0s
[8000/16000]	[L1: 5.7333]	72.4+0.0s
[9600/16000]	[L1: 5.7668]	72.4+0.0s
[11200/16000]	[L1: 5.7685]	72.3+0.0s
[12800/16000]	[L1: 5.7956]	72.4+0.0s
[14400/16000]	[L1: 5.7769]	72.4+0.0s
[16000/16000]	[L1: 5.7758]	72.3+0.0s
[Epoch 661]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8279]	72.3+0.4s
[3200/16000]	[L1: 5.7749]	72.2+0.0s
[4800/16000]	[L1: 5.7728]	72.2+0.0s
[6400/16000]	[L1: 5.7688]	72.1+0.0s
[8000/16000]	[L1: 5.7513]	72.1+0.0s
[9600/16000]	[L1: 5.7561]	72.3+0.0s
[11200/16000]	[L1: 5.7581]	72.2+0.0s
[12800/16000]	[L1: 5.7630]	72.3+0.0s
[14400/16000]	[L1: 5.7851]	72.3+0.0s
[16000/16000]	[L1: 5.7800]	72.1+0.0s
[Epoch 662]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7515]	72.7+0.4s
[3200/16000]	[L1: 5.7894]	72.4+0.0s
[4800/16000]	[L1: 5.7669]	72.6+0.0s
[6400/16000]	[L1: 5.7751]	73.0+0.0s
[8000/16000]	[L1: 5.7800]	72.7+0.0s
[9600/16000]	[L1: 5.7980]	72.8+0.0s
[11200/16000]	[L1: 5.7819]	72.8+0.0s
[12800/16000]	[L1: 5.7631]	72.4+0.0s
[14400/16000]	[L1: 5.7699]	72.1+0.0s
[16000/16000]	[L1: 5.7729]	72.2+0.0s
[Epoch 663]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8092]	72.8+0.4s
[3200/16000]	[L1: 5.8064]	73.1+0.0s
[4800/16000]	[L1: 5.7724]	73.1+0.0s
[6400/16000]	[L1: 5.7766]	73.1+0.0s
[8000/16000]	[L1: 5.8034]	73.2+0.0s
[9600/16000]	[L1: 5.7674]	73.1+0.0s
[11200/16000]	[L1: 5.7643]	73.0+0.0s
[12800/16000]	[L1: 5.7753]	73.2+0.0s
[14400/16000]	[L1: 5.7798]	73.0+0.0s
[16000/16000]	[L1: 5.7797]	73.1+0.0s
[Epoch 664]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6282]	73.9+0.4s
[3200/16000]	[L1: 5.6837]	73.6+0.0s
[4800/16000]	[L1: 5.7021]	73.6+0.0s
[6400/16000]	[L1: 5.7228]	73.3+0.0s
[8000/16000]	[L1: 5.7305]	73.3+0.0s
[9600/16000]	[L1: 5.7211]	73.2+0.0s
[11200/16000]	[L1: 5.7275]	73.1+0.0s
[12800/16000]	[L1: 5.7447]	73.1+0.0s
[14400/16000]	[L1: 5.7612]	73.0+0.0s
[16000/16000]	[L1: 5.7601]	73.1+0.0s
[Epoch 665]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7772]	73.3+0.4s
[3200/16000]	[L1: 5.8663]	73.3+0.0s
[4800/16000]	[L1: 5.8354]	73.1+0.0s
[6400/16000]	[L1: 5.8010]	73.1+0.0s
[8000/16000]	[L1: 5.7765]	73.1+0.0s
[9600/16000]	[L1: 5.7694]	73.2+0.0s
[11200/16000]	[L1: 5.7912]	73.1+0.0s
[12800/16000]	[L1: 5.7718]	73.2+0.0s
[14400/16000]	[L1: 5.7476]	73.1+0.0s
[16000/16000]	[L1: 5.7702]	73.3+0.0s
[Epoch 666]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8169]	73.4+0.4s
[3200/16000]	[L1: 5.8045]	73.1+0.0s
[4800/16000]	[L1: 5.7449]	73.2+0.0s
[6400/16000]	[L1: 5.7996]	73.2+0.0s
[8000/16000]	[L1: 5.7911]	73.1+0.0s
[9600/16000]	[L1: 5.8076]	73.1+0.0s
[11200/16000]	[L1: 5.7834]	73.2+0.0s
[12800/16000]	[L1: 5.7540]	73.3+0.0s
[14400/16000]	[L1: 5.7802]	73.1+0.0s
[16000/16000]	[L1: 5.7652]	73.1+0.0s
[Epoch 667]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8371]	73.2+0.4s
[3200/16000]	[L1: 5.8165]	73.1+0.0s
[4800/16000]	[L1: 5.7943]	72.9+0.0s
[6400/16000]	[L1: 5.8384]	73.0+0.0s
[8000/16000]	[L1: 5.8476]	72.8+0.0s
[9600/16000]	[L1: 5.8159]	72.2+0.0s
[11200/16000]	[L1: 5.7714]	72.3+0.0s
[12800/16000]	[L1: 5.7842]	72.2+0.0s
[14400/16000]	[L1: 5.7862]	73.0+0.0s
[16000/16000]	[L1: 5.7742]	73.0+0.0s
[Epoch 668]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0646]	72.2+0.4s
[3200/16000]	[L1: 5.9777]	72.2+0.0s
[4800/16000]	[L1: 5.9915]	72.1+0.0s
[6400/16000]	[L1: 5.9003]	72.3+0.0s
[8000/16000]	[L1: 5.8211]	73.1+0.0s
[9600/16000]	[L1: 5.8255]	73.0+0.0s
[11200/16000]	[L1: 5.8296]	72.9+0.0s
[12800/16000]	[L1: 5.8098]	72.5+0.0s
[14400/16000]	[L1: 5.8307]	72.7+0.0s
[16000/16000]	[L1: 5.8363]	72.6+0.0s
[Epoch 669]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8584]	73.1+0.4s
[3200/16000]	[L1: 5.7708]	72.8+0.0s
[4800/16000]	[L1: 5.7555]	72.7+0.0s
[6400/16000]	[L1: 5.7800]	72.4+0.0s
[8000/16000]	[L1: 5.7945]	72.3+0.0s
[9600/16000]	[L1: 5.7843]	73.1+0.0s
[11200/16000]	[L1: 5.7675]	73.1+0.0s
[12800/16000]	[L1: 5.7637]	73.0+0.0s
[14400/16000]	[L1: 5.7493]	73.1+0.0s
[16000/16000]	[L1: 5.7712]	72.9+0.0s
[Epoch 670]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6273]	72.5+0.4s
[3200/16000]	[L1: 5.6919]	72.2+0.0s
[4800/16000]	[L1: 5.7242]	72.1+0.0s
[6400/16000]	[L1: 5.7424]	72.2+0.0s
[8000/16000]	[L1: 5.7375]	72.2+0.0s
[9600/16000]	[L1: 5.7797]	72.1+0.0s
[11200/16000]	[L1: 5.7795]	72.5+0.0s
[12800/16000]	[L1: 5.7723]	72.4+0.0s
[14400/16000]	[L1: 5.7477]	72.4+0.0s
[16000/16000]	[L1: 5.7412]	72.2+0.0s
[Epoch 671]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6499]	72.2+0.4s
[3200/16000]	[L1: 5.8343]	72.3+0.0s
[4800/16000]	[L1: 5.7664]	72.1+0.0s
[6400/16000]	[L1: 5.7432]	72.1+0.0s
[8000/16000]	[L1: 5.7011]	72.1+0.0s
[9600/16000]	[L1: 5.7326]	72.2+0.0s
[11200/16000]	[L1: 5.7840]	72.2+0.0s
[12800/16000]	[L1: 5.7927]	72.2+0.0s
[14400/16000]	[L1: 5.7754]	72.2+0.0s
[16000/16000]	[L1: 5.7869]	72.6+0.0s
[Epoch 672]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9120]	73.3+0.4s
[3200/16000]	[L1: 5.7326]	73.0+0.0s
[4800/16000]	[L1: 5.7033]	72.8+0.0s
[6400/16000]	[L1: 5.7915]	72.8+0.0s
[8000/16000]	[L1: 5.7957]	72.3+0.0s
[9600/16000]	[L1: 5.8223]	72.8+0.0s
[11200/16000]	[L1: 5.7938]	72.7+0.0s
[12800/16000]	[L1: 5.8110]	73.1+0.0s
[14400/16000]	[L1: 5.7924]	72.7+0.0s
[16000/16000]	[L1: 5.7762]	72.8+0.0s
[Epoch 673]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6659]	73.1+0.4s
[3200/16000]	[L1: 5.6965]	72.7+0.0s
[4800/16000]	[L1: 5.7756]	72.6+0.0s
[6400/16000]	[L1: 5.7671]	72.8+0.0s
[8000/16000]	[L1: 5.7572]	72.8+0.0s
[9600/16000]	[L1: 5.7908]	72.6+0.0s
[11200/16000]	[L1: 5.7960]	72.7+0.0s
[12800/16000]	[L1: 5.8020]	73.3+0.0s
[14400/16000]	[L1: 5.8041]	73.3+0.0s
[16000/16000]	[L1: 5.7820]	73.0+0.0s
[Epoch 674]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6723]	73.4+0.4s
[3200/16000]	[L1: 5.6599]	73.2+0.0s
[4800/16000]	[L1: 5.7880]	72.8+0.0s
[6400/16000]	[L1: 5.8017]	73.2+0.0s
[8000/16000]	[L1: 5.7961]	72.4+0.0s
[9600/16000]	[L1: 5.7887]	72.3+0.0s
[11200/16000]	[L1: 5.7523]	72.1+0.0s
[12800/16000]	[L1: 5.7594]	72.2+0.0s
[14400/16000]	[L1: 5.7678]	72.7+0.0s
[16000/16000]	[L1: 5.7638]	72.9+0.0s
[Epoch 675]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7909]	72.9+0.4s
[3200/16000]	[L1: 5.7366]	72.3+0.0s
[4800/16000]	[L1: 5.7418]	72.4+0.0s
[6400/16000]	[L1: 5.8082]	72.5+0.0s
[8000/16000]	[L1: 5.7863]	72.2+0.0s
[9600/16000]	[L1: 5.7951]	72.3+0.0s
[11200/16000]	[L1: 5.8235]	72.4+0.0s
[12800/16000]	[L1: 5.7978]	72.3+0.0s
[14400/16000]	[L1: 5.7924]	72.4+0.0s
[16000/16000]	[L1: 5.7822]	72.0+0.0s
[Epoch 676]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.4282]	72.5+0.5s
[3200/16000]	[L1: 5.6345]	72.2+0.0s
[4800/16000]	[L1: 5.6185]	72.4+0.0s
[6400/16000]	[L1: 5.6480]	72.2+0.0s
[8000/16000]	[L1: 5.6808]	72.4+0.0s
[9600/16000]	[L1: 5.6541]	72.3+0.0s
[11200/16000]	[L1: 5.6981]	72.2+0.0s
[12800/16000]	[L1: 5.7203]	73.1+0.0s
[14400/16000]	[L1: 5.7297]	73.0+0.0s
[16000/16000]	[L1: 5.7396]	73.0+0.0s
[Epoch 677]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6493]	73.0+0.4s
[3200/16000]	[L1: 5.7446]	72.7+0.0s
[4800/16000]	[L1: 5.7388]	72.5+0.0s
[6400/16000]	[L1: 5.7362]	73.0+0.0s
[8000/16000]	[L1: 5.7378]	73.2+0.0s
[9600/16000]	[L1: 5.7502]	72.7+0.0s
[11200/16000]	[L1: 5.7471]	72.5+0.0s
[12800/16000]	[L1: 5.7740]	72.8+0.0s
[14400/16000]	[L1: 5.7772]	72.9+0.0s
[16000/16000]	[L1: 5.7762]	72.6+0.0s
[Epoch 678]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6392]	72.3+0.4s
[3200/16000]	[L1: 5.7870]	72.2+0.0s
[4800/16000]	[L1: 5.8377]	72.6+0.0s
[6400/16000]	[L1: 5.8074]	73.3+0.0s
[8000/16000]	[L1: 5.7890]	73.1+0.0s
[9600/16000]	[L1: 5.7598]	72.6+0.0s
[11200/16000]	[L1: 5.7684]	72.3+0.0s
[12800/16000]	[L1: 5.7756]	72.5+0.0s
[14400/16000]	[L1: 5.7890]	72.2+0.0s
[16000/16000]	[L1: 5.7691]	72.8+0.0s
[Epoch 679]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8793]	72.9+0.4s
[3200/16000]	[L1: 5.8274]	72.6+0.0s
[4800/16000]	[L1: 5.7428]	72.4+0.0s
[6400/16000]	[L1: 5.7838]	72.8+0.0s
[8000/16000]	[L1: 5.7810]	73.2+0.0s
[9600/16000]	[L1: 5.7691]	73.1+0.0s
[11200/16000]	[L1: 5.7953]	73.4+0.0s
[12800/16000]	[L1: 5.8043]	73.1+0.0s
[14400/16000]	[L1: 5.8017]	72.6+0.0s
[16000/16000]	[L1: 5.8197]	72.6+0.0s
[Epoch 680]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5854]	72.3+0.4s
[3200/16000]	[L1: 5.6754]	72.3+0.0s
[4800/16000]	[L1: 5.7128]	72.4+0.0s
[6400/16000]	[L1: 5.7529]	72.5+0.0s
[8000/16000]	[L1: 5.7479]	72.2+0.0s
[9600/16000]	[L1: 5.7617]	72.3+0.0s
[11200/16000]	[L1: 5.7465]	72.5+0.0s
[12800/16000]	[L1: 5.7477]	72.4+0.0s
[14400/16000]	[L1: 5.7664]	72.2+0.0s
[16000/16000]	[L1: 5.7663]	72.4+0.0s
[Epoch 681]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7345]	72.4+0.4s
[3200/16000]	[L1: 5.7717]	72.5+0.0s
[4800/16000]	[L1: 5.7929]	72.9+0.0s
[6400/16000]	[L1: 5.7902]	72.8+0.0s
[8000/16000]	[L1: 5.7838]	73.0+0.0s
[9600/16000]	[L1: 5.7554]	73.0+0.0s
[11200/16000]	[L1: 5.7453]	72.9+0.0s
[12800/16000]	[L1: 5.7514]	72.8+0.0s
[14400/16000]	[L1: 5.7357]	72.9+0.0s
[16000/16000]	[L1: 5.7382]	72.8+0.0s
[Epoch 682]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6950]	73.0+0.4s
[3200/16000]	[L1: 5.7613]	73.0+0.0s
[4800/16000]	[L1: 5.7443]	72.8+0.0s
[6400/16000]	[L1: 5.7808]	73.0+0.0s
[8000/16000]	[L1: 5.7858]	73.0+0.0s
[9600/16000]	[L1: 5.7847]	72.8+0.0s
[11200/16000]	[L1: 5.8130]	73.0+0.0s
[12800/16000]	[L1: 5.8119]	72.8+0.0s
[14400/16000]	[L1: 5.8047]	73.0+0.0s
[16000/16000]	[L1: 5.7845]	72.9+0.0s
[Epoch 683]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5820]	72.9+0.4s
[3200/16000]	[L1: 5.6986]	72.4+0.0s
[4800/16000]	[L1: 5.7235]	72.2+0.0s
[6400/16000]	[L1: 5.7472]	72.1+0.0s
[8000/16000]	[L1: 5.7884]	72.2+0.0s
[9600/16000]	[L1: 5.8164]	72.0+0.0s
[11200/16000]	[L1: 5.8439]	72.0+0.0s
[12800/16000]	[L1: 5.8379]	72.4+0.0s
[14400/16000]	[L1: 5.8186]	72.6+0.0s
[16000/16000]	[L1: 5.8278]	72.5+0.0s
[Epoch 684]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8882]	72.5+0.4s
[3200/16000]	[L1: 5.8945]	72.2+0.0s
[4800/16000]	[L1: 5.8387]	72.1+0.0s
[6400/16000]	[L1: 5.8046]	72.2+0.0s
[8000/16000]	[L1: 5.8003]	72.2+0.0s
[9600/16000]	[L1: 5.8020]	72.1+0.0s
[11200/16000]	[L1: 5.8019]	72.1+0.0s
[12800/16000]	[L1: 5.7701]	72.4+0.0s
[14400/16000]	[L1: 5.7628]	72.3+0.0s
[16000/16000]	[L1: 5.7698]	71.9+0.0s
[Epoch 685]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.4668]	72.4+0.4s
[3200/16000]	[L1: 5.6801]	72.2+0.0s
[4800/16000]	[L1: 5.7032]	72.0+0.0s
[6400/16000]	[L1: 5.6787]	72.6+0.0s
[8000/16000]	[L1: 5.7084]	72.3+0.0s
[9600/16000]	[L1: 5.7364]	72.4+0.0s
[11200/16000]	[L1: 5.7423]	72.4+0.0s
[12800/16000]	[L1: 5.7631]	72.4+0.0s
[14400/16000]	[L1: 5.7883]	72.4+0.0s
[16000/16000]	[L1: 5.7867]	72.3+0.0s
[Epoch 686]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8159]	72.4+0.4s
[3200/16000]	[L1: 5.8521]	72.3+0.0s
[4800/16000]	[L1: 5.8059]	72.3+0.0s
[6400/16000]	[L1: 5.8013]	72.2+0.0s
[8000/16000]	[L1: 5.7308]	72.4+0.0s
[9600/16000]	[L1: 5.7565]	72.7+0.0s
[11200/16000]	[L1: 5.7817]	73.3+0.0s
[12800/16000]	[L1: 5.7679]	73.2+0.0s
[14400/16000]	[L1: 5.7753]	73.1+0.0s
[16000/16000]	[L1: 5.7932]	73.0+0.0s
[Epoch 687]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5897]	73.1+0.4s
[3200/16000]	[L1: 5.6841]	72.7+0.0s
[4800/16000]	[L1: 5.7204]	73.3+0.0s
[6400/16000]	[L1: 5.7393]	73.3+0.0s
[8000/16000]	[L1: 5.7287]	73.2+0.0s
[9600/16000]	[L1: 5.7300]	73.3+0.0s
[11200/16000]	[L1: 5.7407]	73.2+0.0s
[12800/16000]	[L1: 5.7709]	73.3+0.0s
[14400/16000]	[L1: 5.7610]	73.2+0.0s
[16000/16000]	[L1: 5.7734]	73.1+0.0s
[Epoch 688]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9207]	73.8+0.4s
[3200/16000]	[L1: 5.9305]	73.5+0.0s
[4800/16000]	[L1: 5.8361]	73.2+0.0s
[6400/16000]	[L1: 5.8402]	72.7+0.0s
[8000/16000]	[L1: 5.8787]	72.8+0.0s
[9600/16000]	[L1: 5.8384]	73.0+0.0s
[11200/16000]	[L1: 5.8249]	73.0+0.0s
[12800/16000]	[L1: 5.8110]	73.4+0.0s
[14400/16000]	[L1: 5.8007]	72.9+0.0s
[16000/16000]	[L1: 5.7976]	72.8+0.0s
[Epoch 689]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8984]	73.2+0.4s
[3200/16000]	[L1: 5.8452]	72.8+0.0s
[4800/16000]	[L1: 5.7602]	72.9+0.0s
[6400/16000]	[L1: 5.7841]	73.1+0.0s
[8000/16000]	[L1: 5.7843]	73.5+0.0s
[9600/16000]	[L1: 5.7765]	73.6+0.0s
[11200/16000]	[L1: 5.7855]	73.3+0.0s
[12800/16000]	[L1: 5.7611]	73.5+0.0s
[14400/16000]	[L1: 5.7660]	73.3+0.0s
[16000/16000]	[L1: 5.7654]	73.3+0.0s
[Epoch 690]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7736]	74.0+0.4s
[3200/16000]	[L1: 5.7739]	73.9+0.0s
[4800/16000]	[L1: 5.8459]	74.1+0.0s
[6400/16000]	[L1: 5.8557]	73.2+0.0s
[8000/16000]	[L1: 5.7933]	73.0+0.0s
[9600/16000]	[L1: 5.7832]	72.9+0.0s
[11200/16000]	[L1: 5.7831]	73.5+0.0s
[12800/16000]	[L1: 5.7996]	73.5+0.0s
[14400/16000]	[L1: 5.7795]	72.8+0.0s
[16000/16000]	[L1: 5.7733]	72.7+0.0s
[Epoch 691]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8799]	72.6+0.4s
[3200/16000]	[L1: 5.8126]	72.4+0.0s
[4800/16000]	[L1: 5.8042]	73.0+0.0s
[6400/16000]	[L1: 5.7974]	72.4+0.0s
[8000/16000]	[L1: 5.8140]	72.7+0.0s
[9600/16000]	[L1: 5.7965]	72.6+0.0s
[11200/16000]	[L1: 5.7951]	72.6+0.0s
[12800/16000]	[L1: 5.8000]	73.1+0.0s
[14400/16000]	[L1: 5.7804]	73.3+0.0s
[16000/16000]	[L1: 5.7959]	73.4+0.0s
[Epoch 692]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8978]	73.6+0.4s
[3200/16000]	[L1: 5.9002]	73.5+0.0s
[4800/16000]	[L1: 5.9054]	73.7+0.0s
[6400/16000]	[L1: 5.9191]	73.8+0.0s
[8000/16000]	[L1: 5.8629]	73.7+0.0s
[9600/16000]	[L1: 5.8586]	74.0+0.0s
[11200/16000]	[L1: 5.8220]	73.9+0.0s
[12800/16000]	[L1: 5.8016]	74.1+0.0s
[14400/16000]	[L1: 5.8011]	73.9+0.0s
[16000/16000]	[L1: 5.7961]	73.8+0.0s
[Epoch 693]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5305]	73.8+0.4s
[3200/16000]	[L1: 5.6678]	73.7+0.0s
[4800/16000]	[L1: 5.6600]	73.7+0.0s
[6400/16000]	[L1: 5.6784]	73.3+0.0s
[8000/16000]	[L1: 5.7011]	73.6+0.0s
[9600/16000]	[L1: 5.7410]	73.4+0.0s
[11200/16000]	[L1: 5.7505]	73.7+0.0s
[12800/16000]	[L1: 5.7539]	73.6+0.0s
[14400/16000]	[L1: 5.7504]	73.7+0.0s
[16000/16000]	[L1: 5.7534]	74.2+0.0s
[Epoch 694]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8264]	74.2+0.5s
[3200/16000]	[L1: 5.8264]	74.2+0.0s
[4800/16000]	[L1: 5.7687]	74.1+0.0s
[6400/16000]	[L1: 5.7994]	73.9+0.0s
[8000/16000]	[L1: 5.8427]	73.8+0.0s
[9600/16000]	[L1: 5.7972]	73.6+0.0s
[11200/16000]	[L1: 5.7893]	73.7+0.0s
[12800/16000]	[L1: 5.7931]	73.7+0.0s
[14400/16000]	[L1: 5.7677]	75.2+0.0s
[16000/16000]	[L1: 5.7827]	80.9+0.0s
[Epoch 695]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.4714]	76.7+0.4s
[3200/16000]	[L1: 5.6525]	73.6+0.0s
[4800/16000]	[L1: 5.6423]	73.9+0.0s
[6400/16000]	[L1: 5.6992]	80.8+0.0s
[8000/16000]	[L1: 5.7080]	78.4+0.0s
[9600/16000]	[L1: 5.6982]	74.1+0.0s
[11200/16000]	[L1: 5.7323]	74.3+0.0s
[12800/16000]	[L1: 5.7680]	73.4+0.0s
[14400/16000]	[L1: 5.7655]	73.2+0.0s
[16000/16000]	[L1: 5.7445]	73.1+0.0s
[Epoch 696]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7368]	73.4+0.4s
[3200/16000]	[L1: 5.7628]	73.4+0.0s
[4800/16000]	[L1: 5.7632]	73.3+0.0s
[6400/16000]	[L1: 5.7831]	73.8+0.0s
[8000/16000]	[L1: 5.7781]	73.4+0.0s
[9600/16000]	[L1: 5.7712]	74.3+0.0s
[11200/16000]	[L1: 5.7831]	73.2+0.0s
[12800/16000]	[L1: 5.7943]	73.2+0.0s
[14400/16000]	[L1: 5.7899]	73.3+0.0s
[16000/16000]	[L1: 5.8143]	73.5+0.0s
[Epoch 697]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7360]	73.7+0.4s
[3200/16000]	[L1: 5.6900]	73.8+0.0s
[4800/16000]	[L1: 5.7078]	72.9+0.0s
[6400/16000]	[L1: 5.6824]	73.0+0.0s
[8000/16000]	[L1: 5.7127]	73.1+0.0s
[9600/16000]	[L1: 5.7487]	73.1+0.0s
[11200/16000]	[L1: 5.7481]	73.2+0.0s
[12800/16000]	[L1: 5.7444]	72.8+0.0s
[14400/16000]	[L1: 5.7445]	73.6+0.0s
[16000/16000]	[L1: 5.7513]	73.8+0.0s
[Epoch 698]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7596]	74.4+0.4s
[3200/16000]	[L1: 5.7184]	73.7+0.0s
[4800/16000]	[L1: 5.7253]	73.1+0.0s
[6400/16000]	[L1: 5.7445]	73.1+0.0s
[8000/16000]	[L1: 5.7901]	74.0+0.0s
[9600/16000]	[L1: 5.7647]	73.6+0.0s
[11200/16000]	[L1: 5.7705]	72.9+0.0s
[12800/16000]	[L1: 5.7663]	73.4+0.0s
[14400/16000]	[L1: 5.7624]	73.3+0.0s
[16000/16000]	[L1: 5.7684]	73.1+0.0s
[Epoch 699]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7036]	73.6+0.4s
[3200/16000]	[L1: 5.7227]	73.7+0.0s
[4800/16000]	[L1: 5.7162]	73.7+0.0s
[6400/16000]	[L1: 5.7028]	73.7+0.0s
[8000/16000]	[L1: 5.7130]	74.0+0.0s
[9600/16000]	[L1: 5.7355]	73.9+0.0s
[11200/16000]	[L1: 5.7326]	74.0+0.0s
[12800/16000]	[L1: 5.7633]	73.7+0.0s
[14400/16000]	[L1: 5.7795]	73.7+0.0s
[16000/16000]	[L1: 5.7772]	73.5+0.0s
[Epoch 700]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7717]	73.7+0.4s
[3200/16000]	[L1: 5.8191]	73.4+0.0s
[4800/16000]	[L1: 5.7761]	73.5+0.0s
[6400/16000]	[L1: 5.7018]	73.3+0.0s
[8000/16000]	[L1: 5.7240]	74.0+0.0s
[9600/16000]	[L1: 5.7224]	73.7+0.0s
[11200/16000]	[L1: 5.7450]	73.1+0.0s
[12800/16000]	[L1: 5.7414]	72.9+0.0s
[14400/16000]	[L1: 5.7430]	73.4+0.0s
[16000/16000]	[L1: 5.7450]	73.6+0.0s
[Epoch 701]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0211]	74.2+0.4s
[3200/16000]	[L1: 5.9443]	74.0+0.0s
[4800/16000]	[L1: 5.8369]	74.7+0.0s
[6400/16000]	[L1: 5.8045]	74.3+0.0s
[8000/16000]	[L1: 5.7647]	74.1+0.0s
[9600/16000]	[L1: 5.7971]	74.2+0.0s
[11200/16000]	[L1: 5.8002]	73.8+0.0s
[12800/16000]	[L1: 5.7924]	74.1+0.0s
[14400/16000]	[L1: 5.7954]	73.9+0.0s
[16000/16000]	[L1: 5.8100]	74.0+0.0s
[Epoch 702]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7072]	74.0+0.4s
[3200/16000]	[L1: 5.7529]	73.6+0.0s
[4800/16000]	[L1: 5.7857]	73.4+0.0s
[6400/16000]	[L1: 5.7691]	73.6+0.0s
[8000/16000]	[L1: 5.7593]	73.5+0.0s
[9600/16000]	[L1: 5.7218]	73.5+0.0s
[11200/16000]	[L1: 5.7652]	73.6+0.0s
[12800/16000]	[L1: 5.7614]	73.6+0.0s
[14400/16000]	[L1: 5.7599]	73.4+0.0s
[16000/16000]	[L1: 5.7361]	73.3+0.0s
[Epoch 703]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8970]	74.0+0.4s
[3200/16000]	[L1: 5.8868]	73.3+0.0s
[4800/16000]	[L1: 5.9223]	73.4+0.0s
[6400/16000]	[L1: 5.9051]	73.4+0.0s
[8000/16000]	[L1: 5.8578]	73.7+0.0s
[9600/16000]	[L1: 5.8775]	78.8+0.0s
[11200/16000]	[L1: 5.8627]	81.4+0.0s
[12800/16000]	[L1: 5.8576]	74.0+0.0s
[14400/16000]	[L1: 5.8430]	74.2+0.0s
[16000/16000]	[L1: 5.8543]	73.8+0.0s
[Epoch 704]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7654]	74.5+0.5s
[3200/16000]	[L1: 5.6709]	73.5+0.0s
[4800/16000]	[L1: 5.6378]	74.1+0.0s
[6400/16000]	[L1: 5.6557]	73.5+0.0s
[8000/16000]	[L1: 5.7154]	73.4+0.0s
[9600/16000]	[L1: 5.7159]	72.7+0.0s
[11200/16000]	[L1: 5.6968]	72.8+0.0s
[12800/16000]	[L1: 5.7101]	73.6+0.0s
[14400/16000]	[L1: 5.7132]	73.5+0.0s
[16000/16000]	[L1: 5.7224]	73.5+0.0s
[Epoch 705]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8787]	73.2+0.4s
[3200/16000]	[L1: 5.8635]	73.0+0.0s
[4800/16000]	[L1: 5.8343]	73.0+0.0s
[6400/16000]	[L1: 5.8376]	73.0+0.0s
[8000/16000]	[L1: 5.8602]	73.3+0.0s
[9600/16000]	[L1: 5.8138]	73.4+0.0s
[11200/16000]	[L1: 5.8146]	73.5+0.0s
[12800/16000]	[L1: 5.7851]	73.9+0.0s
[14400/16000]	[L1: 5.7999]	73.8+0.0s
[16000/16000]	[L1: 5.7757]	73.9+0.0s
[Epoch 706]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5986]	73.7+0.4s
[3200/16000]	[L1: 5.7385]	73.9+0.0s
[4800/16000]	[L1: 5.7144]	73.5+0.0s
[6400/16000]	[L1: 5.7511]	73.7+0.0s
[8000/16000]	[L1: 5.7537]	73.5+0.0s
[9600/16000]	[L1: 5.7461]	73.8+0.0s
[11200/16000]	[L1: 5.7558]	74.1+0.0s
[12800/16000]	[L1: 5.7529]	74.2+0.0s
[14400/16000]	[L1: 5.7682]	73.9+0.0s
[16000/16000]	[L1: 5.7793]	73.6+0.0s
[Epoch 707]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7393]	73.4+0.4s
[3200/16000]	[L1: 5.7284]	73.1+0.0s
[4800/16000]	[L1: 5.7431]	73.3+0.0s
[6400/16000]	[L1: 5.7127]	74.1+0.0s
[8000/16000]	[L1: 5.7201]	73.3+0.0s
[9600/16000]	[L1: 5.7668]	73.6+0.0s
[11200/16000]	[L1: 5.7636]	73.7+0.0s
[12800/16000]	[L1: 5.7600]	73.9+0.0s
[14400/16000]	[L1: 5.7617]	73.9+0.0s
[16000/16000]	[L1: 5.7651]	74.2+0.0s
[Epoch 708]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6510]	73.9+0.4s
[3200/16000]	[L1: 5.6799]	74.1+0.0s
[4800/16000]	[L1: 5.7210]	73.8+0.0s
[6400/16000]	[L1: 5.7310]	74.1+0.0s
[8000/16000]	[L1: 5.7506]	73.9+0.0s
[9600/16000]	[L1: 5.7395]	73.3+0.0s
[11200/16000]	[L1: 5.7648]	73.5+0.0s
[12800/16000]	[L1: 5.7617]	73.5+0.0s
[14400/16000]	[L1: 5.7686]	73.2+0.0s
[16000/16000]	[L1: 5.7607]	74.3+0.0s
[Epoch 709]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7569]	74.3+0.4s
[3200/16000]	[L1: 5.6957]	73.8+0.0s
[4800/16000]	[L1: 5.7387]	73.7+0.0s
[6400/16000]	[L1: 5.7764]	74.3+0.0s
[8000/16000]	[L1: 5.7897]	74.2+0.0s
[9600/16000]	[L1: 5.7760]	74.2+0.0s
[11200/16000]	[L1: 5.7787]	73.9+0.0s
[12800/16000]	[L1: 5.7688]	73.3+0.0s
[14400/16000]	[L1: 5.7608]	73.5+0.0s
[16000/16000]	[L1: 5.7607]	73.3+0.0s
[Epoch 710]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5607]	73.6+0.4s
[3200/16000]	[L1: 5.6998]	74.5+0.0s
[4800/16000]	[L1: 5.7321]	74.0+0.0s
[6400/16000]	[L1: 5.7089]	73.6+0.0s
[8000/16000]	[L1: 5.7439]	73.6+0.0s
[9600/16000]	[L1: 5.7267]	73.5+0.0s
[11200/16000]	[L1: 5.7398]	73.3+0.0s
[12800/16000]	[L1: 5.7388]	73.2+0.0s
[14400/16000]	[L1: 5.7514]	73.9+0.0s
[16000/16000]	[L1: 5.7608]	73.7+0.0s
[Epoch 711]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8477]	74.6+0.4s
[3200/16000]	[L1: 5.8289]	73.7+0.0s
[4800/16000]	[L1: 5.8435]	73.2+0.0s
[6400/16000]	[L1: 5.8137]	73.8+0.0s
[8000/16000]	[L1: 5.7976]	74.0+0.0s
[9600/16000]	[L1: 5.8142]	73.5+0.0s
[11200/16000]	[L1: 5.8029]	73.3+0.0s
[12800/16000]	[L1: 5.7876]	73.7+0.0s
[14400/16000]	[L1: 5.8134]	74.5+0.0s
[16000/16000]	[L1: 5.7991]	73.5+0.0s
[Epoch 712]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6739]	74.1+0.4s
[3200/16000]	[L1: 5.7022]	73.8+0.0s
[4800/16000]	[L1: 5.7171]	73.3+0.0s
[6400/16000]	[L1: 5.7471]	73.4+0.0s
[8000/16000]	[L1: 5.7737]	73.3+0.0s
[9600/16000]	[L1: 5.7718]	74.5+0.0s
[11200/16000]	[L1: 5.7906]	74.2+0.0s
[12800/16000]	[L1: 5.7830]	74.2+0.0s
[14400/16000]	[L1: 5.7735]	74.3+0.0s
[16000/16000]	[L1: 5.7656]	74.5+0.0s
[Epoch 713]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5173]	74.2+0.4s
[3200/16000]	[L1: 5.7381]	73.3+0.0s
[4800/16000]	[L1: 5.8315]	73.3+0.0s
[6400/16000]	[L1: 5.8217]	73.6+0.0s
[8000/16000]	[L1: 5.8136]	74.2+0.0s
[9600/16000]	[L1: 5.7832]	74.0+0.0s
[11200/16000]	[L1: 5.7964]	73.9+0.0s
[12800/16000]	[L1: 5.7891]	73.8+0.0s
[14400/16000]	[L1: 5.8185]	73.5+0.0s
[16000/16000]	[L1: 5.8027]	73.3+0.0s
[Epoch 714]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6458]	73.9+0.4s
[3200/16000]	[L1: 5.7166]	73.3+0.0s
[4800/16000]	[L1: 5.6945]	73.1+0.0s
[6400/16000]	[L1: 5.7308]	73.3+0.0s
[8000/16000]	[L1: 5.7693]	73.6+0.0s
[9600/16000]	[L1: 5.7736]	74.7+0.0s
[11200/16000]	[L1: 5.7650]	73.9+0.0s
[12800/16000]	[L1: 5.7856]	73.8+0.0s
[14400/16000]	[L1: 5.7809]	73.7+0.0s
[16000/16000]	[L1: 5.7788]	73.6+0.0s
[Epoch 715]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8517]	74.3+0.4s
[3200/16000]	[L1: 5.8558]	74.1+0.0s
[4800/16000]	[L1: 5.8525]	73.4+0.0s
[6400/16000]	[L1: 5.7897]	73.9+0.0s
[8000/16000]	[L1: 5.8023]	74.5+0.0s
[9600/16000]	[L1: 5.8008]	74.6+0.0s
[11200/16000]	[L1: 5.7963]	74.2+0.0s
[12800/16000]	[L1: 5.7924]	74.4+0.0s
[14400/16000]	[L1: 5.7601]	73.6+0.0s
[16000/16000]	[L1: 5.7671]	74.0+0.0s
[Epoch 716]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7579]	73.6+0.4s
[3200/16000]	[L1: 5.7299]	73.4+0.0s
[4800/16000]	[L1: 5.7467]	73.8+0.0s
[6400/16000]	[L1: 5.7326]	73.6+0.0s
[8000/16000]	[L1: 5.7258]	73.7+0.0s
[9600/16000]	[L1: 5.7341]	73.5+0.0s
[11200/16000]	[L1: 5.7219]	73.1+0.0s
[12800/16000]	[L1: 5.7195]	72.8+0.0s
[14400/16000]	[L1: 5.7119]	72.6+0.0s
[16000/16000]	[L1: 5.7232]	73.1+0.0s
[Epoch 717]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0491]	73.6+0.4s
[3200/16000]	[L1: 5.8658]	73.1+0.0s
[4800/16000]	[L1: 5.8086]	73.1+0.0s
[6400/16000]	[L1: 5.8702]	73.2+0.0s
[8000/16000]	[L1: 5.8260]	73.9+0.0s
[9600/16000]	[L1: 5.8321]	73.4+0.0s
[11200/16000]	[L1: 5.8401]	73.3+0.0s
[12800/16000]	[L1: 5.8323]	73.3+0.0s
[14400/16000]	[L1: 5.8160]	73.1+0.0s
[16000/16000]	[L1: 5.8327]	73.3+0.0s
[Epoch 718]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8570]	73.4+0.5s
[3200/16000]	[L1: 5.8676]	73.5+0.0s
[4800/16000]	[L1: 5.8281]	73.3+0.0s
[6400/16000]	[L1: 5.7785]	73.1+0.0s
[8000/16000]	[L1: 5.7512]	73.3+0.0s
[9600/16000]	[L1: 5.7338]	72.7+0.0s
[11200/16000]	[L1: 5.7443]	73.7+0.0s
[12800/16000]	[L1: 5.7490]	73.6+0.0s
[14400/16000]	[L1: 5.7582]	74.0+0.0s
[16000/16000]	[L1: 5.7734]	74.0+0.0s
[Epoch 719]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6905]	73.6+0.4s
[3200/16000]	[L1: 5.6607]	73.3+0.1s
[4800/16000]	[L1: 5.7384]	74.0+0.0s
[6400/16000]	[L1: 5.7694]	73.8+0.0s
[8000/16000]	[L1: 5.7519]	73.8+0.0s
[9600/16000]	[L1: 5.7826]	73.2+0.0s
[11200/16000]	[L1: 5.7701]	73.3+0.0s
[12800/16000]	[L1: 5.7527]	73.6+0.0s
[14400/16000]	[L1: 5.7712]	73.2+0.0s
[16000/16000]	[L1: 5.7484]	73.5+0.0s
[Epoch 720]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.5549]	73.7+0.4s
[3200/16000]	[L1: 5.7054]	74.3+0.0s
[4800/16000]	[L1: 5.7708]	73.6+0.0s
[6400/16000]	[L1: 5.7821]	73.5+0.0s
[8000/16000]	[L1: 5.7855]	73.7+0.0s
[9600/16000]	[L1: 5.7724]	73.2+0.0s
[11200/16000]	[L1: 5.7447]	73.6+0.0s
[12800/16000]	[L1: 5.7551]	73.4+0.0s
[14400/16000]	[L1: 5.7553]	73.1+0.0s
[16000/16000]	[L1: 5.7534]	73.0+0.0s
[Epoch 721]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7449]	73.8+0.5s
[3200/16000]	[L1: 5.8552]	73.7+0.0s
[4800/16000]	[L1: 5.8115]	73.3+0.0s
[6400/16000]	[L1: 5.7789]	73.4+0.0s
[8000/16000]	[L1: 5.7716]	73.6+0.0s
[9600/16000]	[L1: 5.7652]	73.7+0.0s
[11200/16000]	[L1: 5.7569]	73.6+0.0s
[12800/16000]	[L1: 5.7632]	73.8+0.0s
[14400/16000]	[L1: 5.7542]	73.7+0.0s
[16000/16000]	[L1: 5.7497]	74.1+0.1s
[Epoch 722]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8519]	73.8+0.4s
[3200/16000]	[L1: 5.8231]	73.7+0.0s
[4800/16000]	[L1: 5.8114]	73.3+0.0s
[6400/16000]	[L1: 5.8026]	73.7+0.0s
[8000/16000]	[L1: 5.7623]	73.8+0.0s
[9600/16000]	[L1: 5.7709]	73.5+0.0s
[11200/16000]	[L1: 5.7725]	73.7+0.0s
[12800/16000]	[L1: 5.7877]	74.0+0.0s
[14400/16000]	[L1: 5.7725]	73.9+0.0s
[16000/16000]	[L1: 5.7635]	73.9+0.0s
[Epoch 723]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7600]	74.0+0.4s
[3200/16000]	[L1: 5.7496]	74.2+0.0s
[4800/16000]	[L1: 5.7207]	74.4+0.0s
[6400/16000]	[L1: 5.7347]	74.3+0.0s
[8000/16000]	[L1: 5.7411]	73.4+0.0s
[9600/16000]	[L1: 5.7494]	73.0+0.0s
[11200/16000]	[L1: 5.7336]	73.4+0.0s
[12800/16000]	[L1: 5.7637]	73.1+0.0s
[14400/16000]	[L1: 5.7494]	73.4+0.0s
[16000/16000]	[L1: 5.7571]	73.4+0.0s
[Epoch 724]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9351]	73.5+0.4s
[3200/16000]	[L1: 5.9082]	73.1+0.0s
[4800/16000]	[L1: 5.7987]	73.4+0.0s
[6400/16000]	[L1: 5.8040]	73.8+0.0s
[8000/16000]	[L1: 5.7884]	73.8+0.0s
[9600/16000]	[L1: 5.7942]	73.8+0.0s
[11200/16000]	[L1: 5.7801]	74.3+0.0s
[12800/16000]	[L1: 5.7824]	74.0+0.0s
[14400/16000]	[L1: 5.7864]	73.9+0.0s
[16000/16000]	[L1: 5.7796]	73.6+0.0s
[Epoch 725]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6490]	73.5+0.4s
[3200/16000]	[L1: 5.7253]	72.6+0.0s
[4800/16000]	[L1: 5.7324]	72.3+0.0s
[6400/16000]	[L1: 5.7160]	72.3+0.0s
[8000/16000]	[L1: 5.7447]	72.3+0.0s
[9600/16000]	[L1: 5.7895]	72.7+0.0s
[11200/16000]	[L1: 5.7713]	72.8+0.0s
[12800/16000]	[L1: 5.8024]	72.4+0.0s
[14400/16000]	[L1: 5.8152]	73.4+0.0s
[16000/16000]	[L1: 5.7973]	73.2+0.0s
[Epoch 726]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9698]	73.6+0.4s
[3200/16000]	[L1: 5.8601]	73.4+0.0s
[4800/16000]	[L1: 5.9254]	73.5+0.0s
[6400/16000]	[L1: 5.8439]	73.4+0.0s
[8000/16000]	[L1: 5.8333]	73.5+0.0s
[9600/16000]	[L1: 5.8534]	73.3+0.0s
[11200/16000]	[L1: 5.8361]	73.2+0.0s
[12800/16000]	[L1: 5.8291]	73.4+0.0s
[14400/16000]	[L1: 5.8175]	73.5+0.0s
[16000/16000]	[L1: 5.8122]	74.2+0.0s
[Epoch 727]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8142]	73.4+0.4s
[3200/16000]	[L1: 5.7122]	73.3+0.0s
[4800/16000]	[L1: 5.6988]	73.7+0.0s
[6400/16000]	[L1: 5.7162]	73.4+0.0s
[8000/16000]	[L1: 5.7388]	73.4+0.0s
[9600/16000]	[L1: 5.7585]	73.4+0.0s
[11200/16000]	[L1: 5.7657]	73.3+0.0s
[12800/16000]	[L1: 5.7414]	73.3+0.0s
[14400/16000]	[L1: 5.7402]	73.1+0.0s
[16000/16000]	[L1: 5.7601]	73.0+0.0s
[Epoch 728]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6918]	73.3+0.4s
[3200/16000]	[L1: 5.7107]	73.2+0.0s
[4800/16000]	[L1: 5.7333]	73.1+0.0s
[6400/16000]	[L1: 5.7339]	72.6+0.0s
[8000/16000]	[L1: 5.7360]	72.2+0.0s
[9600/16000]	[L1: 5.7426]	73.1+0.0s
[11200/16000]	[L1: 5.7863]	72.9+0.0s
[12800/16000]	[L1: 5.7775]	73.1+0.0s
[14400/16000]	[L1: 5.7888]	72.7+0.0s
[16000/16000]	[L1: 5.8199]	72.7+0.0s
[Epoch 729]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6511]	73.1+0.4s
[3200/16000]	[L1: 5.7237]	73.1+0.0s
[4800/16000]	[L1: 5.7789]	73.1+0.0s
[6400/16000]	[L1: 5.7293]	73.1+0.0s
[8000/16000]	[L1: 5.7166]	73.2+0.0s
[9600/16000]	[L1: 5.7632]	73.4+0.0s
[11200/16000]	[L1: 5.7466]	73.3+0.0s
[12800/16000]	[L1: 5.7687]	73.2+0.0s
[14400/16000]	[L1: 5.7776]	73.1+0.0s
[16000/16000]	[L1: 5.7823]	73.3+0.0s
[Epoch 730]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9392]	73.3+0.4s
[3200/16000]	[L1: 5.8077]	73.1+0.0s
[4800/16000]	[L1: 5.7200]	73.7+0.0s
[6400/16000]	[L1: 5.6998]	73.6+0.0s
[8000/16000]	[L1: 5.7328]	73.8+0.0s
[9600/16000]	[L1: 5.6911]	74.1+0.0s
[11200/16000]	[L1: 5.7034]	73.7+0.0s
[12800/16000]	[L1: 5.7243]	73.7+0.0s
[14400/16000]	[L1: 5.7368]	73.7+0.0s
[16000/16000]	[L1: 5.7480]	73.9+0.0s
[Epoch 731]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7311]	73.7+0.4s
[3200/16000]	[L1: 5.6664]	73.7+0.0s
[4800/16000]	[L1: 5.6657]	74.1+0.0s
[6400/16000]	[L1: 5.6988]	73.7+0.0s
[8000/16000]	[L1: 5.7483]	73.5+0.0s
[9600/16000]	[L1: 5.7630]	73.8+0.0s
[11200/16000]	[L1: 5.7416]	73.7+0.0s
[12800/16000]	[L1: 5.7134]	73.6+0.0s
[14400/16000]	[L1: 5.7025]	73.4+0.0s
[16000/16000]	[L1: 5.7096]	73.6+0.0s
[Epoch 732]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6179]	72.8+0.4s
[3200/16000]	[L1: 5.7350]	72.7+0.0s
[4800/16000]	[L1: 5.7322]	72.4+0.0s
[6400/16000]	[L1: 5.7223]	72.4+0.0s
[8000/16000]	[L1: 5.7349]	72.5+0.0s
[9600/16000]	[L1: 5.7473]	72.6+0.0s
[11200/16000]	[L1: 5.7773]	73.4+0.0s
[12800/16000]	[L1: 5.7477]	73.2+0.0s
[14400/16000]	[L1: 5.7496]	73.4+0.0s
[16000/16000]	[L1: 5.7494]	73.6+0.0s
[Epoch 733]	Learning rate: 2.50e-5
[1600/16000]	[L1: 6.0191]	73.3+0.4s
[3200/16000]	[L1: 5.8688]	73.1+0.0s
[4800/16000]	[L1: 5.8555]	73.1+0.0s
[6400/16000]	[L1: 5.8411]	73.3+0.0s
[8000/16000]	[L1: 5.8251]	73.3+0.0s
[9600/16000]	[L1: 5.7984]	73.1+0.0s
[11200/16000]	[L1: 5.7856]	73.3+0.0s
[12800/16000]	[L1: 5.8144]	73.3+0.0s
[14400/16000]	[L1: 5.7966]	73.3+0.0s
[16000/16000]	[L1: 5.7932]	73.2+0.0s
[Epoch 734]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7044]	73.7+0.4s
[3200/16000]	[L1: 5.6605]	72.5+0.0s
[4800/16000]	[L1: 5.7823]	72.9+0.0s
[6400/16000]	[L1: 5.8199]	73.2+0.0s
[8000/16000]	[L1: 5.8284]	73.2+0.0s
[9600/16000]	[L1: 5.8377]	73.1+0.0s
[11200/16000]	[L1: 5.8211]	73.1+0.0s
[12800/16000]	[L1: 5.8287]	73.2+0.0s
[14400/16000]	[L1: 5.8267]	73.3+0.0s
[16000/16000]	[L1: 5.8359]	73.2+0.0s
[Epoch 735]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.9098]	73.4+0.4s
[3200/16000]	[L1: 5.9072]	73.2+0.0s
[4800/16000]	[L1: 5.8303]	73.4+0.0s
[6400/16000]	[L1: 5.8379]	73.2+0.0s
[8000/16000]	[L1: 5.8238]	73.5+0.0s
[9600/16000]	[L1: 5.8116]	73.1+0.0s
[11200/16000]	[L1: 5.8237]	73.5+0.0s
[12800/16000]	[L1: 5.8022]	73.6+0.0s
[14400/16000]	[L1: 5.8032]	73.8+0.0s
[16000/16000]	[L1: 5.7968]	73.0+0.0s
[Epoch 736]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8160]	72.2+0.4s
[3200/16000]	[L1: 5.8178]	72.4+0.0s
[4800/16000]	[L1: 5.7812]	72.9+0.0s
[6400/16000]	[L1: 5.7634]	73.3+0.0s
[8000/16000]	[L1: 5.7968]	73.2+0.0s
[9600/16000]	[L1: 5.7631]	73.0+0.0s
[11200/16000]	[L1: 5.7567]	73.0+0.0s
[12800/16000]	[L1: 5.7544]	72.6+0.0s
[14400/16000]	[L1: 5.7595]	72.9+0.0s
[16000/16000]	[L1: 5.7515]	73.1+0.0s
[Epoch 737]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8282]	73.4+0.4s
[3200/16000]	[L1: 5.8466]	73.3+0.0s
[4800/16000]	[L1: 5.8432]	73.2+0.0s
[6400/16000]	[L1: 5.8452]	73.3+0.0s
[8000/16000]	[L1: 5.8423]	73.0+0.0s
[9600/16000]	[L1: 5.7904]	73.2+0.0s
[11200/16000]	[L1: 5.8164]	73.0+0.0s
[12800/16000]	[L1: 5.7881]	72.5+0.0s
[14400/16000]	[L1: 5.7545]	72.5+0.0s
[16000/16000]	[L1: 5.7465]	72.2+0.0s
[Epoch 738]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7567]	72.5+0.4s
[3200/16000]	[L1: 5.7441]	73.0+0.0s
[4800/16000]	[L1: 5.8123]	72.5+0.0s
[6400/16000]	[L1: 5.8386]	73.3+0.0s
[8000/16000]	[L1: 5.8875]	73.0+0.0s
[9600/16000]	[L1: 5.8609]	73.2+0.0s
[11200/16000]	[L1: 5.8265]	73.2+0.0s
[12800/16000]	[L1: 5.8036]	72.6+0.0s
[14400/16000]	[L1: 5.7931]	72.3+0.0s
[16000/16000]	[L1: 5.8004]	72.4+0.0s
[Epoch 739]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.8561]	72.3+0.4s
[3200/16000]	[L1: 5.8057]	72.3+0.0s
[4800/16000]	[L1: 5.8043]	72.4+0.0s
[6400/16000]	[L1: 5.7811]	72.6+0.0s
[8000/16000]	[L1: 5.7864]	72.5+0.0s
[9600/16000]	[L1: 5.7456]	72.4+0.0s
[11200/16000]	[L1: 5.7293]	72.2+0.0s
[12800/16000]	[L1: 5.7318]	72.9+0.0s
[14400/16000]	[L1: 5.7715]	72.6+0.0s
[16000/16000]	[L1: 5.7612]	72.7+0.0s
[Epoch 740]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6515]	73.0+0.4s
[3200/16000]	[L1: 5.6645]	73.4+0.0s
[4800/16000]	[L1: 5.7035]	73.2+0.0s
[6400/16000]	[L1: 5.7365]	73.3+0.0s
[8000/16000]	[L1: 5.7174]	73.2+0.0s
[9600/16000]	[L1: 5.7525]	73.2+0.0s
[11200/16000]	[L1: 5.7414]	73.3+0.0s
[12800/16000]	[L1: 5.7568]	73.2+0.0s
[14400/16000]	[L1: 5.7598]	73.4+0.0s
[16000/16000]	[L1: 5.7485]	73.0+0.0s
[Epoch 741]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7404]	73.4+0.4s
[3200/16000]	[L1: 5.7598]	73.1+0.0s
[4800/16000]	[L1: 5.8180]	73.1+0.0s
[6400/16000]	[L1: 5.8403]	72.6+0.0s
[8000/16000]	[L1: 5.8474]	72.3+0.0s
[9600/16000]	[L1: 5.8033]	72.1+0.0s
[11200/16000]	[L1: 5.7985]	72.2+0.0s
[12800/16000]	[L1: 5.7892]	72.2+0.0s
[14400/16000]	[L1: 5.7687]	72.3+0.0s
[16000/16000]	[L1: 5.7787]	72.3+0.0s
[Epoch 742]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7809]	72.6+0.4s
[3200/16000]	[L1: 5.7744]	72.3+0.0s
[4800/16000]	[L1: 5.8562]	73.1+0.0s
[6400/16000]	[L1: 5.8126]	72.6+0.0s
[8000/16000]	[L1: 5.7639]	72.8+0.0s
[9600/16000]	[L1: 5.7797]	72.6+0.0s
[11200/16000]	[L1: 5.7964]	72.8+0.0s
[12800/16000]	[L1: 5.8329]	72.8+0.0s
[14400/16000]	[L1: 5.7978]	72.9+0.0s
[16000/16000]	[L1: 5.7979]	73.1+0.0s
[Epoch 743]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.6839]	73.6+0.5s
[3200/16000]	[L1: 5.6466]	73.3+0.0s
[4800/16000]	[L1: 5.6685]	73.4+0.0s
[6400/16000]	[L1: 5.6770]	73.3+0.0s
[8000/16000]	[L1: 5.6973]	73.4+0.0s
[9600/16000]	[L1: 5.7128]	73.5+0.0s
[11200/16000]	[L1: 5.7328]	73.3+0.0s
[12800/16000]	[L1: 5.7320]	72.9+0.0s
[14400/16000]	[L1: 5.7292]	72.4+0.0s
[16000/16000]	[L1: 5.7250]	73.3+0.0s
[Epoch 744]	Learning rate: 2.50e-5
[1600/16000]	[L1: 5.7543]	72.7+0.4s
[3200/16000]	[L1: 5.7774]	72.5+0.0s
[4800/16000]	[L1: 5.8189]	72.8+0.0s
[6400/16000]	[L1: 5.7662]	73.1+0.0s
[8000/16000]	[L1: 5.7296]	73.2+0.0s
[9600/16000]	[L1: 5.7245]	73.2+0.0s
[11200/16000]	[L1: 5.7148]	73.2+0.0s
[12800/16000]	[L1: 5.7461]	73.1+0.0s
[14400/16000]	[L1: 5.7520]	73.0+0.0s
[16000/16000]	[L1: 5.7438]	73.1+0.0s
[Epoch 745]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8139]	73.0+0.5s
[3200/16000]	[L1: 5.7516]	73.3+0.0s
[4800/16000]	[L1: 5.7094]	73.1+0.0s
[6400/16000]	[L1: 5.7098]	72.6+0.0s
[8000/16000]	[L1: 5.6759]	73.0+0.0s
[9600/16000]	[L1: 5.7229]	73.2+0.0s
[11200/16000]	[L1: 5.7212]	73.3+0.0s
[12800/16000]	[L1: 5.7321]	73.4+0.0s
[14400/16000]	[L1: 5.7280]	73.2+0.0s
[16000/16000]	[L1: 5.7300]	73.3+0.0s
[Epoch 746]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5552]	73.6+0.4s
[3200/16000]	[L1: 5.5776]	73.5+0.0s
[4800/16000]	[L1: 5.5987]	73.2+0.0s
[6400/16000]	[L1: 5.6257]	73.4+0.0s
[8000/16000]	[L1: 5.6791]	73.3+0.0s
[9600/16000]	[L1: 5.6802]	73.5+0.0s
[11200/16000]	[L1: 5.6993]	73.3+0.0s
[12800/16000]	[L1: 5.6968]	72.9+0.0s
[14400/16000]	[L1: 5.7079]	72.5+0.0s
[16000/16000]	[L1: 5.7312]	72.6+0.0s
[Epoch 747]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7772]	73.7+0.4s
[3200/16000]	[L1: 5.7133]	73.7+0.0s
[4800/16000]	[L1: 5.6937]	73.7+0.0s
[6400/16000]	[L1: 5.7338]	73.8+0.0s
[8000/16000]	[L1: 5.7446]	73.5+0.0s
[9600/16000]	[L1: 5.7402]	73.1+0.0s
[11200/16000]	[L1: 5.7358]	73.2+0.0s
[12800/16000]	[L1: 5.7436]	73.6+0.0s
[14400/16000]	[L1: 5.7415]	73.2+0.0s
[16000/16000]	[L1: 5.7411]	73.3+0.0s
[Epoch 748]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7906]	73.5+0.4s
[3200/16000]	[L1: 5.7821]	73.4+0.0s
[4800/16000]	[L1: 5.6937]	73.2+0.0s
[6400/16000]	[L1: 5.7381]	73.0+0.0s
[8000/16000]	[L1: 5.7588]	73.2+0.0s
[9600/16000]	[L1: 5.7328]	73.1+0.0s
[11200/16000]	[L1: 5.7194]	73.1+0.0s
[12800/16000]	[L1: 5.7470]	72.8+0.0s
[14400/16000]	[L1: 5.7448]	73.0+0.0s
[16000/16000]	[L1: 5.7445]	73.0+0.0s
[Epoch 749]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8928]	73.4+0.4s
[3200/16000]	[L1: 5.8420]	73.3+0.0s
[4800/16000]	[L1: 5.8479]	72.2+0.0s
[6400/16000]	[L1: 5.8380]	72.4+0.0s
[8000/16000]	[L1: 5.8045]	72.4+0.0s
[9600/16000]	[L1: 5.7953]	72.4+0.0s
[11200/16000]	[L1: 5.7665]	72.2+0.0s
[12800/16000]	[L1: 5.7652]	72.3+0.0s
[14400/16000]	[L1: 5.7254]	72.3+0.0s
[16000/16000]	[L1: 5.7226]	72.4+0.0s
[Epoch 750]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7043]	72.6+0.4s
[3200/16000]	[L1: 5.7413]	72.5+0.0s
[4800/16000]	[L1: 5.7146]	72.8+0.0s
[6400/16000]	[L1: 5.7303]	72.6+0.0s
[8000/16000]	[L1: 5.7930]	72.6+0.0s
[9600/16000]	[L1: 5.7934]	72.5+0.0s
[11200/16000]	[L1: 5.7999]	72.6+0.0s
[12800/16000]	[L1: 5.8005]	72.4+0.0s
[14400/16000]	[L1: 5.7714]	72.8+0.0s
[16000/16000]	[L1: 5.7602]	73.0+0.0s
[Epoch 751]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.4222]	72.7+0.4s
[3200/16000]	[L1: 5.5838]	72.5+0.0s
[4800/16000]	[L1: 5.6609]	72.4+0.0s
[6400/16000]	[L1: 5.7059]	72.7+0.0s
[8000/16000]	[L1: 5.6948]	72.5+0.0s
[9600/16000]	[L1: 5.6788]	72.4+0.0s
[11200/16000]	[L1: 5.6863]	72.2+0.0s
[12800/16000]	[L1: 5.7026]	72.9+0.0s
[14400/16000]	[L1: 5.6805]	73.3+0.0s
[16000/16000]	[L1: 5.6669]	73.1+0.0s
[Epoch 752]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9444]	73.4+0.4s
[3200/16000]	[L1: 5.9086]	73.1+0.0s
[4800/16000]	[L1: 5.8390]	73.2+0.0s
[6400/16000]	[L1: 5.8075]	73.3+0.0s
[8000/16000]	[L1: 5.7721]	73.1+0.0s
[9600/16000]	[L1: 5.7863]	72.4+0.0s
[11200/16000]	[L1: 5.7696]	73.5+0.0s
[12800/16000]	[L1: 5.7733]	72.7+0.0s
[14400/16000]	[L1: 5.7740]	72.6+0.0s
[16000/16000]	[L1: 5.7676]	72.3+0.0s
[Epoch 753]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7053]	72.6+0.4s
[3200/16000]	[L1: 5.7516]	72.6+0.0s
[4800/16000]	[L1: 5.6971]	72.4+0.0s
[6400/16000]	[L1: 5.7102]	72.7+0.0s
[8000/16000]	[L1: 5.6711]	72.9+0.0s
[9600/16000]	[L1: 5.6812]	73.3+0.0s
[11200/16000]	[L1: 5.6823]	73.0+0.0s
[12800/16000]	[L1: 5.7042]	73.4+0.0s
[14400/16000]	[L1: 5.7084]	73.4+0.0s
[16000/16000]	[L1: 5.6928]	73.1+0.0s
[Epoch 754]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5822]	73.5+0.4s
[3200/16000]	[L1: 5.5365]	73.1+0.0s
[4800/16000]	[L1: 5.6003]	72.9+0.0s
[6400/16000]	[L1: 5.6908]	72.9+0.0s
[8000/16000]	[L1: 5.7023]	72.9+0.0s
[9600/16000]	[L1: 5.6889]	72.4+0.0s
[11200/16000]	[L1: 5.6867]	73.0+0.0s
[12800/16000]	[L1: 5.7137]	73.7+0.0s
[14400/16000]	[L1: 5.7238]	73.0+0.0s
[16000/16000]	[L1: 5.7191]	73.0+0.0s
[Epoch 755]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8141]	73.4+0.4s
[3200/16000]	[L1: 5.8002]	73.2+0.0s
[4800/16000]	[L1: 5.8271]	73.2+0.0s
[6400/16000]	[L1: 5.7765]	73.0+0.0s
[8000/16000]	[L1: 5.7796]	72.9+0.0s
[9600/16000]	[L1: 5.7945]	73.2+0.0s
[11200/16000]	[L1: 5.8045]	73.0+0.0s
[12800/16000]	[L1: 5.8233]	73.4+0.0s
[14400/16000]	[L1: 5.8032]	73.1+0.0s
[16000/16000]	[L1: 5.8109]	73.3+0.0s
[Epoch 756]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9160]	73.2+0.4s
[3200/16000]	[L1: 6.0140]	73.0+0.0s
[4800/16000]	[L1: 5.8770]	73.2+0.0s
[6400/16000]	[L1: 5.8281]	72.9+0.0s
[8000/16000]	[L1: 5.8513]	73.2+0.0s
[9600/16000]	[L1: 5.8118]	73.1+0.0s
[11200/16000]	[L1: 5.7864]	73.2+0.0s
[12800/16000]	[L1: 5.7912]	73.3+0.1s
[14400/16000]	[L1: 5.7898]	73.0+0.0s
[16000/16000]	[L1: 5.7744]	73.3+0.0s
[Epoch 757]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9376]	73.2+0.4s
[3200/16000]	[L1: 5.7736]	73.4+0.0s
[4800/16000]	[L1: 5.7608]	73.1+0.0s
[6400/16000]	[L1: 5.7121]	73.1+0.0s
[8000/16000]	[L1: 5.7302]	73.0+0.0s
[9600/16000]	[L1: 5.7649]	73.2+0.0s
[11200/16000]	[L1: 5.7544]	73.2+0.0s
[12800/16000]	[L1: 5.7462]	73.1+0.0s
[14400/16000]	[L1: 5.7540]	73.0+0.0s
[16000/16000]	[L1: 5.7606]	73.1+0.0s
[Epoch 758]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7173]	73.4+0.4s
[3200/16000]	[L1: 5.7389]	73.0+0.0s
[4800/16000]	[L1: 5.7888]	73.1+0.0s
[6400/16000]	[L1: 5.8332]	72.5+0.0s
[8000/16000]	[L1: 5.8519]	72.6+0.0s
[9600/16000]	[L1: 5.8581]	72.7+0.0s
[11200/16000]	[L1: 5.8536]	72.6+0.0s
[12800/16000]	[L1: 5.8234]	72.5+0.0s
[14400/16000]	[L1: 5.8351]	72.7+0.0s
[16000/16000]	[L1: 5.8162]	72.8+0.0s
[Epoch 759]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8896]	72.8+0.4s
[3200/16000]	[L1: 5.8287]	72.6+0.0s
[4800/16000]	[L1: 5.7798]	73.4+0.0s
[6400/16000]	[L1: 5.7734]	73.5+0.0s
[8000/16000]	[L1: 5.7695]	73.3+0.0s
[9600/16000]	[L1: 5.7670]	73.2+0.0s
[11200/16000]	[L1: 5.7680]	73.5+0.0s
[12800/16000]	[L1: 5.7747]	73.1+0.0s
[14400/16000]	[L1: 5.7500]	73.3+0.0s
[16000/16000]	[L1: 5.7474]	72.4+0.0s
[Epoch 760]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9145]	72.5+0.4s
[3200/16000]	[L1: 5.9496]	72.9+0.0s
[4800/16000]	[L1: 5.8862]	73.5+0.0s
[6400/16000]	[L1: 5.8451]	73.5+0.0s
[8000/16000]	[L1: 5.8251]	73.7+0.0s
[9600/16000]	[L1: 5.8326]	73.8+0.0s
[11200/16000]	[L1: 5.8218]	73.7+0.0s
[12800/16000]	[L1: 5.7992]	73.7+0.0s
[14400/16000]	[L1: 5.7772]	73.7+0.0s
[16000/16000]	[L1: 5.7915]	73.3+0.0s
[Epoch 761]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7248]	73.3+0.5s
[3200/16000]	[L1: 5.7221]	73.7+0.0s
[4800/16000]	[L1: 5.7709]	73.1+0.0s
[6400/16000]	[L1: 5.7730]	73.2+0.0s
[8000/16000]	[L1: 5.7733]	73.2+0.0s
[9600/16000]	[L1: 5.7650]	73.1+0.0s
[11200/16000]	[L1: 5.7487]	73.5+0.0s
[12800/16000]	[L1: 5.7540]	73.3+0.0s
[14400/16000]	[L1: 5.7531]	73.3+0.0s
[16000/16000]	[L1: 5.7757]	73.1+0.0s
[Epoch 762]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9722]	73.1+0.4s
[3200/16000]	[L1: 5.9334]	72.7+0.0s
[4800/16000]	[L1: 5.8417]	72.7+0.0s
[6400/16000]	[L1: 5.8103]	73.3+0.0s
[8000/16000]	[L1: 5.8043]	73.1+0.0s
[9600/16000]	[L1: 5.7962]	72.6+0.0s
[11200/16000]	[L1: 5.7856]	73.0+0.0s
[12800/16000]	[L1: 5.7723]	73.4+0.0s
[14400/16000]	[L1: 5.7590]	73.5+0.0s
[16000/16000]	[L1: 5.7598]	73.7+0.0s
[Epoch 763]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6948]	73.5+0.5s
[3200/16000]	[L1: 5.8368]	73.4+0.0s
[4800/16000]	[L1: 5.7525]	72.6+0.0s
[6400/16000]	[L1: 5.7296]	72.5+0.0s
[8000/16000]	[L1: 5.7251]	72.4+0.0s
[9600/16000]	[L1: 5.7238]	72.6+0.0s
[11200/16000]	[L1: 5.7331]	72.5+0.0s
[12800/16000]	[L1: 5.7451]	73.1+0.0s
[14400/16000]	[L1: 5.7669]	72.7+0.0s
[16000/16000]	[L1: 5.7696]	72.9+0.0s
[Epoch 764]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9221]	73.5+0.4s
[3200/16000]	[L1: 5.7996]	73.2+0.0s
[4800/16000]	[L1: 5.8095]	73.1+0.0s
[6400/16000]	[L1: 5.8007]	72.8+0.0s
[8000/16000]	[L1: 5.7496]	72.6+0.0s
[9600/16000]	[L1: 5.7568]	72.6+0.0s
[11200/16000]	[L1: 5.7573]	72.5+0.0s
[12800/16000]	[L1: 5.7572]	72.8+0.1s
[14400/16000]	[L1: 5.7570]	73.3+0.0s
[16000/16000]	[L1: 5.7524]	73.2+0.0s
[Epoch 765]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7542]	73.9+0.4s
[3200/16000]	[L1: 5.7245]	73.4+0.0s
[4800/16000]	[L1: 5.7337]	73.5+0.0s
[6400/16000]	[L1: 5.7072]	73.2+0.0s
[8000/16000]	[L1: 5.7304]	73.7+0.0s
[9600/16000]	[L1: 5.7055]	73.4+0.0s
[11200/16000]	[L1: 5.7434]	73.3+0.0s
[12800/16000]	[L1: 5.7544]	73.4+0.0s
[14400/16000]	[L1: 5.7431]	73.2+0.0s
[16000/16000]	[L1: 5.7233]	73.1+0.0s
[Epoch 766]	Learning rate: 1.25e-5
[1600/16000]	[L1: 6.1499]	73.6+0.4s
[3200/16000]	[L1: 5.9446]	73.2+0.0s
[4800/16000]	[L1: 5.8516]	73.5+0.0s
[6400/16000]	[L1: 5.7807]	73.2+0.0s
[8000/16000]	[L1: 5.7671]	73.6+0.0s
[9600/16000]	[L1: 5.7539]	72.4+0.0s
[11200/16000]	[L1: 5.7885]	72.9+0.0s
[12800/16000]	[L1: 5.7798]	72.8+0.0s
[14400/16000]	[L1: 5.7857]	72.2+0.0s
[16000/16000]	[L1: 5.7748]	72.5+0.0s
[Epoch 767]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5525]	73.3+0.4s
[3200/16000]	[L1: 5.7024]	73.1+0.0s
[4800/16000]	[L1: 5.6868]	73.2+0.0s
[6400/16000]	[L1: 5.6873]	73.2+0.0s
[8000/16000]	[L1: 5.6839]	73.7+0.0s
[9600/16000]	[L1: 5.6938]	72.8+0.0s
[11200/16000]	[L1: 5.7123]	72.8+0.0s
[12800/16000]	[L1: 5.7126]	73.0+0.0s
[14400/16000]	[L1: 5.7137]	73.0+0.0s
[16000/16000]	[L1: 5.7039]	73.0+0.0s
[Epoch 768]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7338]	73.2+0.4s
[3200/16000]	[L1: 5.7898]	72.7+0.0s
[4800/16000]	[L1: 5.7331]	73.0+0.0s
[6400/16000]	[L1: 5.7385]	72.6+0.0s
[8000/16000]	[L1: 5.7357]	72.5+0.0s
[9600/16000]	[L1: 5.7213]	72.6+0.0s
[11200/16000]	[L1: 5.7283]	72.5+0.0s
[12800/16000]	[L1: 5.7004]	72.8+0.0s
[14400/16000]	[L1: 5.7408]	72.3+0.0s
[16000/16000]	[L1: 5.7380]	72.6+0.0s
[Epoch 769]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6323]	73.6+0.4s
[3200/16000]	[L1: 5.7137]	73.5+0.0s
[4800/16000]	[L1: 5.6730]	73.5+0.0s
[6400/16000]	[L1: 5.7149]	73.1+0.0s
[8000/16000]	[L1: 5.7321]	73.2+0.0s
[9600/16000]	[L1: 5.7505]	72.4+0.0s
[11200/16000]	[L1: 5.7595]	72.5+0.0s
[12800/16000]	[L1: 5.7520]	72.9+0.0s
[14400/16000]	[L1: 5.7524]	73.0+0.0s
[16000/16000]	[L1: 5.7699]	72.8+0.0s
[Epoch 770]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7953]	73.5+0.4s
[3200/16000]	[L1: 5.7575]	73.3+0.0s
[4800/16000]	[L1: 5.7579]	73.3+0.0s
[6400/16000]	[L1: 5.7458]	73.7+0.0s
[8000/16000]	[L1: 5.7407]	73.2+0.0s
[9600/16000]	[L1: 5.7140]	73.4+0.0s
[11200/16000]	[L1: 5.7356]	73.3+0.0s
[12800/16000]	[L1: 5.7181]	73.6+0.0s
[14400/16000]	[L1: 5.7106]	73.2+0.0s
[16000/16000]	[L1: 5.7080]	73.2+0.0s
[Epoch 771]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8525]	73.2+0.4s
[3200/16000]	[L1: 5.7575]	73.0+0.0s
[4800/16000]	[L1: 5.7471]	73.0+0.0s
[6400/16000]	[L1: 5.7283]	72.9+0.0s
[8000/16000]	[L1: 5.7399]	73.4+0.0s
[9600/16000]	[L1: 5.7592]	73.0+0.0s
[11200/16000]	[L1: 5.7762]	73.2+0.0s
[12800/16000]	[L1: 5.7551]	73.0+0.0s
[14400/16000]	[L1: 5.7685]	73.0+0.0s
[16000/16000]	[L1: 5.7652]	72.9+0.0s
[Epoch 772]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7402]	72.8+0.4s
[3200/16000]	[L1: 5.6957]	72.6+0.0s
[4800/16000]	[L1: 5.7125]	72.3+0.0s
[6400/16000]	[L1: 5.7461]	73.0+0.0s
[8000/16000]	[L1: 5.7357]	73.1+0.0s
[9600/16000]	[L1: 5.7315]	73.5+0.0s
[11200/16000]	[L1: 5.7322]	73.4+0.0s
[12800/16000]	[L1: 5.7221]	73.0+0.0s
[14400/16000]	[L1: 5.7114]	72.6+0.0s
[16000/16000]	[L1: 5.7191]	72.9+0.0s
[Epoch 773]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6139]	73.6+0.4s
[3200/16000]	[L1: 5.5638]	73.3+0.0s
[4800/16000]	[L1: 5.6368]	72.7+0.0s
[6400/16000]	[L1: 5.7263]	72.5+0.0s
[8000/16000]	[L1: 5.7397]	72.5+0.0s
[9600/16000]	[L1: 5.7449]	72.7+0.0s
[11200/16000]	[L1: 5.7566]	73.3+0.0s
[12800/16000]	[L1: 5.7392]	73.1+0.0s
[14400/16000]	[L1: 5.7204]	73.4+0.0s
[16000/16000]	[L1: 5.7143]	73.3+0.0s
[Epoch 774]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7842]	73.5+0.4s
[3200/16000]	[L1: 5.7946]	73.2+0.0s
[4800/16000]	[L1: 5.7830]	73.3+0.0s
[6400/16000]	[L1: 5.7385]	73.2+0.0s
[8000/16000]	[L1: 5.7254]	73.1+0.0s
[9600/16000]	[L1: 5.7475]	73.3+0.0s
[11200/16000]	[L1: 5.7564]	73.2+0.0s
[12800/16000]	[L1: 5.7517]	73.3+0.0s
[14400/16000]	[L1: 5.7574]	73.2+0.0s
[16000/16000]	[L1: 5.7619]	72.7+0.0s
[Epoch 775]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8640]	72.8+0.4s
[3200/16000]	[L1: 5.6529]	72.9+0.0s
[4800/16000]	[L1: 5.6561]	72.6+0.0s
[6400/16000]	[L1: 5.6657]	72.5+0.0s
[8000/16000]	[L1: 5.6602]	72.5+0.0s
[9600/16000]	[L1: 5.7046]	72.9+0.0s
[11200/16000]	[L1: 5.7146]	73.8+0.0s
[12800/16000]	[L1: 5.7242]	73.4+0.0s
[14400/16000]	[L1: 5.7071]	73.5+0.0s
[16000/16000]	[L1: 5.7161]	73.0+0.0s
[Epoch 776]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7908]	73.4+0.4s
[3200/16000]	[L1: 5.7480]	73.3+0.1s
[4800/16000]	[L1: 5.8083]	73.0+0.0s
[6400/16000]	[L1: 5.8112]	72.8+0.0s
[8000/16000]	[L1: 5.7673]	72.3+0.0s
[9600/16000]	[L1: 5.7183]	72.2+0.0s
[11200/16000]	[L1: 5.7340]	72.4+0.0s
[12800/16000]	[L1: 5.7143]	72.1+0.0s
[14400/16000]	[L1: 5.7346]	72.7+0.0s
[16000/16000]	[L1: 5.7298]	72.7+0.0s
[Epoch 777]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8151]	73.0+0.4s
[3200/16000]	[L1: 5.7270]	72.8+0.0s
[4800/16000]	[L1: 5.7813]	72.9+0.0s
[6400/16000]	[L1: 5.7559]	72.8+0.0s
[8000/16000]	[L1: 5.7812]	72.8+0.0s
[9600/16000]	[L1: 5.8156]	72.7+0.0s
[11200/16000]	[L1: 5.7999]	72.7+0.0s
[12800/16000]	[L1: 5.8259]	73.0+0.0s
[14400/16000]	[L1: 5.7951]	72.8+0.0s
[16000/16000]	[L1: 5.7802]	72.7+0.0s
[Epoch 778]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5242]	73.2+0.4s
[3200/16000]	[L1: 5.5785]	72.8+0.0s
[4800/16000]	[L1: 5.6394]	72.9+0.0s
[6400/16000]	[L1: 5.6807]	72.9+0.0s
[8000/16000]	[L1: 5.6539]	72.7+0.0s
[9600/16000]	[L1: 5.6918]	72.9+0.0s
[11200/16000]	[L1: 5.6904]	72.8+0.0s
[12800/16000]	[L1: 5.6890]	72.7+0.0s
[14400/16000]	[L1: 5.7083]	73.0+0.0s
[16000/16000]	[L1: 5.7286]	72.9+0.0s
[Epoch 779]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9384]	72.9+0.4s
[3200/16000]	[L1: 5.7809]	72.5+0.0s
[4800/16000]	[L1: 5.7326]	72.6+0.0s
[6400/16000]	[L1: 5.7264]	72.6+0.0s
[8000/16000]	[L1: 5.7575]	72.2+0.0s
[9600/16000]	[L1: 5.7411]	72.5+0.0s
[11200/16000]	[L1: 5.7775]	72.5+0.0s
[12800/16000]	[L1: 5.7720]	73.1+0.0s
[14400/16000]	[L1: 5.7723]	73.0+0.0s
[16000/16000]	[L1: 5.7782]	72.0+0.0s
[Epoch 780]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8020]	72.7+0.4s
[3200/16000]	[L1: 5.8009]	72.2+0.0s
[4800/16000]	[L1: 5.8129]	72.7+0.0s
[6400/16000]	[L1: 5.8025]	72.2+0.0s
[8000/16000]	[L1: 5.7949]	73.2+0.0s
[9600/16000]	[L1: 5.7866]	72.7+0.0s
[11200/16000]	[L1: 5.7609]	72.7+0.0s
[12800/16000]	[L1: 5.7684]	72.8+0.0s
[14400/16000]	[L1: 5.7657]	72.2+0.0s
[16000/16000]	[L1: 5.7600]	76.3+0.0s
[Epoch 781]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5730]	80.3+0.5s
[3200/16000]	[L1: 5.7358]	73.4+0.0s
[4800/16000]	[L1: 5.7307]	72.3+0.0s
[6400/16000]	[L1: 5.7601]	72.5+0.0s
[8000/16000]	[L1: 5.7539]	73.2+0.0s
[9600/16000]	[L1: 5.7577]	79.4+0.0s
[11200/16000]	[L1: 5.7654]	77.3+0.0s
[12800/16000]	[L1: 5.7534]	78.4+0.0s
[14400/16000]	[L1: 5.7477]	79.0+0.0s
[16000/16000]	[L1: 5.7726]	72.9+0.0s
[Epoch 782]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6648]	73.2+0.4s
[3200/16000]	[L1: 5.7340]	73.0+0.0s
[4800/16000]	[L1: 5.7682]	73.6+0.0s
[6400/16000]	[L1: 5.8062]	73.6+0.0s
[8000/16000]	[L1: 5.7628]	75.3+0.0s
[9600/16000]	[L1: 5.7796]	80.2+0.0s
[11200/16000]	[L1: 5.7324]	75.8+0.0s
[12800/16000]	[L1: 5.7287]	74.0+0.0s
[14400/16000]	[L1: 5.7294]	80.3+0.0s
[16000/16000]	[L1: 5.7329]	77.6+0.0s
[Epoch 783]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9433]	76.0+0.4s
[3200/16000]	[L1: 5.7420]	80.7+0.0s
[4800/16000]	[L1: 5.7294]	75.5+0.0s
[6400/16000]	[L1: 5.7365]	73.3+0.0s
[8000/16000]	[L1: 5.7452]	73.2+0.0s
[9600/16000]	[L1: 5.7069]	73.1+0.0s
[11200/16000]	[L1: 5.7195]	73.4+0.0s
[12800/16000]	[L1: 5.6943]	73.7+0.0s
[14400/16000]	[L1: 5.7242]	72.8+0.0s
[16000/16000]	[L1: 5.7405]	72.5+0.0s
[Epoch 784]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9395]	72.6+0.4s
[3200/16000]	[L1: 5.8542]	72.9+0.0s
[4800/16000]	[L1: 5.8426]	72.9+0.0s
[6400/16000]	[L1: 5.8021]	80.0+0.0s
[8000/16000]	[L1: 5.8199]	76.7+0.0s
[9600/16000]	[L1: 5.7808]	72.6+0.0s
[11200/16000]	[L1: 5.7911]	73.5+0.0s
[12800/16000]	[L1: 5.7928]	73.3+0.0s
[14400/16000]	[L1: 5.7585]	73.1+0.0s
[16000/16000]	[L1: 5.7663]	73.4+0.0s
[Epoch 785]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7601]	73.7+0.4s
[3200/16000]	[L1: 5.7326]	73.5+0.0s
[4800/16000]	[L1: 5.7473]	73.0+0.0s
[6400/16000]	[L1: 5.7042]	72.8+0.0s
[8000/16000]	[L1: 5.7273]	72.5+0.0s
[9600/16000]	[L1: 5.7468]	73.0+0.0s
[11200/16000]	[L1: 5.7455]	73.5+0.0s
[12800/16000]	[L1: 5.7245]	73.0+0.0s
[14400/16000]	[L1: 5.7575]	73.3+0.0s
[16000/16000]	[L1: 5.7534]	73.2+0.0s
[Epoch 786]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9515]	73.0+0.4s
[3200/16000]	[L1: 5.8883]	72.9+0.0s
[4800/16000]	[L1: 5.8086]	73.0+0.0s
[6400/16000]	[L1: 5.8234]	73.4+0.0s
[8000/16000]	[L1: 5.8195]	73.6+0.0s
[9600/16000]	[L1: 5.8069]	73.5+0.0s
[11200/16000]	[L1: 5.8205]	73.4+0.0s
[12800/16000]	[L1: 5.8080]	73.4+0.0s
[14400/16000]	[L1: 5.8126]	73.8+0.0s
[16000/16000]	[L1: 5.7941]	74.4+0.0s
[Epoch 787]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7373]	75.9+0.5s
[3200/16000]	[L1: 5.6672]	74.4+0.0s
[4800/16000]	[L1: 5.7586]	73.7+0.0s
[6400/16000]	[L1: 5.7403]	74.9+0.0s
[8000/16000]	[L1: 5.7386]	74.8+0.0s
[9600/16000]	[L1: 5.7642]	75.7+0.0s
[11200/16000]	[L1: 5.7576]	75.0+0.0s
[12800/16000]	[L1: 5.7289]	74.0+0.0s
[14400/16000]	[L1: 5.7534]	73.9+0.0s
[16000/16000]	[L1: 5.7566]	73.6+0.0s
[Epoch 788]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6900]	73.9+0.4s
[3200/16000]	[L1: 5.7714]	73.8+0.0s
[4800/16000]	[L1: 5.7900]	73.1+0.0s
[6400/16000]	[L1: 5.7650]	72.6+0.0s
[8000/16000]	[L1: 5.7391]	72.5+0.0s
[9600/16000]	[L1: 5.7841]	72.6+0.0s
[11200/16000]	[L1: 5.7756]	73.0+0.0s
[12800/16000]	[L1: 5.7581]	72.7+0.0s
[14400/16000]	[L1: 5.7667]	72.7+0.0s
[16000/16000]	[L1: 5.7580]	72.8+0.0s
[Epoch 789]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8756]	73.8+0.4s
[3200/16000]	[L1: 5.8695]	73.3+0.0s
[4800/16000]	[L1: 5.7968]	73.4+0.0s
[6400/16000]	[L1: 5.7626]	73.5+0.0s
[8000/16000]	[L1: 5.7428]	73.7+0.0s
[9600/16000]	[L1: 5.7428]	73.7+0.0s
[11200/16000]	[L1: 5.7279]	73.2+0.0s
[12800/16000]	[L1: 5.7196]	73.3+0.0s
[14400/16000]	[L1: 5.7052]	73.3+0.0s
[16000/16000]	[L1: 5.6926]	73.2+0.0s
[Epoch 790]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8987]	73.5+0.5s
[3200/16000]	[L1: 5.8236]	73.3+0.0s
[4800/16000]	[L1: 5.8257]	73.4+0.0s
[6400/16000]	[L1: 5.7477]	73.4+0.0s
[8000/16000]	[L1: 5.7780]	73.1+0.0s
[9600/16000]	[L1: 5.7838]	73.3+0.0s
[11200/16000]	[L1: 5.7569]	73.1+0.0s
[12800/16000]	[L1: 5.7479]	73.4+0.0s
[14400/16000]	[L1: 5.7384]	73.4+0.0s
[16000/16000]	[L1: 5.7289]	73.2+0.0s
[Epoch 791]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8029]	73.7+0.5s
[3200/16000]	[L1: 5.7184]	73.4+0.0s
[4800/16000]	[L1: 5.7684]	73.6+0.0s
[6400/16000]	[L1: 5.7734]	73.3+0.0s
[8000/16000]	[L1: 5.7929]	73.2+0.0s
[9600/16000]	[L1: 5.7893]	73.4+0.0s
[11200/16000]	[L1: 5.8454]	73.4+0.0s
[12800/16000]	[L1: 5.8236]	73.6+0.0s
[14400/16000]	[L1: 5.8010]	73.4+0.0s
[16000/16000]	[L1: 5.7797]	73.6+0.0s
[Epoch 792]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6998]	73.6+0.4s
[3200/16000]	[L1: 5.7548]	73.2+0.0s
[4800/16000]	[L1: 5.7587]	73.3+0.0s
[6400/16000]	[L1: 5.7586]	72.8+0.0s
[8000/16000]	[L1: 5.7520]	72.4+0.0s
[9600/16000]	[L1: 5.7538]	72.7+0.0s
[11200/16000]	[L1: 5.7472]	73.1+0.0s
[12800/16000]	[L1: 5.7720]	73.4+0.0s
[14400/16000]	[L1: 5.7610]	72.9+0.0s
[16000/16000]	[L1: 5.7758]	73.1+0.0s
[Epoch 793]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8417]	73.6+0.4s
[3200/16000]	[L1: 5.9255]	73.4+0.0s
[4800/16000]	[L1: 5.8820]	73.4+0.0s
[6400/16000]	[L1: 5.8274]	73.2+0.0s
[8000/16000]	[L1: 5.7832]	73.5+0.0s
[9600/16000]	[L1: 5.7490]	73.7+0.0s
[11200/16000]	[L1: 5.7427]	73.2+0.0s
[12800/16000]	[L1: 5.7352]	73.3+0.0s
[14400/16000]	[L1: 5.7541]	73.3+0.0s
[16000/16000]	[L1: 5.7316]	73.4+0.0s
[Epoch 794]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5205]	73.9+0.4s
[3200/16000]	[L1: 5.6259]	73.5+0.0s
[4800/16000]	[L1: 5.7278]	73.4+0.0s
[6400/16000]	[L1: 5.6761]	73.4+0.0s
[8000/16000]	[L1: 5.6713]	73.4+0.0s
[9600/16000]	[L1: 5.6547]	73.5+0.0s
[11200/16000]	[L1: 5.6290]	73.2+0.0s
[12800/16000]	[L1: 5.6576]	73.3+0.0s
[14400/16000]	[L1: 5.6673]	73.2+0.0s
[16000/16000]	[L1: 5.6741]	73.3+0.0s
[Epoch 795]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6918]	73.5+0.4s
[3200/16000]	[L1: 5.8098]	73.4+0.0s
[4800/16000]	[L1: 5.7772]	73.4+0.0s
[6400/16000]	[L1: 5.7303]	73.2+0.0s
[8000/16000]	[L1: 5.7477]	73.4+0.0s
[9600/16000]	[L1: 5.7341]	73.3+0.0s
[11200/16000]	[L1: 5.7503]	73.3+0.0s
[12800/16000]	[L1: 5.7382]	73.5+0.0s
[14400/16000]	[L1: 5.7372]	73.3+0.0s
[16000/16000]	[L1: 5.7479]	73.4+0.0s
[Epoch 796]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8121]	73.3+0.4s
[3200/16000]	[L1: 5.7957]	73.4+0.0s
[4800/16000]	[L1: 5.8409]	73.2+0.0s
[6400/16000]	[L1: 5.7712]	73.2+0.0s
[8000/16000]	[L1: 5.7687]	73.3+0.0s
[9600/16000]	[L1: 5.8264]	73.2+0.0s
[11200/16000]	[L1: 5.7946]	73.3+0.0s
[12800/16000]	[L1: 5.8040]	73.5+0.0s
[14400/16000]	[L1: 5.8070]	73.0+0.0s
[16000/16000]	[L1: 5.7934]	73.2+0.0s
[Epoch 797]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8052]	73.6+0.5s
[3200/16000]	[L1: 5.7921]	72.7+0.0s
[4800/16000]	[L1: 5.7655]	72.6+0.0s
[6400/16000]	[L1: 5.7597]	73.2+0.0s
[8000/16000]	[L1: 5.7863]	73.1+0.0s
[9600/16000]	[L1: 5.7663]	72.6+0.0s
[11200/16000]	[L1: 5.7438]	73.3+0.0s
[12800/16000]	[L1: 5.7384]	72.9+0.0s
[14400/16000]	[L1: 5.7285]	73.3+0.0s
[16000/16000]	[L1: 5.6996]	73.3+0.0s
[Epoch 798]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7908]	73.4+0.4s
[3200/16000]	[L1: 5.7152]	73.3+0.0s
[4800/16000]	[L1: 5.7441]	73.3+0.0s
[6400/16000]	[L1: 5.7383]	73.3+0.0s
[8000/16000]	[L1: 5.6957]	73.6+0.0s
[9600/16000]	[L1: 5.7008]	73.4+0.0s
[11200/16000]	[L1: 5.7087]	73.4+0.0s
[12800/16000]	[L1: 5.7161]	73.4+0.0s
[14400/16000]	[L1: 5.7251]	73.3+0.0s
[16000/16000]	[L1: 5.7192]	73.3+0.0s
[Epoch 799]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8604]	74.2+0.4s
[3200/16000]	[L1: 5.8260]	72.8+0.0s
[4800/16000]	[L1: 5.7766]	72.8+0.0s
[6400/16000]	[L1: 5.7892]	72.7+0.0s
[8000/16000]	[L1: 5.7723]	72.5+0.0s
[9600/16000]	[L1: 5.7764]	72.5+0.0s
[11200/16000]	[L1: 5.7658]	72.4+0.0s
[12800/16000]	[L1: 5.7693]	72.4+0.0s
[14400/16000]	[L1: 5.7530]	73.3+0.0s
[16000/16000]	[L1: 5.7453]	73.1+0.0s
[Epoch 800]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7019]	72.8+0.4s
[3200/16000]	[L1: 5.6305]	72.9+0.0s
[4800/16000]	[L1: 5.6113]	72.6+0.0s
[6400/16000]	[L1: 5.6408]	72.5+0.0s
[8000/16000]	[L1: 5.6649]	72.6+0.0s
[9600/16000]	[L1: 5.7097]	72.2+0.0s
[11200/16000]	[L1: 5.7054]	72.5+0.0s
[12800/16000]	[L1: 5.7212]	72.7+0.0s
[14400/16000]	[L1: 5.7163]	72.6+0.0s
[16000/16000]	[L1: 5.7209]	72.7+0.0s
[Epoch 801]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6920]	73.1+0.5s
[3200/16000]	[L1: 5.6791]	73.1+0.0s
[4800/16000]	[L1: 5.7464]	72.9+0.0s
[6400/16000]	[L1: 5.7583]	73.0+0.0s
[8000/16000]	[L1: 5.7675]	72.4+0.0s
[9600/16000]	[L1: 5.7921]	72.5+0.0s
[11200/16000]	[L1: 5.7975]	72.5+0.0s
[12800/16000]	[L1: 5.8072]	72.8+0.0s
[14400/16000]	[L1: 5.8308]	72.4+0.0s
[16000/16000]	[L1: 5.8437]	72.4+0.0s
[Epoch 802]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6628]	73.3+0.4s
[3200/16000]	[L1: 5.6605]	73.0+0.0s
[4800/16000]	[L1: 5.7270]	72.8+0.0s
[6400/16000]	[L1: 5.7349]	72.6+0.0s
[8000/16000]	[L1: 5.7821]	72.5+0.0s
[9600/16000]	[L1: 5.8156]	73.0+0.0s
[11200/16000]	[L1: 5.7951]	73.1+0.0s
[12800/16000]	[L1: 5.7628]	73.0+0.0s
[14400/16000]	[L1: 5.7497]	73.1+0.0s
[16000/16000]	[L1: 5.7649]	72.9+0.0s
[Epoch 803]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7023]	73.4+0.4s
[3200/16000]	[L1: 5.7711]	73.3+0.0s
[4800/16000]	[L1: 5.7406]	73.2+0.0s
[6400/16000]	[L1: 5.7635]	73.4+0.0s
[8000/16000]	[L1: 5.7237]	73.1+0.0s
[9600/16000]	[L1: 5.7084]	73.2+0.0s
[11200/16000]	[L1: 5.7366]	73.1+0.0s
[12800/16000]	[L1: 5.7230]	73.1+0.0s
[14400/16000]	[L1: 5.7182]	73.2+0.0s
[16000/16000]	[L1: 5.7265]	73.0+0.0s
[Epoch 804]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6401]	73.3+0.4s
[3200/16000]	[L1: 5.6782]	73.2+0.0s
[4800/16000]	[L1: 5.6957]	73.2+0.0s
[6400/16000]	[L1: 5.7393]	73.1+0.0s
[8000/16000]	[L1: 5.7415]	73.1+0.0s
[9600/16000]	[L1: 5.7627]	73.5+0.0s
[11200/16000]	[L1: 5.7408]	73.2+0.0s
[12800/16000]	[L1: 5.7422]	73.1+0.0s
[14400/16000]	[L1: 5.7406]	73.1+0.0s
[16000/16000]	[L1: 5.7407]	73.1+0.0s
[Epoch 805]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7141]	73.5+0.4s
[3200/16000]	[L1: 5.7589]	73.2+0.0s
[4800/16000]	[L1: 5.7139]	73.7+0.0s
[6400/16000]	[L1: 5.6684]	73.4+0.0s
[8000/16000]	[L1: 5.6550]	73.3+0.0s
[9600/16000]	[L1: 5.6731]	73.2+0.0s
[11200/16000]	[L1: 5.6821]	73.2+0.0s
[12800/16000]	[L1: 5.6895]	73.3+0.0s
[14400/16000]	[L1: 5.7133]	73.2+0.0s
[16000/16000]	[L1: 5.7262]	73.1+0.0s
[Epoch 806]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6576]	73.4+0.5s
[3200/16000]	[L1: 5.6663]	73.1+0.0s
[4800/16000]	[L1: 5.7454]	73.2+0.0s
[6400/16000]	[L1: 5.7660]	73.3+0.0s
[8000/16000]	[L1: 5.7417]	73.1+0.0s
[9600/16000]	[L1: 5.7599]	73.2+0.0s
[11200/16000]	[L1: 5.7040]	73.2+0.0s
[12800/16000]	[L1: 5.7251]	73.3+0.0s
[14400/16000]	[L1: 5.7345]	73.1+0.0s
[16000/16000]	[L1: 5.7490]	73.2+0.0s
[Epoch 807]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8642]	73.4+0.4s
[3200/16000]	[L1: 5.8137]	73.3+0.0s
[4800/16000]	[L1: 5.8346]	73.3+0.0s
[6400/16000]	[L1: 5.8793]	73.2+0.0s
[8000/16000]	[L1: 5.8468]	73.4+0.0s
[9600/16000]	[L1: 5.8075]	73.2+0.0s
[11200/16000]	[L1: 5.8019]	73.1+0.0s
[12800/16000]	[L1: 5.7746]	73.2+0.0s
[14400/16000]	[L1: 5.7769]	73.2+0.0s
[16000/16000]	[L1: 5.7627]	73.2+0.0s
[Epoch 808]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6495]	73.4+0.4s
[3200/16000]	[L1: 5.6295]	73.2+0.0s
[4800/16000]	[L1: 5.6512]	73.2+0.0s
[6400/16000]	[L1: 5.6833]	73.0+0.0s
[8000/16000]	[L1: 5.6758]	72.8+0.0s
[9600/16000]	[L1: 5.6448]	73.4+0.0s
[11200/16000]	[L1: 5.6674]	73.0+0.0s
[12800/16000]	[L1: 5.6812]	72.3+0.0s
[14400/16000]	[L1: 5.6809]	72.2+0.0s
[16000/16000]	[L1: 5.7168]	72.3+0.0s
[Epoch 809]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7895]	73.3+0.4s
[3200/16000]	[L1: 5.6906]	73.3+0.0s
[4800/16000]	[L1: 5.6741]	73.1+0.0s
[6400/16000]	[L1: 5.6942]	73.1+0.0s
[8000/16000]	[L1: 5.7168]	73.1+0.0s
[9600/16000]	[L1: 5.7272]	72.9+0.0s
[11200/16000]	[L1: 5.7257]	73.1+0.0s
[12800/16000]	[L1: 5.7277]	73.2+0.0s
[14400/16000]	[L1: 5.6896]	72.4+0.0s
[16000/16000]	[L1: 5.7019]	72.7+0.0s
[Epoch 810]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6476]	72.7+0.4s
[3200/16000]	[L1: 5.6556]	72.6+0.0s
[4800/16000]	[L1: 5.6742]	72.5+0.0s
[6400/16000]	[L1: 5.6727]	72.2+0.0s
[8000/16000]	[L1: 5.6529]	72.2+0.0s
[9600/16000]	[L1: 5.6478]	72.1+0.0s
[11200/16000]	[L1: 5.6742]	72.3+0.0s
[12800/16000]	[L1: 5.6960]	72.6+0.0s
[14400/16000]	[L1: 5.6978]	72.8+0.0s
[16000/16000]	[L1: 5.7092]	72.7+0.0s
[Epoch 811]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7818]	72.6+0.4s
[3200/16000]	[L1: 5.7423]	72.3+0.0s
[4800/16000]	[L1: 5.7708]	73.5+0.0s
[6400/16000]	[L1: 5.7575]	73.5+0.0s
[8000/16000]	[L1: 5.7711]	73.3+0.0s
[9600/16000]	[L1: 5.7919]	73.1+0.0s
[11200/16000]	[L1: 5.8142]	72.7+0.0s
[12800/16000]	[L1: 5.7922]	72.7+0.0s
[14400/16000]	[L1: 5.7998]	72.7+0.0s
[16000/16000]	[L1: 5.7941]	72.5+0.0s
[Epoch 812]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7138]	72.9+0.5s
[3200/16000]	[L1: 5.6941]	72.7+0.0s
[4800/16000]	[L1: 5.7718]	72.7+0.0s
[6400/16000]	[L1: 5.7535]	72.7+0.0s
[8000/16000]	[L1: 5.7729]	72.8+0.0s
[9600/16000]	[L1: 5.7388]	72.6+0.0s
[11200/16000]	[L1: 5.7566]	72.7+0.0s
[12800/16000]	[L1: 5.7599]	72.8+0.0s
[14400/16000]	[L1: 5.7475]	73.1+0.0s
[16000/16000]	[L1: 5.7428]	72.9+0.0s
[Epoch 813]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6169]	74.0+0.4s
[3200/16000]	[L1: 5.6876]	80.9+0.0s
[4800/16000]	[L1: 5.7430]	77.5+0.0s
[6400/16000]	[L1: 5.7355]	73.3+0.0s
[8000/16000]	[L1: 5.7004]	73.0+0.0s
[9600/16000]	[L1: 5.7396]	73.1+0.0s
[11200/16000]	[L1: 5.7459]	73.3+0.0s
[12800/16000]	[L1: 5.7419]	73.0+0.0s
[14400/16000]	[L1: 5.7537]	73.1+0.0s
[16000/16000]	[L1: 5.7478]	73.2+0.0s
[Epoch 814]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8171]	73.4+0.4s
[3200/16000]	[L1: 5.7783]	73.3+0.0s
[4800/16000]	[L1: 5.7187]	73.3+0.0s
[6400/16000]	[L1: 5.7447]	73.0+0.0s
[8000/16000]	[L1: 5.7405]	73.2+0.0s
[9600/16000]	[L1: 5.7232]	73.2+0.0s
[11200/16000]	[L1: 5.7042]	73.2+0.0s
[12800/16000]	[L1: 5.6980]	73.3+0.0s
[14400/16000]	[L1: 5.7225]	73.5+0.0s
[16000/16000]	[L1: 5.7253]	73.2+0.0s
[Epoch 815]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7157]	73.4+0.4s
[3200/16000]	[L1: 5.7328]	73.4+0.0s
[4800/16000]	[L1: 5.7840]	73.0+0.0s
[6400/16000]	[L1: 5.7288]	73.2+0.0s
[8000/16000]	[L1: 5.7018]	73.2+0.0s
[9600/16000]	[L1: 5.6948]	73.3+0.0s
[11200/16000]	[L1: 5.7046]	73.3+0.0s
[12800/16000]	[L1: 5.7019]	73.4+0.0s
[14400/16000]	[L1: 5.7111]	73.3+0.0s
[16000/16000]	[L1: 5.7153]	73.3+0.0s
[Epoch 816]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7036]	73.2+0.4s
[3200/16000]	[L1: 5.7588]	72.9+0.0s
[4800/16000]	[L1: 5.7659]	72.8+0.0s
[6400/16000]	[L1: 5.7236]	73.2+0.0s
[8000/16000]	[L1: 5.7434]	73.1+0.0s
[9600/16000]	[L1: 5.7480]	72.9+0.0s
[11200/16000]	[L1: 5.7740]	73.2+0.0s
[12800/16000]	[L1: 5.7711]	73.1+0.0s
[14400/16000]	[L1: 5.7723]	73.1+0.0s
[16000/16000]	[L1: 5.7761]	73.1+0.0s
[Epoch 817]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8550]	72.8+0.4s
[3200/16000]	[L1: 5.7805]	73.4+0.0s
[4800/16000]	[L1: 5.7405]	73.5+0.0s
[6400/16000]	[L1: 5.7046]	73.7+0.0s
[8000/16000]	[L1: 5.7157]	73.4+0.0s
[9600/16000]	[L1: 5.7080]	73.6+0.0s
[11200/16000]	[L1: 5.7207]	73.3+0.0s
[12800/16000]	[L1: 5.7127]	73.4+0.0s
[14400/16000]	[L1: 5.7077]	73.3+0.0s
[16000/16000]	[L1: 5.7188]	73.6+0.0s
[Epoch 818]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8308]	73.6+0.4s
[3200/16000]	[L1: 5.8676]	73.6+0.0s
[4800/16000]	[L1: 5.8248]	73.5+0.0s
[6400/16000]	[L1: 5.8304]	73.4+0.0s
[8000/16000]	[L1: 5.7844]	73.7+0.0s
[9600/16000]	[L1: 5.7758]	72.5+0.0s
[11200/16000]	[L1: 5.7617]	72.4+0.0s
[12800/16000]	[L1: 5.7699]	72.7+0.0s
[14400/16000]	[L1: 5.7767]	72.8+0.0s
[16000/16000]	[L1: 5.7728]	72.6+0.0s
[Epoch 819]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9532]	73.3+0.4s
[3200/16000]	[L1: 5.8777]	72.6+0.0s
[4800/16000]	[L1: 5.7656]	72.7+0.0s
[6400/16000]	[L1: 5.7558]	72.9+0.0s
[8000/16000]	[L1: 5.7513]	72.8+0.0s
[9600/16000]	[L1: 5.7863]	72.9+0.0s
[11200/16000]	[L1: 5.7744]	72.8+0.0s
[12800/16000]	[L1: 5.7721]	72.8+0.0s
[14400/16000]	[L1: 5.7744]	72.6+0.0s
[16000/16000]	[L1: 5.7603]	72.7+0.0s
[Epoch 820]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6772]	72.8+0.4s
[3200/16000]	[L1: 5.7112]	72.6+0.0s
[4800/16000]	[L1: 5.7244]	72.6+0.0s
[6400/16000]	[L1: 5.7639]	73.1+0.0s
[8000/16000]	[L1: 5.7130]	73.0+0.0s
[9600/16000]	[L1: 5.7251]	73.1+0.0s
[11200/16000]	[L1: 5.7295]	73.0+0.0s
[12800/16000]	[L1: 5.7238]	72.9+0.0s
[14400/16000]	[L1: 5.7056]	73.0+0.0s
[16000/16000]	[L1: 5.7179]	73.1+0.0s
[Epoch 821]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5461]	73.5+0.4s
[3200/16000]	[L1: 5.5575]	73.4+0.0s
[4800/16000]	[L1: 5.6029]	73.3+0.0s
[6400/16000]	[L1: 5.6111]	73.2+0.0s
[8000/16000]	[L1: 5.6200]	73.2+0.0s
[9600/16000]	[L1: 5.6647]	72.6+0.0s
[11200/16000]	[L1: 5.6840]	72.5+0.0s
[12800/16000]	[L1: 5.6849]	72.5+0.0s
[14400/16000]	[L1: 5.7051]	72.6+0.0s
[16000/16000]	[L1: 5.7023]	72.5+0.0s
[Epoch 822]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7616]	72.6+0.4s
[3200/16000]	[L1: 5.7780]	72.9+0.0s
[4800/16000]	[L1: 5.7567]	72.7+0.0s
[6400/16000]	[L1: 5.6973]	72.5+0.0s
[8000/16000]	[L1: 5.7408]	72.7+0.0s
[9600/16000]	[L1: 5.7195]	72.5+0.0s
[11200/16000]	[L1: 5.7406]	72.5+0.0s
[12800/16000]	[L1: 5.7323]	72.8+0.0s
[14400/16000]	[L1: 5.7049]	72.5+0.0s
[16000/16000]	[L1: 5.7026]	72.4+0.0s
[Epoch 823]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9188]	73.0+0.4s
[3200/16000]	[L1: 5.7751]	72.5+0.0s
[4800/16000]	[L1: 5.8187]	72.7+0.0s
[6400/16000]	[L1: 5.7465]	72.7+0.0s
[8000/16000]	[L1: 5.7425]	72.6+0.0s
[9600/16000]	[L1: 5.7376]	72.5+0.0s
[11200/16000]	[L1: 5.7221]	72.9+0.0s
[12800/16000]	[L1: 5.7402]	72.6+0.0s
[14400/16000]	[L1: 5.7201]	72.9+0.0s
[16000/16000]	[L1: 5.7264]	73.6+0.0s
[Epoch 824]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5861]	72.6+0.4s
[3200/16000]	[L1: 5.7119]	73.3+0.0s
[4800/16000]	[L1: 5.7281]	73.2+0.0s
[6400/16000]	[L1: 5.7626]	73.2+0.0s
[8000/16000]	[L1: 5.7576]	73.0+0.0s
[9600/16000]	[L1: 5.7641]	73.0+0.0s
[11200/16000]	[L1: 5.7706]	73.1+0.0s
[12800/16000]	[L1: 5.7685]	73.1+0.0s
[14400/16000]	[L1: 5.7590]	73.1+0.0s
[16000/16000]	[L1: 5.7516]	73.0+0.0s
[Epoch 825]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6474]	72.9+0.4s
[3200/16000]	[L1: 5.5969]	72.9+0.0s
[4800/16000]	[L1: 5.6830]	73.6+0.0s
[6400/16000]	[L1: 5.6730]	73.5+0.0s
[8000/16000]	[L1: 5.6862]	74.0+0.0s
[9600/16000]	[L1: 5.6871]	73.9+0.0s
[11200/16000]	[L1: 5.7045]	73.8+0.0s
[12800/16000]	[L1: 5.7313]	74.0+0.0s
[14400/16000]	[L1: 5.7344]	73.8+0.0s
[16000/16000]	[L1: 5.7002]	73.9+0.0s
[Epoch 826]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8218]	73.7+0.4s
[3200/16000]	[L1: 5.8239]	73.4+0.0s
[4800/16000]	[L1: 5.7727]	73.5+0.0s
[6400/16000]	[L1: 5.7373]	73.5+0.0s
[8000/16000]	[L1: 5.7271]	73.3+0.0s
[9600/16000]	[L1: 5.7313]	73.2+0.0s
[11200/16000]	[L1: 5.7515]	73.9+0.0s
[12800/16000]	[L1: 5.7433]	73.5+0.0s
[14400/16000]	[L1: 5.7501]	73.1+0.0s
[16000/16000]	[L1: 5.7537]	72.9+0.0s
[Epoch 827]	Learning rate: 1.25e-5
[1600/16000]	[L1: 6.0674]	73.1+0.4s
[3200/16000]	[L1: 5.9505]	73.6+0.0s
[4800/16000]	[L1: 5.8152]	73.1+0.0s
[6400/16000]	[L1: 5.7942]	73.1+0.0s
[8000/16000]	[L1: 5.8105]	73.1+0.0s
[9600/16000]	[L1: 5.8019]	73.7+0.0s
[11200/16000]	[L1: 5.8010]	74.2+0.0s
[12800/16000]	[L1: 5.8024]	75.5+0.0s
[14400/16000]	[L1: 5.8032]	76.0+0.0s
[16000/16000]	[L1: 5.7998]	75.2+0.0s
[Epoch 828]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6576]	75.9+0.5s
[3200/16000]	[L1: 5.5860]	75.4+0.0s
[4800/16000]	[L1: 5.7014]	75.1+0.0s
[6400/16000]	[L1: 5.7545]	75.9+0.0s
[8000/16000]	[L1: 5.7602]	74.9+0.0s
[9600/16000]	[L1: 5.7586]	74.9+0.0s
[11200/16000]	[L1: 5.7718]	74.8+0.0s
[12800/16000]	[L1: 5.7579]	72.8+0.0s
[14400/16000]	[L1: 5.7706]	72.8+0.0s
[16000/16000]	[L1: 5.7730]	72.7+0.0s
[Epoch 829]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7295]	73.2+0.5s
[3200/16000]	[L1: 5.7591]	73.5+0.0s
[4800/16000]	[L1: 5.7879]	73.7+0.0s
[6400/16000]	[L1: 5.7481]	73.8+0.0s
[8000/16000]	[L1: 5.7267]	73.3+0.0s
[9600/16000]	[L1: 5.7364]	73.5+0.0s
[11200/16000]	[L1: 5.7447]	75.4+0.0s
[12800/16000]	[L1: 5.7471]	75.5+0.0s
[14400/16000]	[L1: 5.7432]	73.5+0.0s
[16000/16000]	[L1: 5.7382]	73.3+0.0s
[Epoch 830]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6270]	73.6+0.4s
[3200/16000]	[L1: 5.6638]	73.4+0.0s
[4800/16000]	[L1: 5.7357]	73.5+0.0s
[6400/16000]	[L1: 5.6907]	73.6+0.0s
[8000/16000]	[L1: 5.7011]	73.4+0.0s
[9600/16000]	[L1: 5.6863]	72.9+0.0s
[11200/16000]	[L1: 5.7129]	73.0+0.0s
[12800/16000]	[L1: 5.7043]	73.5+0.0s
[14400/16000]	[L1: 5.7246]	74.0+0.0s
[16000/16000]	[L1: 5.7405]	76.1+0.0s
[Epoch 831]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6869]	76.2+0.4s
[3200/16000]	[L1: 5.7425]	75.7+0.0s
[4800/16000]	[L1: 5.7554]	75.2+0.0s
[6400/16000]	[L1: 5.7490]	72.9+0.0s
[8000/16000]	[L1: 5.7266]	72.3+0.0s
[9600/16000]	[L1: 5.7257]	73.0+0.0s
[11200/16000]	[L1: 5.7294]	72.9+0.0s
[12800/16000]	[L1: 5.7674]	72.3+0.0s
[14400/16000]	[L1: 5.7513]	72.7+0.0s
[16000/16000]	[L1: 5.7556]	72.4+0.0s
[Epoch 832]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7886]	73.1+0.4s
[3200/16000]	[L1: 5.7468]	72.6+0.0s
[4800/16000]	[L1: 5.7664]	72.7+0.0s
[6400/16000]	[L1: 5.8601]	72.7+0.0s
[8000/16000]	[L1: 5.8625]	73.5+0.0s
[9600/16000]	[L1: 5.8302]	73.2+0.0s
[11200/16000]	[L1: 5.8168]	74.4+0.0s
[12800/16000]	[L1: 5.8141]	74.3+0.0s
[14400/16000]	[L1: 5.8191]	73.3+0.0s
[16000/16000]	[L1: 5.8071]	73.0+0.0s
[Epoch 833]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6008]	72.9+0.4s
[3200/16000]	[L1: 5.6159]	73.6+0.0s
[4800/16000]	[L1: 5.5823]	72.6+0.0s
[6400/16000]	[L1: 5.6348]	72.6+0.0s
[8000/16000]	[L1: 5.6742]	73.0+0.0s
[9600/16000]	[L1: 5.6910]	72.8+0.0s
[11200/16000]	[L1: 5.6747]	72.5+0.0s
[12800/16000]	[L1: 5.7064]	73.2+0.0s
[14400/16000]	[L1: 5.7030]	72.9+0.0s
[16000/16000]	[L1: 5.7133]	72.9+0.0s
[Epoch 834]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7100]	72.8+0.5s
[3200/16000]	[L1: 5.7346]	73.6+0.0s
[4800/16000]	[L1: 5.7094]	72.8+0.0s
[6400/16000]	[L1: 5.7546]	73.4+0.0s
[8000/16000]	[L1: 5.7387]	73.5+0.0s
[9600/16000]	[L1: 5.7484]	73.4+0.0s
[11200/16000]	[L1: 5.7687]	72.7+0.0s
[12800/16000]	[L1: 5.7700]	72.9+0.0s
[14400/16000]	[L1: 5.7320]	72.5+0.0s
[16000/16000]	[L1: 5.7309]	73.2+0.0s
[Epoch 835]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8090]	73.2+0.4s
[3200/16000]	[L1: 5.7050]	73.0+0.0s
[4800/16000]	[L1: 5.7159]	73.8+0.0s
[6400/16000]	[L1: 5.7246]	72.4+0.0s
[8000/16000]	[L1: 5.7229]	73.0+0.0s
[9600/16000]	[L1: 5.7829]	72.9+0.0s
[11200/16000]	[L1: 5.7613]	73.4+0.0s
[12800/16000]	[L1: 5.7308]	73.3+0.0s
[14400/16000]	[L1: 5.7444]	73.9+0.0s
[16000/16000]	[L1: 5.7597]	73.2+0.0s
[Epoch 836]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6119]	73.6+0.4s
[3200/16000]	[L1: 5.6518]	73.6+0.0s
[4800/16000]	[L1: 5.6823]	74.7+0.0s
[6400/16000]	[L1: 5.6844]	74.5+0.0s
[8000/16000]	[L1: 5.7158]	75.0+0.0s
[9600/16000]	[L1: 5.7108]	74.4+0.0s
[11200/16000]	[L1: 5.7016]	74.0+0.0s
[12800/16000]	[L1: 5.6950]	74.0+0.0s
[14400/16000]	[L1: 5.7227]	75.0+0.0s
[16000/16000]	[L1: 5.7232]	75.3+0.0s
[Epoch 837]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8668]	75.3+0.4s
[3200/16000]	[L1: 5.9347]	75.1+0.0s
[4800/16000]	[L1: 5.8137]	75.3+0.0s
[6400/16000]	[L1: 5.7620]	75.3+0.0s
[8000/16000]	[L1: 5.8009]	75.0+0.0s
[9600/16000]	[L1: 5.8055]	75.3+0.0s
[11200/16000]	[L1: 5.7936]	75.6+0.0s
[12800/16000]	[L1: 5.7727]	75.3+0.0s
[14400/16000]	[L1: 5.7591]	75.1+0.0s
[16000/16000]	[L1: 5.7393]	75.2+0.0s
[Epoch 838]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7458]	75.0+0.4s
[3200/16000]	[L1: 5.7111]	74.4+0.0s
[4800/16000]	[L1: 5.7407]	73.9+0.0s
[6400/16000]	[L1: 5.7310]	74.7+0.0s
[8000/16000]	[L1: 5.7292]	74.6+0.0s
[9600/16000]	[L1: 5.7176]	74.8+0.0s
[11200/16000]	[L1: 5.7320]	74.7+0.0s
[12800/16000]	[L1: 5.7471]	74.3+0.0s
[14400/16000]	[L1: 5.7479]	74.8+0.0s
[16000/16000]	[L1: 5.7313]	74.9+0.0s
[Epoch 839]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7189]	74.4+0.4s
[3200/16000]	[L1: 5.6152]	73.5+0.0s
[4800/16000]	[L1: 5.6628]	73.9+0.0s
[6400/16000]	[L1: 5.6475]	73.6+0.0s
[8000/16000]	[L1: 5.6452]	73.4+0.0s
[9600/16000]	[L1: 5.6632]	73.5+0.0s
[11200/16000]	[L1: 5.6905]	73.5+0.0s
[12800/16000]	[L1: 5.6842]	73.3+0.0s
[14400/16000]	[L1: 5.7022]	73.7+0.0s
[16000/16000]	[L1: 5.7200]	74.6+0.0s
[Epoch 840]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6518]	73.9+0.4s
[3200/16000]	[L1: 5.6407]	74.3+0.0s
[4800/16000]	[L1: 5.7034]	74.5+0.0s
[6400/16000]	[L1: 5.7288]	74.7+0.0s
[8000/16000]	[L1: 5.7607]	73.4+0.0s
[9600/16000]	[L1: 5.7405]	73.9+0.0s
[11200/16000]	[L1: 5.7529]	73.5+0.0s
[12800/16000]	[L1: 5.7451]	73.9+0.0s
[14400/16000]	[L1: 5.7385]	74.5+0.0s
[16000/16000]	[L1: 5.7411]	74.1+0.0s
[Epoch 841]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8235]	74.3+0.5s
[3200/16000]	[L1: 5.8499]	74.7+0.0s
[4800/16000]	[L1: 5.8412]	73.5+0.0s
[6400/16000]	[L1: 5.8104]	74.9+0.0s
[8000/16000]	[L1: 5.8144]	74.9+0.0s
[9600/16000]	[L1: 5.8229]	74.9+0.0s
[11200/16000]	[L1: 5.8093]	75.1+0.0s
[12800/16000]	[L1: 5.7895]	74.4+0.0s
[14400/16000]	[L1: 5.8052]	74.6+0.0s
[16000/16000]	[L1: 5.8107]	74.1+0.0s
[Epoch 842]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6598]	75.3+0.4s
[3200/16000]	[L1: 5.6760]	74.4+0.0s
[4800/16000]	[L1: 5.7152]	73.9+0.0s
[6400/16000]	[L1: 5.7670]	74.8+0.0s
[8000/16000]	[L1: 5.7499]	74.5+0.0s
[9600/16000]	[L1: 5.7344]	74.1+0.0s
[11200/16000]	[L1: 5.7542]	73.5+0.0s
[12800/16000]	[L1: 5.7617]	74.5+0.0s
[14400/16000]	[L1: 5.7744]	74.0+0.0s
[16000/16000]	[L1: 5.7679]	73.8+0.0s
[Epoch 843]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8147]	75.4+0.4s
[3200/16000]	[L1: 5.7728]	74.2+0.0s
[4800/16000]	[L1: 5.8142]	73.5+0.0s
[6400/16000]	[L1: 5.7843]	74.4+0.0s
[8000/16000]	[L1: 5.8184]	74.8+0.0s
[9600/16000]	[L1: 5.8296]	74.3+0.0s
[11200/16000]	[L1: 5.8180]	74.3+0.0s
[12800/16000]	[L1: 5.8001]	75.0+0.0s
[14400/16000]	[L1: 5.7790]	74.2+0.0s
[16000/16000]	[L1: 5.7738]	74.1+0.0s
[Epoch 844]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9234]	74.7+0.4s
[3200/16000]	[L1: 5.8498]	74.0+0.0s
[4800/16000]	[L1: 5.8335]	74.3+0.0s
[6400/16000]	[L1: 5.7889]	73.5+0.0s
[8000/16000]	[L1: 5.8077]	73.8+0.0s
[9600/16000]	[L1: 5.8106]	74.2+0.0s
[11200/16000]	[L1: 5.8221]	74.3+0.0s
[12800/16000]	[L1: 5.8099]	73.6+0.0s
[14400/16000]	[L1: 5.7963]	73.4+0.0s
[16000/16000]	[L1: 5.7973]	74.4+0.0s
[Epoch 845]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9589]	74.9+0.4s
[3200/16000]	[L1: 5.7926]	74.7+0.0s
[4800/16000]	[L1: 5.7465]	73.9+0.0s
[6400/16000]	[L1: 5.7355]	74.5+0.0s
[8000/16000]	[L1: 5.7619]	74.0+0.0s
[9600/16000]	[L1: 5.7543]	73.1+0.0s
[11200/16000]	[L1: 5.7340]	73.7+0.0s
[12800/16000]	[L1: 5.7170]	74.0+0.0s
[14400/16000]	[L1: 5.7245]	74.3+0.0s
[16000/16000]	[L1: 5.7427]	74.3+0.0s
[Epoch 846]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7746]	74.6+0.4s
[3200/16000]	[L1: 5.7932]	73.6+0.0s
[4800/16000]	[L1: 5.8332]	73.6+0.0s
[6400/16000]	[L1: 5.7659]	74.4+0.0s
[8000/16000]	[L1: 5.7573]	73.8+0.0s
[9600/16000]	[L1: 5.7492]	73.9+0.0s
[11200/16000]	[L1: 5.7275]	74.0+0.0s
[12800/16000]	[L1: 5.7347]	74.2+0.0s
[14400/16000]	[L1: 5.7354]	74.2+0.0s
[16000/16000]	[L1: 5.7338]	73.6+0.0s
[Epoch 847]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9197]	74.4+0.4s
[3200/16000]	[L1: 5.7201]	73.3+0.0s
[4800/16000]	[L1: 5.7845]	75.3+0.0s
[6400/16000]	[L1: 5.7708]	73.1+0.0s
[8000/16000]	[L1: 5.7807]	74.0+0.0s
[9600/16000]	[L1: 5.7592]	73.9+0.0s
[11200/16000]	[L1: 5.7758]	73.3+0.0s
[12800/16000]	[L1: 5.7686]	73.6+0.0s
[14400/16000]	[L1: 5.7575]	73.4+0.0s
[16000/16000]	[L1: 5.7466]	73.4+0.0s
[Epoch 848]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9115]	74.2+0.4s
[3200/16000]	[L1: 5.8970]	73.1+0.0s
[4800/16000]	[L1: 5.7964]	74.3+0.0s
[6400/16000]	[L1: 5.7292]	74.2+0.0s
[8000/16000]	[L1: 5.6957]	74.7+0.0s
[9600/16000]	[L1: 5.6870]	73.4+0.0s
[11200/16000]	[L1: 5.6864]	74.0+0.0s
[12800/16000]	[L1: 5.7117]	74.1+0.0s
[14400/16000]	[L1: 5.7055]	73.7+0.0s
[16000/16000]	[L1: 5.7132]	74.4+0.0s
[Epoch 849]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6621]	75.0+0.4s
[3200/16000]	[L1: 5.6975]	74.2+0.0s
[4800/16000]	[L1: 5.6974]	73.3+0.0s
[6400/16000]	[L1: 5.6892]	72.6+0.0s
[8000/16000]	[L1: 5.7137]	73.5+0.0s
[9600/16000]	[L1: 5.7162]	72.9+0.0s
[11200/16000]	[L1: 5.7416]	73.0+0.0s
[12800/16000]	[L1: 5.7258]	73.3+0.0s
[14400/16000]	[L1: 5.7002]	73.5+0.0s
[16000/16000]	[L1: 5.7178]	74.0+0.0s
[Epoch 850]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6380]	74.7+0.4s
[3200/16000]	[L1: 5.6475]	73.3+0.0s
[4800/16000]	[L1: 5.6404]	74.1+0.0s
[6400/16000]	[L1: 5.6909]	74.1+0.0s
[8000/16000]	[L1: 5.7241]	73.8+0.0s
[9600/16000]	[L1: 5.7210]	74.5+0.0s
[11200/16000]	[L1: 5.7201]	73.9+0.0s
[12800/16000]	[L1: 5.7252]	73.9+0.0s
[14400/16000]	[L1: 5.7344]	73.3+0.0s
[16000/16000]	[L1: 5.7637]	72.7+0.0s
[Epoch 851]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7669]	74.2+0.4s
[3200/16000]	[L1: 5.7873]	75.1+0.0s
[4800/16000]	[L1: 5.7507]	75.5+0.0s
[6400/16000]	[L1: 5.7764]	75.4+0.0s
[8000/16000]	[L1: 5.7202]	75.2+0.0s
[9600/16000]	[L1: 5.7206]	75.3+0.0s
[11200/16000]	[L1: 5.7227]	75.2+0.0s
[12800/16000]	[L1: 5.7336]	75.5+0.0s
[14400/16000]	[L1: 5.7339]	75.7+0.0s
[16000/16000]	[L1: 5.7278]	75.9+0.0s
[Epoch 852]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6883]	75.3+0.5s
[3200/16000]	[L1: 5.6963]	74.8+0.0s
[4800/16000]	[L1: 5.7101]	74.5+0.0s
[6400/16000]	[L1: 5.7496]	75.0+0.0s
[8000/16000]	[L1: 5.7607]	75.2+0.0s
[9600/16000]	[L1: 5.7331]	75.2+0.0s
[11200/16000]	[L1: 5.7419]	75.0+0.0s
[12800/16000]	[L1: 5.7349]	73.5+0.0s
[14400/16000]	[L1: 5.7441]	73.4+0.0s
[16000/16000]	[L1: 5.7567]	74.2+0.0s
[Epoch 853]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6058]	74.9+0.4s
[3200/16000]	[L1: 5.6849]	74.7+0.0s
[4800/16000]	[L1: 5.6629]	75.1+0.0s
[6400/16000]	[L1: 5.6871]	75.2+0.0s
[8000/16000]	[L1: 5.6588]	73.8+0.0s
[9600/16000]	[L1: 5.6810]	73.5+0.0s
[11200/16000]	[L1: 5.7001]	73.7+0.0s
[12800/16000]	[L1: 5.6995]	73.4+0.0s
[14400/16000]	[L1: 5.7184]	73.2+0.0s
[16000/16000]	[L1: 5.7307]	73.3+0.0s
[Epoch 854]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7775]	73.8+0.4s
[3200/16000]	[L1: 5.7697]	74.8+0.0s
[4800/16000]	[L1: 5.7553]	74.4+0.0s
[6400/16000]	[L1: 5.7734]	74.2+0.0s
[8000/16000]	[L1: 5.7747]	74.5+0.0s
[9600/16000]	[L1: 5.7744]	75.0+0.0s
[11200/16000]	[L1: 5.7479]	74.9+0.0s
[12800/16000]	[L1: 5.7372]	73.2+0.0s
[14400/16000]	[L1: 5.7263]	73.4+0.0s
[16000/16000]	[L1: 5.7350]	74.2+0.0s
[Epoch 855]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7770]	73.5+0.4s
[3200/16000]	[L1: 5.7199]	74.4+0.0s
[4800/16000]	[L1: 5.7695]	74.1+0.0s
[6400/16000]	[L1: 5.7478]	73.3+0.0s
[8000/16000]	[L1: 5.7366]	73.5+0.0s
[9600/16000]	[L1: 5.7262]	74.1+0.0s
[11200/16000]	[L1: 5.7093]	74.0+0.0s
[12800/16000]	[L1: 5.7156]	73.4+0.0s
[14400/16000]	[L1: 5.7253]	73.5+0.0s
[16000/16000]	[L1: 5.7423]	73.3+0.0s
[Epoch 856]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7167]	73.1+0.4s
[3200/16000]	[L1: 5.6885]	73.9+0.0s
[4800/16000]	[L1: 5.6829]	73.6+0.0s
[6400/16000]	[L1: 5.7316]	73.8+0.0s
[8000/16000]	[L1: 5.7322]	73.7+0.0s
[9600/16000]	[L1: 5.7457]	73.8+0.0s
[11200/16000]	[L1: 5.7730]	73.7+0.0s
[12800/16000]	[L1: 5.7291]	73.2+0.0s
[14400/16000]	[L1: 5.7224]	74.8+0.0s
[16000/16000]	[L1: 5.7176]	73.7+0.0s
[Epoch 857]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.4519]	73.9+0.4s
[3200/16000]	[L1: 5.5893]	74.7+0.0s
[4800/16000]	[L1: 5.6937]	75.2+0.0s
[6400/16000]	[L1: 5.6676]	75.1+0.0s
[8000/16000]	[L1: 5.6715]	74.4+0.0s
[9600/16000]	[L1: 5.7268]	73.8+0.0s
[11200/16000]	[L1: 5.7292]	73.8+0.0s
[12800/16000]	[L1: 5.7187]	74.2+0.0s
[14400/16000]	[L1: 5.7176]	74.1+0.0s
[16000/16000]	[L1: 5.7234]	73.9+0.0s
[Epoch 858]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8030]	74.7+0.4s
[3200/16000]	[L1: 5.7982]	75.5+0.0s
[4800/16000]	[L1: 5.7958]	75.2+0.0s
[6400/16000]	[L1: 5.7987]	73.9+0.0s
[8000/16000]	[L1: 5.7934]	74.5+0.0s
[9600/16000]	[L1: 5.8110]	73.2+0.0s
[11200/16000]	[L1: 5.8050]	74.3+0.0s
[12800/16000]	[L1: 5.7942]	73.7+0.0s
[14400/16000]	[L1: 5.7876]	72.9+0.0s
[16000/16000]	[L1: 5.7740]	73.9+0.0s
[Epoch 859]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8375]	73.6+0.4s
[3200/16000]	[L1: 5.7486]	74.0+0.0s
[4800/16000]	[L1: 5.7502]	73.5+0.0s
[6400/16000]	[L1: 5.7526]	74.3+0.0s
[8000/16000]	[L1: 5.7472]	73.8+0.0s
[9600/16000]	[L1: 5.7500]	75.0+0.0s
[11200/16000]	[L1: 5.7479]	74.9+0.0s
[12800/16000]	[L1: 5.7429]	73.7+0.0s
[14400/16000]	[L1: 5.7525]	73.8+0.0s
[16000/16000]	[L1: 5.7523]	74.0+0.0s
[Epoch 860]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8914]	75.2+0.4s
[3200/16000]	[L1: 5.7639]	74.3+0.0s
[4800/16000]	[L1: 5.7794]	74.3+0.0s
[6400/16000]	[L1: 5.8236]	74.7+0.0s
[8000/16000]	[L1: 5.7878]	75.0+0.0s
[9600/16000]	[L1: 5.7410]	74.5+0.0s
[11200/16000]	[L1: 5.7591]	75.5+0.0s
[12800/16000]	[L1: 5.7701]	75.1+0.0s
[14400/16000]	[L1: 5.7535]	75.0+0.0s
[16000/16000]	[L1: 5.7590]	74.5+0.0s
[Epoch 861]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7287]	75.2+0.4s
[3200/16000]	[L1: 5.8452]	74.6+0.0s
[4800/16000]	[L1: 5.7865]	74.2+0.0s
[6400/16000]	[L1: 5.7677]	74.0+0.0s
[8000/16000]	[L1: 5.7787]	74.5+0.0s
[9600/16000]	[L1: 5.7674]	73.9+0.0s
[11200/16000]	[L1: 5.7557]	73.6+0.0s
[12800/16000]	[L1: 5.7313]	74.1+0.0s
[14400/16000]	[L1: 5.7269]	73.3+0.0s
[16000/16000]	[L1: 5.7425]	73.6+0.0s
[Epoch 862]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6779]	74.1+0.4s
[3200/16000]	[L1: 5.6797]	73.3+0.0s
[4800/16000]	[L1: 5.6278]	73.6+0.0s
[6400/16000]	[L1: 5.6234]	72.6+0.0s
[8000/16000]	[L1: 5.6805]	73.0+0.0s
[9600/16000]	[L1: 5.6852]	73.7+0.0s
[11200/16000]	[L1: 5.6949]	73.4+0.0s
[12800/16000]	[L1: 5.7072]	75.3+0.0s
[14400/16000]	[L1: 5.7040]	74.8+0.0s
[16000/16000]	[L1: 5.7267]	74.3+0.0s
[Epoch 863]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5932]	74.4+0.5s
[3200/16000]	[L1: 5.6592]	73.8+0.0s
[4800/16000]	[L1: 5.7034]	74.6+0.0s
[6400/16000]	[L1: 5.6987]	74.9+0.0s
[8000/16000]	[L1: 5.7102]	74.1+0.0s
[9600/16000]	[L1: 5.7480]	75.2+0.0s
[11200/16000]	[L1: 5.7392]	74.5+0.0s
[12800/16000]	[L1: 5.7442]	74.7+0.0s
[14400/16000]	[L1: 5.7469]	74.0+0.0s
[16000/16000]	[L1: 5.7301]	73.5+0.0s
[Epoch 864]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5064]	74.8+0.4s
[3200/16000]	[L1: 5.7521]	74.7+0.0s
[4800/16000]	[L1: 5.7092]	74.6+0.0s
[6400/16000]	[L1: 5.7085]	74.2+0.0s
[8000/16000]	[L1: 5.7388]	74.8+0.0s
[9600/16000]	[L1: 5.7327]	73.5+0.0s
[11200/16000]	[L1: 5.7420]	73.3+0.0s
[12800/16000]	[L1: 5.7381]	73.5+0.0s
[14400/16000]	[L1: 5.7535]	73.3+0.0s
[16000/16000]	[L1: 5.7651]	73.4+0.0s
[Epoch 865]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5236]	73.4+0.5s
[3200/16000]	[L1: 5.6849]	73.3+0.0s
[4800/16000]	[L1: 5.7278]	73.0+0.0s
[6400/16000]	[L1: 5.7409]	73.1+0.0s
[8000/16000]	[L1: 5.7517]	73.0+0.0s
[9600/16000]	[L1: 5.7499]	73.5+0.0s
[11200/16000]	[L1: 5.7262]	73.3+0.0s
[12800/16000]	[L1: 5.7110]	73.1+0.0s
[14400/16000]	[L1: 5.7210]	72.4+0.0s
[16000/16000]	[L1: 5.7364]	72.8+0.0s
[Epoch 866]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.9671]	73.2+0.4s
[3200/16000]	[L1: 5.8632]	73.1+0.0s
[4800/16000]	[L1: 5.9233]	73.0+0.0s
[6400/16000]	[L1: 5.8310]	73.1+0.0s
[8000/16000]	[L1: 5.8114]	73.2+0.0s
[9600/16000]	[L1: 5.8047]	73.3+0.0s
[11200/16000]	[L1: 5.7956]	73.3+0.0s
[12800/16000]	[L1: 5.8008]	73.4+0.0s
[14400/16000]	[L1: 5.7810]	73.6+0.0s
[16000/16000]	[L1: 5.7863]	72.9+0.0s
[Epoch 867]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8193]	73.5+0.4s
[3200/16000]	[L1: 5.7336]	73.1+0.0s
[4800/16000]	[L1: 5.8144]	73.3+0.0s
[6400/16000]	[L1: 5.8074]	73.3+0.0s
[8000/16000]	[L1: 5.8023]	73.4+0.0s
[9600/16000]	[L1: 5.7911]	73.6+0.0s
[11200/16000]	[L1: 5.7893]	73.3+0.0s
[12800/16000]	[L1: 5.7781]	73.1+0.0s
[14400/16000]	[L1: 5.7660]	73.3+0.0s
[16000/16000]	[L1: 5.7617]	72.9+0.0s
[Epoch 868]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7408]	73.3+0.4s
[3200/16000]	[L1: 5.7070]	73.1+0.0s
[4800/16000]	[L1: 5.7152]	73.2+0.0s
[6400/16000]	[L1: 5.7648]	73.2+0.0s
[8000/16000]	[L1: 5.7683]	73.4+0.0s
[9600/16000]	[L1: 5.7756]	73.4+0.0s
[11200/16000]	[L1: 5.7639]	73.5+0.0s
[12800/16000]	[L1: 5.7726]	73.4+0.0s
[14400/16000]	[L1: 5.7658]	73.4+0.0s
[16000/16000]	[L1: 5.7656]	73.3+0.0s
[Epoch 869]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8918]	73.4+0.4s
[3200/16000]	[L1: 5.8184]	73.2+0.0s
[4800/16000]	[L1: 5.8223]	73.2+0.0s
[6400/16000]	[L1: 5.7381]	72.9+0.0s
[8000/16000]	[L1: 5.8145]	72.5+0.0s
[9600/16000]	[L1: 5.7889]	73.5+0.0s
[11200/16000]	[L1: 5.7815]	73.1+0.0s
[12800/16000]	[L1: 5.7724]	73.0+0.0s
[14400/16000]	[L1: 5.7455]	73.3+0.0s
[16000/16000]	[L1: 5.7565]	73.1+0.0s
[Epoch 870]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8570]	73.5+0.4s
[3200/16000]	[L1: 5.8528]	72.7+0.0s
[4800/16000]	[L1: 5.7783]	73.2+0.0s
[6400/16000]	[L1: 5.7800]	73.1+0.0s
[8000/16000]	[L1: 5.7898]	73.0+0.0s
[9600/16000]	[L1: 5.7638]	73.6+0.0s
[11200/16000]	[L1: 5.7756]	73.4+0.0s
[12800/16000]	[L1: 5.7751]	73.7+0.0s
[14400/16000]	[L1: 5.7424]	73.9+0.0s
[16000/16000]	[L1: 5.7300]	73.7+0.0s
[Epoch 871]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6933]	73.8+0.4s
[3200/16000]	[L1: 5.7583]	73.6+0.0s
[4800/16000]	[L1: 5.8277]	73.7+0.0s
[6400/16000]	[L1: 5.8139]	73.7+0.0s
[8000/16000]	[L1: 5.7920]	73.5+0.0s
[9600/16000]	[L1: 5.7662]	73.6+0.0s
[11200/16000]	[L1: 5.7769]	73.5+0.0s
[12800/16000]	[L1: 5.7544]	73.9+0.0s
[14400/16000]	[L1: 5.7555]	73.5+0.0s
[16000/16000]	[L1: 5.7445]	73.3+0.0s
[Epoch 872]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6316]	73.5+0.4s
[3200/16000]	[L1: 5.7200]	73.5+0.0s
[4800/16000]	[L1: 5.7131]	72.5+0.0s
[6400/16000]	[L1: 5.7293]	72.2+0.0s
[8000/16000]	[L1: 5.7592]	72.4+0.0s
[9600/16000]	[L1: 5.7593]	72.7+0.0s
[11200/16000]	[L1: 5.7456]	72.2+0.0s
[12800/16000]	[L1: 5.7449]	72.3+0.0s
[14400/16000]	[L1: 5.7383]	72.2+0.0s
[16000/16000]	[L1: 5.7562]	73.5+0.0s
[Epoch 873]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8374]	72.8+0.4s
[3200/16000]	[L1: 5.7820]	72.3+0.0s
[4800/16000]	[L1: 5.7926]	72.4+0.0s
[6400/16000]	[L1: 5.7231]	72.6+0.0s
[8000/16000]	[L1: 5.7404]	72.3+0.0s
[9600/16000]	[L1: 5.7346]	72.3+0.0s
[11200/16000]	[L1: 5.7329]	72.2+0.0s
[12800/16000]	[L1: 5.7532]	72.5+0.0s
[14400/16000]	[L1: 5.7524]	72.2+0.0s
[16000/16000]	[L1: 5.7481]	72.2+0.0s
[Epoch 874]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.8562]	72.4+0.4s
[3200/16000]	[L1: 5.7851]	72.6+0.0s
[4800/16000]	[L1: 5.8325]	72.3+0.0s
[6400/16000]	[L1: 5.8080]	72.3+0.0s
[8000/16000]	[L1: 5.8291]	72.3+0.0s
[9600/16000]	[L1: 5.8237]	72.3+0.0s
[11200/16000]	[L1: 5.8077]	72.4+0.0s
[12800/16000]	[L1: 5.7684]	72.7+0.0s
[14400/16000]	[L1: 5.7618]	72.7+0.0s
[16000/16000]	[L1: 5.7501]	73.3+0.0s
[Epoch 875]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7538]	73.3+0.4s
[3200/16000]	[L1: 5.7367]	73.1+0.0s
[4800/16000]	[L1: 5.7695]	73.2+0.0s
[6400/16000]	[L1: 5.7095]	73.0+0.0s
[8000/16000]	[L1: 5.7256]	73.0+0.0s
[9600/16000]	[L1: 5.7280]	73.1+0.0s
[11200/16000]	[L1: 5.7080]	73.1+0.0s
[12800/16000]	[L1: 5.6971]	73.2+0.0s
[14400/16000]	[L1: 5.6929]	73.1+0.0s
[16000/16000]	[L1: 5.6824]	73.2+0.0s
[Epoch 876]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6389]	73.9+0.4s
[3200/16000]	[L1: 5.7269]	73.1+0.0s
[4800/16000]	[L1: 5.7779]	73.0+0.0s
[6400/16000]	[L1: 5.7650]	73.4+0.0s
[8000/16000]	[L1: 5.7971]	73.2+0.0s
[9600/16000]	[L1: 5.8069]	73.0+0.0s
[11200/16000]	[L1: 5.7937]	73.2+0.0s
[12800/16000]	[L1: 5.7918]	73.2+0.0s
[14400/16000]	[L1: 5.7738]	73.1+0.0s
[16000/16000]	[L1: 5.7629]	73.3+0.0s
[Epoch 877]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7385]	73.4+0.4s
[3200/16000]	[L1: 5.7314]	73.4+0.0s
[4800/16000]	[L1: 5.7383]	73.0+0.0s
[6400/16000]	[L1: 5.7542]	73.0+0.0s
[8000/16000]	[L1: 5.7439]	73.2+0.0s
[9600/16000]	[L1: 5.7225]	73.0+0.0s
[11200/16000]	[L1: 5.7560]	73.2+0.0s
[12800/16000]	[L1: 5.7838]	73.0+0.0s
[14400/16000]	[L1: 5.7581]	73.0+0.0s
[16000/16000]	[L1: 5.7491]	73.1+0.0s
[Epoch 878]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.5689]	73.3+0.4s
[3200/16000]	[L1: 5.6987]	73.1+0.0s
[4800/16000]	[L1: 5.7565]	73.4+0.0s
[6400/16000]	[L1: 5.7524]	73.1+0.0s
[8000/16000]	[L1: 5.7361]	72.5+0.0s
[9600/16000]	[L1: 5.7211]	72.3+0.0s
[11200/16000]	[L1: 5.7585]	72.9+0.0s
[12800/16000]	[L1: 5.7521]	73.1+0.0s
[14400/16000]	[L1: 5.7588]	73.1+0.0s
[16000/16000]	[L1: 5.7493]	72.9+0.0s
[Epoch 879]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7128]	73.4+0.4s
[3200/16000]	[L1: 5.6689]	73.4+0.0s
[4800/16000]	[L1: 5.6607]	73.0+0.0s
[6400/16000]	[L1: 5.6667]	73.1+0.0s
[8000/16000]	[L1: 5.6823]	73.3+0.0s
[9600/16000]	[L1: 5.7475]	72.8+0.0s
[11200/16000]	[L1: 5.7437]	72.3+0.0s
[12800/16000]	[L1: 5.7156]	72.3+0.0s
[14400/16000]	[L1: 5.7128]	73.3+0.0s
[16000/16000]	[L1: 5.7257]	73.5+0.0s
[Epoch 880]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6032]	73.4+0.4s
[3200/16000]	[L1: 5.6134]	73.5+0.0s
[4800/16000]	[L1: 5.6546]	73.2+0.0s
[6400/16000]	[L1: 5.6933]	73.3+0.0s
[8000/16000]	[L1: 5.7003]	73.0+0.0s
[9600/16000]	[L1: 5.6990]	72.9+0.0s
[11200/16000]	[L1: 5.7223]	73.1+0.0s
[12800/16000]	[L1: 5.7426]	73.1+0.0s
[14400/16000]	[L1: 5.7454]	72.4+0.0s
[16000/16000]	[L1: 5.7548]	72.1+0.0s
[Epoch 881]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7099]	72.5+0.4s
[3200/16000]	[L1: 5.7791]	72.4+0.0s
[4800/16000]	[L1: 5.7637]	72.4+0.0s
[6400/16000]	[L1: 5.7809]	72.7+0.0s
[8000/16000]	[L1: 5.7376]	73.1+0.0s
[9600/16000]	[L1: 5.7364]	73.1+0.0s
[11200/16000]	[L1: 5.7354]	72.7+0.0s
[12800/16000]	[L1: 5.7242]	73.1+0.0s
[14400/16000]	[L1: 5.7115]	72.6+0.0s
[16000/16000]	[L1: 5.7137]	72.4+0.0s
[Epoch 882]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6587]	72.4+0.5s
[3200/16000]	[L1: 5.7099]	73.1+0.0s
[4800/16000]	[L1: 5.6769]	73.4+0.0s
[6400/16000]	[L1: 5.7090]	73.6+0.0s
[8000/16000]	[L1: 5.6993]	73.2+0.0s
[9600/16000]	[L1: 5.7683]	73.3+0.0s
[11200/16000]	[L1: 5.7806]	73.5+0.0s
[12800/16000]	[L1: 5.7772]	73.4+0.0s
[14400/16000]	[L1: 5.7777]	73.3+0.0s
[16000/16000]	[L1: 5.7633]	73.3+0.0s
[Epoch 883]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7761]	72.7+0.4s
[3200/16000]	[L1: 5.6761]	72.5+0.0s
[4800/16000]	[L1: 5.6864]	72.5+0.0s
[6400/16000]	[L1: 5.7295]	72.4+0.0s
[8000/16000]	[L1: 5.7341]	72.4+0.0s
[9600/16000]	[L1: 5.7529]	72.4+0.0s
[11200/16000]	[L1: 5.7397]	72.3+0.0s
[12800/16000]	[L1: 5.7431]	73.1+0.0s
[14400/16000]	[L1: 5.7472]	73.2+0.0s
[16000/16000]	[L1: 5.7403]	73.3+0.0s
[Epoch 884]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7706]	73.6+0.4s
[3200/16000]	[L1: 5.7280]	73.2+0.0s
[4800/16000]	[L1: 5.7808]	73.4+0.0s
[6400/16000]	[L1: 5.8057]	73.1+0.0s
[8000/16000]	[L1: 5.7739]	73.3+0.0s
[9600/16000]	[L1: 5.7406]	73.4+0.0s
[11200/16000]	[L1: 5.7348]	73.2+0.0s
[12800/16000]	[L1: 5.7401]	73.3+0.0s
[14400/16000]	[L1: 5.7348]	73.2+0.0s
[16000/16000]	[L1: 5.7322]	73.5+0.0s
[Epoch 885]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6003]	73.8+0.4s
[3200/16000]	[L1: 5.7824]	73.2+0.0s
[4800/16000]	[L1: 5.7988]	73.2+0.0s
[6400/16000]	[L1: 5.7902]	72.8+0.0s
[8000/16000]	[L1: 5.7522]	72.6+0.0s
[9600/16000]	[L1: 5.7477]	73.4+0.0s
[11200/16000]	[L1: 5.7388]	73.3+0.0s
[12800/16000]	[L1: 5.7582]	73.2+0.0s
[14400/16000]	[L1: 5.7672]	73.2+0.0s
[16000/16000]	[L1: 5.7627]	73.0+0.0s
[Epoch 886]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.7899]	73.2+0.4s
[3200/16000]	[L1: 5.8015]	73.1+0.0s
[4800/16000]	[L1: 5.8239]	72.9+0.0s
[6400/16000]	[L1: 5.7985]	73.0+0.0s
[8000/16000]	[L1: 5.7998]	73.1+0.0s
[9600/16000]	[L1: 5.8143]	72.9+0.0s
[11200/16000]	[L1: 5.8088]	72.9+0.0s
[12800/16000]	[L1: 5.7908]	72.9+0.0s
[14400/16000]	[L1: 5.8022]	72.8+0.0s
[16000/16000]	[L1: 5.7784]	72.9+0.0s
[Epoch 887]	Learning rate: 1.25e-5
[1600/16000]	[L1: 5.6300]	73.1+0.4s
[3200/16000]	[L1: 5.6117]	73.2+0.0s
[4800/16000]	[L1: 5.6284]	73.2+0.0s
[6400/16000]	[L1: 5.6738]	73.4+0.0s
[8000/16000]	[L1: 5.7122]	73.2+0.0s
[9600/16000]	[L1: 5.7345]	73.0+0.0s
[11200/16000]	[L1: 5.7413]	73.1+0.0s
[12800/16000]	[L1: 5.7386]	73.2+0.0s
[14400/16000]	[L1: 5.7562]	73.0+0.0s
[16000/16000]	[L1: 5.7633]	73.4+0.0s
[Epoch 888]	Learning rate: 1.25e-5

